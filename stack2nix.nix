# Generated using stack2nix 0.2.3.

{ pkgs ? (import <nixpkgs> {})
, compiler ? pkgs.haskell.packages.ghc865
}:

with pkgs.haskell.lib;

let
  stackPackages = { pkgs, stdenv, callPackage }:
    self: {
      array = null;
      base = null;
      bin-package-db = null;
      binary = null;
      bytestring = null;
      containers = null;
      deepseq = null;
      directory = null;
      filepath = null;
      ghc-boot = null;
      ghc-boot-th = null;
      ghc-prim = null;
      ghci = null;
      hoopl = null;
      hpc = null;
      integer-gmp = null;
      pretty = null;
      process = null;
      rts = null;
      stm = null;
      template-haskell = null;
      terminfo = null;
      text = null;
      time = null;
      transformers = null;
      unix = null;
      xhtml = null;
      "ALUT" = callPackage
        ({ mkDerivation, base, freealut, OpenAL, StateVar, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "ALUT";
           version = "2.4.0.3";
           sha256 = "71891b0a1d96a6a07d1404e542dc9c86b30f757543c294de9644af98f781d912";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base OpenAL StateVar transformers ];
           librarySystemDepends = [ freealut ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-openal/ALUT";
           description = "A binding for the OpenAL Utility Toolkit";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) freealut;};
      "ANum" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ANum";
           version = "0.2.0.2";
           sha256 = "f6ae0d1b663100a2aa3dfdab12f4af0851408659eb5c2f78b8b443b0d29dbb1a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/ANum#readme";
           description = "Num instance for Applicatives provided via the ANum newtype";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Allure" = callPackage
        ({ mkDerivation, async, base, enummapset, filepath, ghc-compact
         , LambdaHack, optparse-applicative, primitive, random, stdenv
         , template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "Allure";
           version = "0.9.5.0";
           sha256 = "8180fe070633bfa5515de8f7443421044e7ad4ee050f0a92c048cec5f2c88132";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             async base enummapset filepath ghc-compact LambdaHack
             optparse-applicative primitive random template-haskell text
             transformers
           ];
           executableHaskellDepends = [
             async base filepath LambdaHack optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://allureofthestars.com";
           description = "Near-future Sci-Fi roguelike and tactical squad combat game";
           license = stdenv.lib.licenses.agpl3Plus;
         }) {};
      "Boolean" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "Boolean";
           version = "0.2.4";
           sha256 = "67216013b02b8ac5b534a1ef25f409f930eea1a85eae801933a01ad43145eef8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Generalized booleans and numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "BoundedChan" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "BoundedChan";
           version = "1.0.3.0";
           sha256 = "531ceaed7f62844c2a63a7cbfdcab332ea5eaa218e9922ca3305580438adc46d";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of bounded channels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Cabal" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , deepseq, directory, filepath, mtl, parsec, pretty, process
         , stdenv, text, time, transformers, unix
         }:
         mkDerivation {
           pname = "Cabal";
           version = "2.4.1.0";
           sha256 = "736a902da9fb2c826e75e9f7b4b591983bf58a6a62c8cae9866f6a9d5ace3594";
           revision = "2";
           editedCabalFile = "04kg5xh8yabmp1ymk32gw2r66l76338rsglq8i4j2913bhq23vwa";
           setupHaskellDepends = [ mtl parsec ];
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             mtl parsec pretty process text time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/cabal/";
           description = "A framework for packaging Haskell software";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ChannelT" = callPackage
        ({ mkDerivation, base, free, mmorph, mtl, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "ChannelT";
           version = "0.0.0.7";
           sha256 = "3e215d425e3cfccf2e4d84b1402fb39a2081cb33b6556059db616e722a7c77a0";
           libraryHaskellDepends = [ base free mmorph mtl transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pthariensflame/ChannelT";
           description = "Generalized stream processors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart" = callPackage
        ({ mkDerivation, array, base, colour, data-default-class, lens, mtl
         , old-locale, operational, stdenv, time, vector
         }:
         mkDerivation {
           pname = "Chart";
           version = "1.9.3";
           sha256 = "3e17f4ca0112399df627862bb50581f81ec3ebf54b618e3c690f10380b9ec95c";
           revision = "1";
           editedCabalFile = "1is2xvhwyf5j4nls6k162glazd28jj84r2h0bf868q93qdppzgxj";
           libraryHaskellDepends = [
             array base colour data-default-class lens mtl old-locale
             operational time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "A library for generating 2D Charts and Plots";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart-diagrams" = callPackage
        ({ mkDerivation, base, blaze-markup, bytestring, Chart, colour
         , containers, data-default-class, diagrams-core, diagrams-lib
         , diagrams-postscript, diagrams-svg, lens, mtl, old-locale
         , operational, stdenv, svg-builder, SVGFonts, text, time
         }:
         mkDerivation {
           pname = "Chart-diagrams";
           version = "1.9.3";
           sha256 = "966f8570f56d31d5581c2336e03332b579098cc9568d450d7e535d090afebe1c";
           revision = "1";
           editedCabalFile = "1hm4z73k60ndb5jvy6wxviiyv9i0qd6diz8kf36yfbayzacqianw";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-markup bytestring Chart colour containers
             data-default-class diagrams-core diagrams-lib diagrams-postscript
             diagrams-svg lens mtl old-locale operational svg-builder SVGFonts
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "Diagrams backend for Charts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Clipboard" = callPackage
        ({ mkDerivation, base, directory, stdenv, unix, utf8-string, X11 }:
         mkDerivation {
           pname = "Clipboard";
           version = "2.3.2.0";
           sha256 = "3f82c8183a599025c5199ba50d0661512683e9cf29e6054858f1abe2ab8b25b7";
           libraryHaskellDepends = [ base directory unix utf8-string X11 ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Clipboard";
           description = "System clipboard interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "DAV" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , data-default, exceptions, haskeline, http-client, http-client-tls
         , http-types, lens, mtl, network, network-uri, optparse-applicative
         , stdenv, transformers, transformers-base, transformers-compat
         , utf8-string, xml-conduit, xml-hamlet
         }:
         mkDerivation {
           pname = "DAV";
           version = "1.3.4";
           sha256 = "5e3b825290a0bd4c9da1c814b5e67901b0f9f1d16a88effaa7e060a81c895bc7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring case-insensitive containers data-default exceptions
             http-client http-client-tls http-types lens mtl transformers
             transformers-base transformers-compat utf8-string xml-conduit
             xml-hamlet
           ];
           executableHaskellDepends = [
             base bytestring case-insensitive containers data-default exceptions
             haskeline http-client http-client-tls http-types lens mtl network
             network-uri optparse-applicative transformers transformers-base
             transformers-compat utf8-string xml-conduit xml-hamlet
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hDAV";
           description = "RFC 4918 WebDAV support";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "DBFunctor" = callPackage
        ({ mkDerivation, base, bytestring, cassava, cereal, containers
         , deepseq, either, MissingH, stdenv, text, time, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "DBFunctor";
           version = "0.1.1.1";
           sha256 = "640686bb59b95eec912dc96b15da298192d4168719c1adedddc5d3e4e4ab7858";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring cassava cereal containers deepseq either MissingH
             text time transformers unordered-containers vector
           ];
           executableHaskellDepends = [
             base bytestring cassava cereal containers deepseq either MissingH
             text time transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nkarag/haskell-DBFunctor#readme";
           description = "DBFunctor - Functional Data Management => ETL/ELT Data Processing in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Decimal" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "Decimal";
           version = "0.5.1";
           sha256 = "575ca5c65a8ea5a5bf2cd7b794a0d16622082cb501bf4b0327c5895c0b80f34c";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
           description = "Decimal numbers with variable precision";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Diff" = callPackage
        ({ mkDerivation, array, base, pretty, stdenv }:
         mkDerivation {
           pname = "Diff";
           version = "0.3.4";
           sha256 = "77b7daec5a79ade779706748f11b4d9b8f805e57a68e7406c3b5a1dee16e0c2f";
           libraryHaskellDepends = [ array base pretty ];
           doHaddock = false;
           doCheck = false;
           description = "O(ND) diff algorithm in haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ENIG" = callPackage
        ({ mkDerivation, base, stdenv, text, unicode-transforms, vector }:
         mkDerivation {
           pname = "ENIG";
           version = "0.0.1.0";
           sha256 = "03b29362c5bf0b33ded4e776d0252e71f3227da7c93cefa3d67348ab976f66ff";
           libraryHaskellDepends = [ base text unicode-transforms vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/QuietJoon/ENIG#readme";
           description = "Auto Korean conjugator/adjustor/adopter/converter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Earley" = callPackage
        ({ mkDerivation, base, ListLike, stdenv }:
         mkDerivation {
           pname = "Earley";
           version = "0.13.0.1";
           sha256 = "1e60bcfda0d7441ce2886d7f3523e017e74c225506dd9d0e7a3c012959943899";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ListLike ];
           doHaddock = false;
           doCheck = false;
           description = "Parsing all context-free grammars using Earley's algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Ebnf2ps" = callPackage
        ({ mkDerivation, array, base, containers, directory, happy
         , old-time, stdenv, unix
         }:
         mkDerivation {
           pname = "Ebnf2ps";
           version = "1.0.15";
           sha256 = "0ecce7d721d6c8993fa6ba6cfb16f1101d85e00bbaf0b6941d36a00badea2b4b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base containers directory old-time unix
           ];
           executableToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/FranklinChen/Ebnf2ps";
           description = "Peter's Syntax Diagram Drawing Tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FenwickTree" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, template-haskell }:
         mkDerivation {
           pname = "FenwickTree";
           version = "0.1.2.1";
           sha256 = "9c172d62b24365e663a0355e8eaa34362a1a769c18a64391939a9b50e384f03c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base QuickCheck template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/FenwickTree";
           description = "Data structure for fast query and update of cumulative sums";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FindBin" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "FindBin";
           version = "0.0.5";
           sha256 = "279c7967e0803ca3b9a0a1956ce7ba9b9a2294eb9f971bea8a557b5f80ddfda4";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/audreyt/findbin";
           description = "Locate directory of original program";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FloatingHex" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "FloatingHex";
           version = "0.4";
           sha256 = "b277054db48d2dec62e3831586f218cbe0a056dec44dbc032e9a73087425a24c";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Read and write hexadecimal floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FontyFruity" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , directory, filepath, stdenv, text, vector, xml
         }:
         mkDerivation {
           pname = "FontyFruity";
           version = "0.5.3.5";
           sha256 = "2deb5ba03a5326c7dd364900b86e427344266c4866b863e8325bf6eade760a9a";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq directory filepath text
             vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "A true type file format loader";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GLFW-b" = callPackage
        ({ mkDerivation, base, bindings-GLFW, deepseq, stdenv }:
         mkDerivation {
           pname = "GLFW-b";
           version = "3.2.1.1";
           sha256 = "afbc8206444059beb9a8aeb65ce5474ab066254830a3472ab5f3ec4bfa6a4ee6";
           libraryHaskellDepends = [ base bindings-GLFW deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to GLFW OpenGL library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GLURaw" = callPackage
        ({ mkDerivation, base, libGL, libGLU, OpenGLRaw, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "GLURaw";
           version = "2.0.0.4";
           sha256 = "b863fd5cb26b1a37afb66ef8a81c0335bc073d33b0a67ec5190dfc62cb885dc4";
           libraryHaskellDepends = [ base OpenGLRaw transformers ];
           librarySystemDepends = [ libGL libGLU ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A raw binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL; inherit (pkgs) libGLU;};
      "GLUT" = callPackage
        ({ mkDerivation, array, base, containers, OpenGL, StateVar, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "GLUT";
           version = "2.7.0.15";
           sha256 = "e99527f965849756e99b132fd6975747ec0952476454e0b9ec90526e9cdde108";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base containers OpenGL StateVar transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A binding for the OpenGL Utility Toolkit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GenericPretty" = callPackage
        ({ mkDerivation, base, ghc-prim, pretty, stdenv }:
         mkDerivation {
           pname = "GenericPretty";
           version = "1.2.2";
           sha256 = "eeea7ae7081f866de6a83ab8c4c335806b8cbb679d85e416e6224384ffcdae3c";
           libraryHaskellDepends = [ base ghc-prim pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RazvanRanca/GenericPretty";
           description = "A generic, derivable, haskell pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Glob" = callPackage
        ({ mkDerivation, base, containers, directory, dlist, filepath
         , stdenv, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "Glob";
           version = "0.10.0";
           sha256 = "473355bd6ba0a97902e0edada1acbc0d76cfda77596f0188b2cc0ae34272a324";
           revision = "1";
           editedCabalFile = "0zfd4wimwgnmgqkz9g9jqj2dq2r50wdcqmcz6v7is1zrpwhszk5v";
           libraryHaskellDepends = [
             base containers directory dlist filepath transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://iki.fi/matti.niemenmaa/glob/";
           description = "Globbing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "H" = callPackage
        ({ mkDerivation, base, bytestring, cmdargs, file-embed, inline-r
         , pretty, process, stdenv, temporary, vector
         }:
         mkDerivation {
           pname = "H";
           version = "0.9.0.1";
           sha256 = "5fc04dfefcac9f6882cea9e65755479f7b1d853618c89258a005df63c8d57134";
           revision = "1";
           editedCabalFile = "07pddiap3jzcnc09v442wq30j46nmkdibilzcv69hz5imcnmhz0h";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring cmdargs file-embed inline-r pretty process
             temporary vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://tweag.github.io/HaskellR";
           description = "The Haskell/R mixed programming environment";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HCodecs" = callPackage
        ({ mkDerivation, array, base, bytestring, QuickCheck, random
         , semigroups, stdenv
         }:
         mkDerivation {
           pname = "HCodecs";
           version = "0.5.1";
           sha256 = "a724616b79ac12c2d661dc3f54cfa0e7d530d1ba3eafa1e6c3e7116e035a3143";
           libraryHaskellDepends = [
             array base bytestring QuickCheck random semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
           description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HDBC" = callPackage
        ({ mkDerivation, base, bytestring, containers, convertible, mtl
         , old-time, stdenv, text, time, utf8-string
         }:
         mkDerivation {
           pname = "HDBC";
           version = "2.4.0.3";
           sha256 = "1e63bc1f3d1818e39a231eb5467546e0705554de38aeca43fd4ad4cb53a2626f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers convertible mtl old-time text time
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdbc/hdbc";
           description = "Haskell Database Connectivity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HDBC-mysql" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, HDBC, mysqlclient
         , openssl, stdenv, time, utf8-string, zlib
         }:
         mkDerivation {
           pname = "HDBC-mysql";
           version = "0.7.1.0";
           sha256 = "81c985d4a243c965930fb412b3175ca799ba66985f8b6844014fd600df1da7cf";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring HDBC time utf8-string ];
           librarySystemDepends = [ mysqlclient openssl zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ryantm/hdbc-mysql";
           description = "MySQL driver for HDBC";
           license = "LGPL";
         }) {inherit (pkgs) mysqlclient; inherit (pkgs) openssl; 
inherit (pkgs) zlib;};
      "HDBC-session" = callPackage
        ({ mkDerivation, base, HDBC, stdenv }:
         mkDerivation {
           pname = "HDBC-session";
           version = "0.1.2.0";
           sha256 = "aa057f18bbc9d2f9876152246682f546c9cf140192515c7c23b5be2fccc296e3";
           libraryHaskellDepends = [ base HDBC ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Bracketed connection for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HSet" = callPackage
        ({ mkDerivation, base, containers, hashable, hashtables, stdenv }:
         mkDerivation {
           pname = "HSet";
           version = "0.0.1";
           sha256 = "eba93be5a76581585ae33af6babe9c2718fae307d41989cd36a605d9b0e8d16a";
           libraryHaskellDepends = [ base containers hashable hashtables ];
           doHaddock = false;
           doCheck = false;
           description = "Faux heterogeneous sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HSlippyMap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "HSlippyMap";
           version = "3.0.1";
           sha256 = "27eb37f3b1e70780173e732a949776fc0b0ecc5b1ba515c2e239d6545a2beb0d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/apeyroux/HSlippyMap";
           description = "OpenStreetMap Slippy Map";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HStringTemplate" = callPackage
        ({ mkDerivation, array, base, blaze-builder, bytestring, containers
         , deepseq, directory, filepath, mtl, old-locale, parsec, pretty
         , semigroups, stdenv, syb, template-haskell, text, time, void
         }:
         mkDerivation {
           pname = "HStringTemplate";
           version = "0.8.7";
           sha256 = "4f4ea4aa2e45e7c45821b87b0105c201fbadebc2f2d00c211e728403a0af6b0e";
           revision = "1";
           editedCabalFile = "0s7y606q2q0vnbg9c51kypawyvapva60i2lw1dg1bij50aiv5d3i";
           libraryHaskellDepends = [
             array base blaze-builder bytestring containers deepseq directory
             filepath mtl old-locale parsec pretty semigroups syb
             template-haskell text time void
           ];
           doHaddock = false;
           doCheck = false;
           description = "StringTemplate implementation in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HSvm" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "HSvm";
           version = "0.1.1.3.22";
           sha256 = "8f348ff87d7312a5a41d99a1df558df72592aa34f4520c4b03fad4376e0f326e";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell Bindings for libsvm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HTF" = callPackage
        ({ mkDerivation, aeson, array, base, base64-bytestring, bytestring
         , containers, cpphs, Diff, directory, haskell-src, HUnit
         , lifted-base, monad-control, mtl, old-time, pretty, process
         , QuickCheck, random, regex-compat, stdenv, text, time, unix
         , vector, xmlgen
         }:
         mkDerivation {
           pname = "HTF";
           version = "0.13.2.5";
           sha256 = "365af323c6254ec5c33745e1d42ceeba0940992a43f523608c4dc64d7c49aece";
           revision = "2";
           editedCabalFile = "19lsn1vyrxb1lkybzb01zf6plv46yb0sk9aczqf7dsxvmasxxrbz";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson array base base64-bytestring bytestring containers cpphs Diff
             directory haskell-src HUnit lifted-base monad-control mtl old-time
             pretty process QuickCheck random regex-compat text time unix vector
             xmlgen
           ];
           libraryToolDepends = [ cpphs ];
           executableHaskellDepends = [
             array base cpphs directory HUnit mtl old-time random text
           ];
           executableToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/skogsbaer/HTF/";
           description = "The Haskell Test Framework";
           license = stdenv.lib.licenses.lgpl21;
         }) {};
      "HTTP" = callPackage
        ({ mkDerivation, array, base, bytestring, mtl, network, network-uri
         , parsec, stdenv, time
         }:
         mkDerivation {
           pname = "HTTP";
           version = "4000.3.14";
           sha256 = "a602d7f30e917164c6a634f8cb1f5df4849048858db01380a0875e16e5aa687b";
           revision = "1";
           editedCabalFile = "1inz9grpl9605bbymy6n5y4as54mlykbsiw8wpm5gl6qvxgrf69w";
           libraryHaskellDepends = [
             array base bytestring mtl network network-uri parsec time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/HTTP";
           description = "A library for client-side HTTP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HUnit" = callPackage
        ({ mkDerivation, base, call-stack, deepseq, stdenv }:
         mkDerivation {
           pname = "HUnit";
           version = "1.6.0.0";
           sha256 = "7448e6b966e98e84b7627deba23f71b508e9a61e7bc571d74304a25d30e6d0de";
           libraryHaskellDepends = [ base call-stack deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/HUnit#readme";
           description = "A unit testing framework for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HUnit-approx" = callPackage
        ({ mkDerivation, base, call-stack, HUnit, stdenv }:
         mkDerivation {
           pname = "HUnit-approx";
           version = "1.1.1.1";
           sha256 = "4a4327d328bb8b944c73ec211dd29e953e477f99fd3f9e28fe5200f02fa62baf";
           libraryHaskellDepends = [ base call-stack HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/goldfirere/HUnit-approx";
           description = "Approximate equality for floating point numbers with HUnit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaTeX" = callPackage
        ({ mkDerivation, base, bytestring, containers, hashable, matrix
         , parsec, prettyprinter, QuickCheck, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "HaTeX";
           version = "3.21.0.0";
           sha256 = "e1073af8df0ae90925ff49651229b3a1f8a6fa0966f94dfe7f7a983c90de5b6d";
           libraryHaskellDepends = [
             base bytestring containers hashable matrix parsec prettyprinter
             QuickCheck text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
           description = "The Haskell LaTeX library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HandsomeSoup" = callPackage
        ({ mkDerivation, base, containers, HTTP, hxt, hxt-http, mtl
         , network, network-uri, parsec, stdenv, transformers
         }:
         mkDerivation {
           pname = "HandsomeSoup";
           version = "0.4.2";
           sha256 = "0ae2dad3fbde1efee9e45b84b2aeb5b526cc7b3ea2cbc5715494f7bde3ceeefb";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers HTTP hxt hxt-http mtl network network-uri parsec
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/egonSchiele/HandsomeSoup";
           description = "Work with HTML more easily in HXT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Hoed" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, cereal-text
         , cereal-vector, clock, containers, deepseq, directory, hashable
         , libgraph, open-browser, primitive, process, QuickCheck
         , regex-tdfa, regex-tdfa-text, semigroups, stdenv, strict
         , template-haskell, terminal-size, text, transformers, uniplate
         , unordered-containers, vector, vector-th-unbox
         }:
         mkDerivation {
           pname = "Hoed";
           version = "0.5.1";
           sha256 = "a8f6dc9717e15642f00cd84a8d1030ac6a7c7870f7015e380bd728a843c3f4e7";
           libraryHaskellDepends = [
             array base bytestring cereal cereal-text cereal-vector clock
             containers deepseq directory hashable libgraph open-browser
             primitive process QuickCheck regex-tdfa regex-tdfa-text semigroups
             strict template-haskell terminal-size text transformers uniplate
             unordered-containers vector vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MaartenFaddegon/Hoed";
           description = "Lightweight algorithmic debugging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HsOpenSSL" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, network, openssl, stdenv
         , time
         }:
         mkDerivation {
           pname = "HsOpenSSL";
           version = "0.11.4.17";
           sha256 = "51df0aeedd2b09b010d30c6a0e335191ec8cc0c05a5cdc397d6ef94a59a23b62";
           configureFlags = [ "-f-fast-bignum" ];
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring network time ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vshabanov/HsOpenSSL";
           description = "Partial OpenSSL binding for Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {inherit (pkgs) openssl;};
      "HsOpenSSL-x509-system" = callPackage
        ({ mkDerivation, base, bytestring, HsOpenSSL, stdenv, unix }:
         mkDerivation {
           pname = "HsOpenSSL-x509-system";
           version = "0.1.0.3";
           sha256 = "5bdcb7ae2faba07a374109fea0a1431ae09d080f8574e60ab7a351b46f931f92";
           libraryHaskellDepends = [ base bytestring HsOpenSSL unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/HsOpenSSL-x509-system";
           description = "Use the system's native CA certificate store with HsOpenSSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HsYAML" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, parsec, stdenv
         , text
         }:
         mkDerivation {
           pname = "HsYAML";
           version = "0.1.2.0";
           sha256 = "a45cf71fd793211bcfe7e303369879bde2d6f73a12d51e89d9a91413247452dd";
           revision = "1";
           editedCabalFile = "0j6qmmcz5yqh89hs2cq453maix50q61vl2h0ahj5lg02bygn42cf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers mtl parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/HsYAML";
           description = "Pure Haskell YAML 1.2 parser";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "IPv6Addr" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, iproute, network
         , network-info, random, stdenv, text
         }:
         mkDerivation {
           pname = "IPv6Addr";
           version = "1.1.3";
           sha256 = "699b8ccfdcccc570b540c19c665630783609e8948214d905835cd6f74ad26acd";
           libraryHaskellDepends = [
             aeson attoparsec base iproute network network-info random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/IPv6Addr";
           description = "Library to deal with IPv6 address text representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Imlib" = callPackage
        ({ mkDerivation, array, base, imlib2, stdenv, X11 }:
         mkDerivation {
           pname = "Imlib";
           version = "0.1.2";
           sha256 = "3ed318a7777a3b0752327b7b128edb3a1d562202b480a6d6b793b79ed90ebd1c";
           libraryHaskellDepends = [ array base X11 ];
           librarySystemDepends = [ imlib2 ];
           doHaddock = false;
           doCheck = false;
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) imlib2;};
      "IntervalMap" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "IntervalMap";
           version = "0.6.1.1";
           sha256 = "e8955ae2accc7529b41893a540d0c6943d118554d25857c1f6721f0777dfb46d";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
           description = "Containers for intervals, with efficient search";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq, mtl
         , primitive, stdenv, transformers, vector, zlib
         }:
         mkDerivation {
           pname = "JuicyPixels";
           version = "3.3.4";
           sha256 = "dde000c8802efff8e872d38f7da916ea86d130ba621266dc90d3332cbecd4c61";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq mtl primitive
             transformers vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Twinside/Juicy.Pixels";
           description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels-extra" = callPackage
        ({ mkDerivation, base, JuicyPixels, stdenv }:
         mkDerivation {
           pname = "JuicyPixels-extra";
           version = "0.4.1";
           sha256 = "72d1551b9b9437e275baa96541b41c8c2d25a428ba1bda01200f9760bbf84b4c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base JuicyPixels ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/JuicyPixels-extra";
           description = "Efficiently scale, crop, flip images with JuicyPixels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels-scale-dct" = callPackage
        ({ mkDerivation, base, base-compat, carray, fft, JuicyPixels
         , stdenv
         }:
         mkDerivation {
           pname = "JuicyPixels-scale-dct";
           version = "0.1.2";
           sha256 = "f7381b88446224897e6677692bbdc39cb5b755216212f0ad8050046865cd3013";
           revision = "5";
           editedCabalFile = "0aar0h109fiy6pads3rlmhjsaj5528yn4zay5ps0zf8yb9dyd82s";
           libraryHaskellDepends = [
             base base-compat carray fft JuicyPixels
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
           description = "Scale JuicyPixels images with DCT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "LambdaHack" = callPackage
        ({ mkDerivation, assert-failure, async, base, base-compat, binary
         , bytestring, containers, deepseq, directory, enummapset, filepath
         , ghc-compact, ghc-prim, hashable, hsini, keys, miniutter
         , optparse-applicative, pretty-show, primitive, random, sdl2
         , sdl2-ttf, stdenv, stm, template-haskell, text, time, transformers
         , unordered-containers, vector, vector-binary-instances, zlib
         }:
         mkDerivation {
           pname = "LambdaHack";
           version = "0.9.5.0";
           sha256 = "d0000272d5d97ed80bda3b9a9e6a0e5b22e53ac53e7e1d33b880505e5921a3f8";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             assert-failure async base base-compat binary bytestring containers
             deepseq directory enummapset filepath ghc-compact ghc-prim hashable
             hsini keys miniutter optparse-applicative pretty-show primitive
             random sdl2 sdl2-ttf stm template-haskell text time transformers
             unordered-containers vector vector-binary-instances zlib
           ];
           executableHaskellDepends = [
             async base filepath optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://lambdahack.github.io";
           description = "A game engine library for tactical squad ASCII roguelike dungeon crawlers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "LibZip" = callPackage
        ({ mkDerivation, base, bindings-libzip, bytestring, filepath, mtl
         , stdenv, time, utf8-string
         }:
         mkDerivation {
           pname = "LibZip";
           version = "1.0.1";
           sha256 = "a636e0202d2a3f60d894a814bd9834cf8c62313b67ccc48c295f02a4bebe425f";
           libraryHaskellDepends = [
             base bindings-libzip bytestring filepath mtl time utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitbucket.org/astanin/hs-libzip/";
           description = "Bindings to libzip, a library for manipulating zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "List" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "List";
           version = "0.6.2";
           sha256 = "c4b92be1202fc59112018f76d5b17cd3a659ebc36384a46e000ab2fbaf99b878";
           revision = "1";
           editedCabalFile = "11ws93cdzz7k4nvcld2d74155mdgcvyi6f6an7gpf9z4k523c11n";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yairchu/generator";
           description = "List monad transformer and class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ListLike" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , dlist, fmlist, stdenv, text, utf8-string, vector
         }:
         mkDerivation {
           pname = "ListLike";
           version = "4.6.3";
           sha256 = "9d06237f7384a5dc06c8d8e8e8b41dbc30b25cfb97b3430a96ff934ef53b7683";
           revision = "1";
           editedCabalFile = "1xi5mlk6jm73fdxsjcp41ffr3ygwwykcjf20c122k7hgpkzg1lms";
           libraryHaskellDepends = [
             array base bytestring containers deepseq dlist fmlist text
             utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ddssff/listlike";
           description = "Generalized support for list-like structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ListTree" = callPackage
        ({ mkDerivation, base, directory, filepath, List, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "ListTree";
           version = "0.2.3";
           sha256 = "0b3aa1d34193d9f7f90b4afeea681a79ab1595e8e651cae093f8fca3c50f60cc";
           libraryHaskellDepends = [
             base directory filepath List transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yairchu/generator/tree";
           description = "Trees and monadic trees expressed as monadic lists where the underlying monad is a list";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MemoTrie" = callPackage
        ({ mkDerivation, base, newtype-generics, stdenv }:
         mkDerivation {
           pname = "MemoTrie";
           version = "0.6.10";
           sha256 = "584df0e138093b2f2edc893a69883eb8cbca3402ebdc75392a7742e86156ba53";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base newtype-generics ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/MemoTrie";
           description = "Trie-based memo functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MissingH" = callPackage
        ({ mkDerivation, array, base, containers, directory, filepath
         , hslogger, HUnit, mtl, network, old-locale, old-time, parsec
         , process, random, regex-compat, stdenv, time, unix
         }:
         mkDerivation {
           pname = "MissingH";
           version = "1.4.1.0";
           sha256 = "49ecd2df3ad45d6da64a984e506cd0e2ca02c238a743d757feeea8c4cddce0ca";
           revision = "2";
           editedCabalFile = "1k7d8cgvpmln4imcrfpj4c02n3c5l1gkd5hs4hnar9ln0qh61cfx";
           libraryHaskellDepends = [
             array base containers directory filepath hslogger HUnit mtl network
             old-locale old-time parsec process random regex-compat time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/missingh";
           description = "Large utility library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MonadPrompt" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "MonadPrompt";
           version = "1.0.0.5";
           sha256 = "b012cbbe83650f741c7b7f6eafcc89dec299b0ac74a758b6f3a8cdfc5d3bbeda";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "MonadPrompt, implementation & examples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MonadRandom" = callPackage
        ({ mkDerivation, base, mtl, primitive, random, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "MonadRandom";
           version = "0.5.1.2";
           sha256 = "776f0e69ddea30c9e819f1cd75249377b7fc6f7c8181b90e72ec9c7bc7e33448";
           libraryHaskellDepends = [
             base mtl primitive random transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Random-number generation monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MusicBrainz" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , HTTP, http-conduit, http-types, monad-control, resourcet, stdenv
         , text, time, time-locale-compat, transformers, unliftio-core
         , vector, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "MusicBrainz";
           version = "0.4.1";
           sha256 = "262c29f630a761356454c2a382d149230ea2e621c95102b3d3b30427d7c0cd57";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra HTTP http-conduit
             http-types monad-control resourcet text time time-locale-compat
             transformers unliftio-core vector xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hMusicBrainz";
           description = "interface to MusicBrainz XML2 and JSON web services";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "NineP" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "NineP";
           version = "0.0.2.1";
           sha256 = "4bb1516b9fb340118960043e0c72aa62316be8ff3f78cc8c1354e2fac96dd8cc";
           configureFlags = [ "-f-bytestring-in-base" ];
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://9ph.googlecode.com";
           description = "9P2000 in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "NoHoed" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "NoHoed";
           version = "0.1.1";
           sha256 = "9b663a234c034e0049126ae7f06d1756dc496012177bf18548c6d8caeec43b3d";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/NoHoed";
           description = "Placeholder package to preserve debug ability via conditional builds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "NumInstances" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "NumInstances";
           version = "1.4";
           sha256 = "cbdb2a49346f59ceb5ab38592d7bc52e5205580d431d0ac6d852fd9880e59679";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/NumInstances";
           description = "Instances of numeric classes for functions and tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ObjectName" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "ObjectName";
           version = "1.1.0.1";
           sha256 = "72dbef237580fd4e8567de2de752835bbadd3629f486d1586486d49a49aad210";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/svenpanne/ObjectName";
           description = "Explicitly handled object names";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OneTuple" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "OneTuple";
           version = "0.2.2";
           sha256 = "d82e702485bcbdefbda0d12b6a250d318a269572ee58d63b60eee531e56624dc";
           revision = "3";
           editedCabalFile = "0m3a9fj2h0v529q3i1kq1jfbdj68wxsmhq65hgx2rwjpgb8cqf0z";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Singleton Tuple";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Only" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "Only";
           version = "0.1";
           sha256 = "ab7aa193e8c257d3bda6b0b3c1cbcf74cdaa85ab08cb20c2dd62ba248c1ab265";
           revision = "1";
           editedCabalFile = "1ahk7p34kmh041mz7lyc10nhcxgv2i4z8nvzxvqm2x34gslmsbzr";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "The 1-tuple type or single-value \"collection\"";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OpenAL" = callPackage
        ({ mkDerivation, base, ObjectName, openal, OpenGL, StateVar, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "OpenAL";
           version = "1.7.0.5";
           sha256 = "343a546d94f8d05008896be509149b94ad601c0b48a83dd9e26990a0e97af898";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base ObjectName OpenGL StateVar transformers
           ];
           librarySystemDepends = [ openal ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-openal/ALUT";
           description = "A binding to the OpenAL cross-platform 3D audio API";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openal;};
      "OpenGL" = callPackage
        ({ mkDerivation, base, bytestring, containers, GLURaw, ObjectName
         , OpenGLRaw, StateVar, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "OpenGL";
           version = "3.0.3.0";
           sha256 = "5a05ffc752dfc7dd16818d7b3c7c59a27639e246cdfa1963fa02e3ce247a2e19";
           revision = "1";
           editedCabalFile = "1748mrb6r9mpf5jbrx436lwbg8w6dadyy8dhxw2dwnrj5z7zf741";
           libraryHaskellDepends = [
             base bytestring containers GLURaw ObjectName OpenGLRaw StateVar
             text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://wiki.haskell.org/OpenGL";
           description = "A binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OpenGLRaw" = callPackage
        ({ mkDerivation, base, bytestring, containers, fixed, half, libGL
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "OpenGLRaw";
           version = "3.3.4.0";
           sha256 = "756169eaadfe16627a893c35e7952d82ff466ac77b13ec2d1ea1de8fb5afba3e";
           libraryHaskellDepends = [
             base bytestring containers fixed half text transformers
           ];
           librarySystemDepends = [ libGL ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A raw binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL;};
      "ParsecTools" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "ParsecTools";
           version = "0.0.2.0";
           sha256 = "ef4843353127aa3e6f6ab0aece9f4245225d375802921e151a1751d797857a87";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           description = "Parsec combinators for more complex objects";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "QuasiText" = callPackage
        ({ mkDerivation, attoparsec, base, haskell-src-meta, stdenv
         , template-haskell, text, th-lift-instances
         }:
         mkDerivation {
           pname = "QuasiText";
           version = "0.1.2.6";
           sha256 = "e801d269e25263645ee66fc090040fe9b9c8a8e5bf10485801dd7a5a30e0f119";
           libraryHaskellDepends = [
             attoparsec base haskell-src-meta template-haskell text
             th-lift-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mikeplus64/QuasiText";
           description = "A QuasiQuoter for Text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "QuickCheck" = callPackage
        ({ mkDerivation, base, containers, deepseq, random, splitmix
         , stdenv, template-haskell, transformers
         }:
         mkDerivation {
           pname = "QuickCheck";
           version = "2.13.2";
           sha256 = "7b560baa5853de777702dc23a6f2126ae4adbfdab163295bc56323a706914610";
           libraryHaskellDepends = [
             base containers deepseq random splitmix template-haskell
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nick8325/quickcheck";
           description = "Automatic testing of Haskell programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "RSA" = callPackage
        ({ mkDerivation, base, binary, bytestring, crypto-api
         , crypto-pubkey-types, SHA, stdenv
         }:
         mkDerivation {
           pname = "RSA";
           version = "2.3.1";
           sha256 = "5c929c14de467a9f032641e1b79cbb31a796615c89bf90d059aee5b04eb3671a";
           libraryHaskellDepends = [
             base binary bytestring crypto-api crypto-pubkey-types SHA
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Ranged-sets" = callPackage
        ({ mkDerivation, base, HUnit, QuickCheck, stdenv }:
         mkDerivation {
           pname = "Ranged-sets";
           version = "0.4.0";
           sha256 = "4b25a843f0fbbeda9bf218e3f4be7f1ac58704e433a08ef02ead1dee8d126dea";
           revision = "2";
           editedCabalFile = "1dl69wa509yn2jvl0d4c5c036swq22i6nd73kqn0bp7vhbj4rfq4";
           libraryHaskellDepends = [ base HUnit QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/PaulJohnson/Ranged-sets";
           description = "Ranged sets for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Rasterific" = callPackage
        ({ mkDerivation, base, bytestring, containers, dlist, FontyFruity
         , free, JuicyPixels, mtl, primitive, stdenv, transformers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "Rasterific";
           version = "0.7.5.1";
           sha256 = "c612c3dde7c47aa8044c6e0ce6bdc0e1d36ea55cc37ec4fc48d0baea63555358";
           libraryHaskellDepends = [
             base bytestring containers dlist FontyFruity free JuicyPixels mtl
             primitive transformers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           description = "A pure haskell drawing engine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "RefSerialize" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, hashtables
         , stdenv, stringsearch
         }:
         mkDerivation {
           pname = "RefSerialize";
           version = "0.4.0";
           sha256 = "05b25eb1ab943d96119aa2acca678fc8f194c3411af521e3835f4de5c752bbb2";
           libraryHaskellDepends = [
             base binary bytestring containers hashtables stringsearch
           ];
           doHaddock = false;
           doCheck = false;
           description = "Write to and read from ByteStrings maintaining internal memory references";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SHA" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "SHA";
           version = "1.6.4.4";
           sha256 = "6bd950df6b11a3998bb1452d875d2da043ee43385459afc5f16d471d25178b44";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ array base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Implementations of the SHA suite of message digest functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SVGFonts" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-markup, blaze-svg
         , bytestring, cereal, cereal-vector, containers, data-default-class
         , diagrams-core, diagrams-lib, directory, parsec, split, stdenv
         , text, vector, xml
         }:
         mkDerivation {
           pname = "SVGFonts";
           version = "1.7.0.1";
           sha256 = "30b1eb325312b6dda99da23997197cda9dbc93e0829e2b795849a790e7bc761b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base blaze-markup blaze-svg bytestring cereal
             cereal-vector containers data-default-class diagrams-core
             diagrams-lib directory parsec split text vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fonts from the SVG-Font format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SafeSemaphore" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm }:
         mkDerivation {
           pname = "SafeSemaphore";
           version = "0.10.1";
           sha256 = "21e5b737a378cae9e1faf85cab015316d4c84d4b37e6d9d202111cef8c4cef66";
           revision = "1";
           editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
           libraryHaskellDepends = [ base containers stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
           description = "Much safer replacement for QSemN, QSem, and SampleVar";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ShellCheck" = callPackage
        ({ mkDerivation, aeson, array, base, bytestring, Cabal, containers
         , deepseq, Diff, directory, filepath, mtl, parsec, process
         , QuickCheck, regex-tdfa, stdenv
         }:
         mkDerivation {
           pname = "ShellCheck";
           version = "0.7.0";
           sha256 = "3af93f97750fe896b5e9c5247b84f1a99e34293992bb0e9001b0cc725949a8ef";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [
             aeson array base bytestring containers deepseq Diff directory
             filepath mtl parsec process QuickCheck regex-tdfa
           ];
           executableHaskellDepends = [
             aeson array base bytestring containers deepseq Diff directory
             filepath mtl parsec QuickCheck regex-tdfa
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.shellcheck.net/";
           description = "Shell script analysis tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Spintax" = callPackage
        ({ mkDerivation, attoparsec, base, extra, mtl, mwc-random, stdenv
         , text
         }:
         mkDerivation {
           pname = "Spintax";
           version = "0.3.3";
           sha256 = "21df2193bf1216d55a0d43691182125993eeadc6f097eaf5eb995c23f2016b13";
           libraryHaskellDepends = [
             attoparsec base extra mtl mwc-random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/spintax";
           description = "Random text generation based on spintax";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "StateVar" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers }:
         mkDerivation {
           pname = "StateVar";
           version = "1.2";
           sha256 = "afc036021fcd38f15fcc4af392a3e57017d5ddcc926e99391dbfc8c4e6375f8b";
           libraryHaskellDepends = [ base stm transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-opengl/StateVar";
           description = "State variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Strafunski-StrategyLib" = callPackage
        ({ mkDerivation, base, directory, mtl, stdenv, syb, transformers }:
         mkDerivation {
           pname = "Strafunski-StrategyLib";
           version = "5.0.1.0";
           sha256 = "a018c7420289a381d2b491a753f685b9d691be07cea99855cc5c8e05d5a9a295";
           revision = "2";
           editedCabalFile = "1g9ksfgcz8fjasn78zq7w1yw9wk87i4gd5i0pf31gnf4l3963yz8";
           libraryHaskellDepends = [ base directory mtl syb transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Library for strategic programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "TCache" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , hashtables, mtl, old-time, RefSerialize, stdenv, stm, text
         }:
         mkDerivation {
           pname = "TCache";
           version = "0.12.1";
           sha256 = "f134b45fcdd127fa1a4214f01d44dc34e994fed137cec63f4c4ea632363ab7bd";
           libraryHaskellDepends = [
             base bytestring containers directory hashtables mtl old-time
             RefSerialize stm text
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Transactional cache with user-defined persistence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "TotalMap" = callPackage
        ({ mkDerivation, adjunctions, base, distributive, generics-sop
         , lens, stdenv
         }:
         mkDerivation {
           pname = "TotalMap";
           version = "0.1.1.1";
           sha256 = "bca2b671812a59b9d00faabf937a9b768ee65f98e209767c69279232a0ef2590";
           libraryHaskellDepends = [
             adjunctions base distributive generics-sop lens
           ];
           doHaddock = false;
           doCheck = false;
           description = "A total map datatype";
           license = stdenv.lib.licenses.mit;
         }) {};
      "TypeCompose" = callPackage
        ({ mkDerivation, base, base-orphans, stdenv }:
         mkDerivation {
           pname = "TypeCompose";
           version = "0.9.14";
           sha256 = "56034f7917c7464e3be93754c36302d91b8d750f84f6ed7af146f94c4fd05a57";
           revision = "1";
           editedCabalFile = "1pxg6az5vkl0zvs3zdvvvnhxqawd9fkkd44jmzzzyyibppgni6x4";
           libraryHaskellDepends = [ base base-orphans ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/TypeCompose";
           description = "Type composition classes & instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ViennaRNAParser" = callPackage
        ({ mkDerivation, base, parsec, ParsecTools, process, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "ViennaRNAParser";
           version = "1.3.3";
           sha256 = "7ee941d106b8b0c57e1ca5104d19b94215721e4a7b8aeb53fa353d246efbaefe";
           libraryHaskellDepends = [
             base parsec ParsecTools process transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for parsing ViennaRNA package output";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Win32" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "Win32";
           version = "2.6.1.0";
           sha256 = "eba445ba0717e96f239c984890f67172e7bfe72a23f32f37fe265b6cadfd9ce3";
           revision = "1";
           editedCabalFile = "1ia6dk2fvxg3gzqdmcypdka6fcnnrza23hq1rhslj53jy3qzs3kn";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/win32";
           description = "A binding to part of the Win32 library";
           license = stdenv.lib.licenses.bsd3;
           platforms = stdenv.lib.platforms.none;
         }) {};
      "Win32-notify" = callPackage
        ({ mkDerivation, base, containers, directory, stdenv, Win32 }:
         mkDerivation {
           pname = "Win32-notify";
           version = "0.3.0.3";
           sha256 = "0c21dbe06cb1ce3b3e5f1aace0b7ee359b36e7cb057f8fe2c28c943150044116";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers directory Win32 ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to part of the Win32 library for file notification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "X11" = callPackage
        ({ mkDerivation, base, data-default, libX11, libXext, libXinerama
         , libXrandr, libXrender, libXScrnSaver, stdenv
         }:
         mkDerivation {
           pname = "X11";
           version = "1.9.1";
           sha256 = "7581e7b3c1c8313d1f7d224d57b20c689e5f757404c9f0ec47f4d15c4541e63d";
           libraryHaskellDepends = [ base data-default ];
           librarySystemDepends = [
             libX11 libXext libXinerama libXrandr libXrender libXScrnSaver
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xmonad/X11";
           description = "A binding to the X11 graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs.xorg) libXScrnSaver; inherit (pkgs.xorg) libXext; 
inherit (pkgs.xorg) libXinerama; inherit (pkgs.xorg) libXrender;};
      "X11-xft" = callPackage
        ({ mkDerivation, base, libXft, stdenv, utf8-string, X11 }:
         mkDerivation {
           pname = "X11-xft";
           version = "0.3.1";
           sha256 = "4eba3fee62570e06447654030a62fb55f19587884bc2cef77a9c3b2c3458f8d1";
           libraryHaskellDepends = [ base utf8-string X11 ];
           libraryPkgconfigDepends = [ libXft ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to the Xft, X Free Type interface library, and some Xrender parts";
           license = "LGPL";
         }) {};
      "Xauth" = callPackage
        ({ mkDerivation, base, libXau, stdenv }:
         mkDerivation {
           pname = "Xauth";
           version = "0.1";
           sha256 = "ba332dea9ec152b3f676d22461eee81a657e16987c3dfb8249e9dbe0cda56ed7";
           libraryHaskellDepends = [ base ];
           libraryPkgconfigDepends = [ libXau ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to the X11 authentication library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-deque" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv, time }:
         mkDerivation {
           pname = "abstract-deque";
           version = "0.3";
           sha256 = "09aa10f38193a8275a7791b92a4f3a7192a304874637e2a35c897dde25d75ca2";
           libraryHaskellDepends = [ array base containers random time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "Abstract, parameterized interface to mutable Deques";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-deque-tests" = callPackage
        ({ mkDerivation, abstract-deque, array, base, containers, HUnit
         , random, stdenv, test-framework, test-framework-hunit, time
         }:
         mkDerivation {
           pname = "abstract-deque-tests";
           version = "0.3";
           sha256 = "5f17fb4cc26559f81c777f494622907e8927181175eaa172fb6adbf14b2feba5";
           libraryHaskellDepends = [
             abstract-deque array base containers HUnit random test-framework
             test-framework-hunit time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "A test-suite for any queue or double-ended queue satisfying an interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-par" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "abstract-par";
           version = "0.3.3";
           sha256 = "248a8739bd902462cb16755b690b55660e196e58cc7e6ef8157a72c2a3d5d860";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "Type classes generalizing the functionality of the 'monad-par' library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accuerr" = callPackage
        ({ mkDerivation, base, bifunctors, lens, semigroups, stdenv }:
         mkDerivation {
           pname = "accuerr";
           version = "0.2.0.2";
           sha256 = "4f6a8230d2ad3bc274dea234208ce4f5282e2d9413a5da1f5505fc55a2fa9a36";
           libraryHaskellDepends = [ base bifunctors lens semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/accuerr";
           description = "Data type like Either but with accumulating error type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ace" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
         , data-default, parsec, stdenv, text
         }:
         mkDerivation {
           pname = "ace";
           version = "0.6";
           sha256 = "d3472b659d26cf7ea9afa207ec24ac0314598de997722e636e9bfa24b3900738";
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup data-default parsec text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Attempto Controlled English parser and printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "action-permutations" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "action-permutations";
           version = "0.0.0.1";
           sha256 = "a419ee59f996e5305afd96336a561a9fcf26844362eaa32ab6b747a8f9fd1466";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Execute a set of actions (e.g. parsers) in each possible order";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "active" = callPackage
        ({ mkDerivation, base, lens, linear, semigroupoids, semigroups
         , stdenv, vector
         }:
         mkDerivation {
           pname = "active";
           version = "0.2.0.14";
           sha256 = "df45678266e0d95830a8210213fdf86d4dca765f1c094d31294569662c256b74";
           revision = "1";
           editedCabalFile = "01j431dkl3ax98g974v6mgxv9xha4c0hlpjqq5fvh7l8lyjan676";
           libraryHaskellDepends = [
             base lens linear semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Abstractions for animation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ad" = callPackage
        ({ mkDerivation, array, base, Cabal, cabal-doctest, comonad
         , containers, data-reify, erf, free, nats, reflection, semigroups
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "ad";
           version = "4.3.6";
           sha256 = "6580f376b4c1a55cd35baccdcfd6ddcc240bcd514743e629df610251e9d8f739";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             array base comonad containers data-reify erf free nats reflection
             semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ad";
           description = "Automatic Differentiation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "adjunctions" = callPackage
        ({ mkDerivation, array, base, comonad, containers, contravariant
         , distributive, free, mtl, profunctors, semigroupoids, semigroups
         , stdenv, tagged, transformers, transformers-compat, void
         }:
         mkDerivation {
           pname = "adjunctions";
           version = "4.4";
           sha256 = "507c2ef55337ae61c805f8cbc1213dfd7d2b85187342675d662254b8d8a16ae9";
           revision = "2";
           editedCabalFile = "1yfsjx7dqikg3hvld7i91xfsg5lawmr5980lvfd794sybmgxsf17";
           libraryHaskellDepends = [
             array base comonad containers contravariant distributive free mtl
             profunctors semigroupoids semigroups tagged transformers
             transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/adjunctions/";
           description = "Adjunctions and representable functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "adler32" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "adler32";
           version = "0.1.2.0";
           sha256 = "26b43c9f389f45ed792698ea4880d24ba56ab61c6f7cae51e582a05e0b5866a4";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-adler32";
           description = "An implementation of Adler-32, supporting rolling checksum operation";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "advent-of-code-api" = callPackage
        ({ mkDerivation, attoparsec, base, containers, curl, deepseq
         , directory, filepath, finite-typelits, mtl, stdenv, tagsoup, text
         , time, uri-encode
         }:
         mkDerivation {
           pname = "advent-of-code-api";
           version = "0.1.2.3";
           sha256 = "f4d48b2519a0e897bdd5d18bade8adb6065e5aa0c6b155caeb2fc3dd1bea49d5";
           libraryHaskellDepends = [
             attoparsec base containers curl deepseq directory filepath
             finite-typelits mtl tagsoup text time uri-encode
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/advent-of-code-api#readme";
           description = "Advent of Code REST API bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson" = callPackage
        ({ mkDerivation, attoparsec, base, base-compat, bytestring
         , containers, deepseq, dlist, ghc-prim, hashable, primitive
         , scientific, stdenv, tagged, template-haskell, text
         , th-abstraction, time, time-compat, unordered-containers
         , uuid-types, vector
         }:
         mkDerivation {
           pname = "aeson";
           version = "1.4.6.0";
           sha256 = "923fb2c6e224c4c0d1848174b1010592f31cd149f538923efd87f8a6b4b3488b";
           libraryHaskellDepends = [
             attoparsec base base-compat bytestring containers deepseq dlist
             ghc-prim hashable primitive scientific tagged template-haskell text
             th-abstraction time time-compat unordered-containers uuid-types
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/aeson";
           description = "Fast JSON parsing and encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-attoparsec" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, stdenv }:
         mkDerivation {
           pname = "aeson-attoparsec";
           version = "0.0.0";
           sha256 = "a5868390477938b3086e820f4a432f9d6a3972454f561fc386520634eec72104";
           libraryHaskellDepends = [ aeson attoparsec base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/aeson-attoparsec#readme";
           description = "Embed an Attoparsec text parser into an Aeson parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-better-errors" = callPackage
        ({ mkDerivation, aeson, base, bytestring, dlist, mtl, scientific
         , stdenv, text, transformers, transformers-compat
         , unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "aeson-better-errors";
           version = "0.9.1.0";
           sha256 = "68f001bf055ec7b755d91019f2a0ef136307d157a231acddad6b4cc561f67327";
           libraryHaskellDepends = [
             aeson base bytestring dlist mtl scientific text transformers
             transformers-compat unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdgarrood/aeson-better-errors";
           description = "Better error messages when decoding JSON values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-casing" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "aeson-casing";
           version = "0.2.0.0";
           sha256 = "3723075673a3f188a05e5db0cd2851c249ca16eba532c3e76e7f1fa60cf19233";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           description = "Tools to change the formatting of field names in Aeson instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-compat" = callPackage
        ({ mkDerivation, aeson, attoparsec, attoparsec-iso8601, base
         , base-compat, bytestring, containers, exceptions, hashable
         , scientific, stdenv, tagged, text, time, time-locale-compat
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-compat";
           version = "0.3.9";
           sha256 = "e043941ba761c13a3854fc087521b864b56b2df874154e42aedb67b2a77f23c8";
           revision = "3";
           editedCabalFile = "1fnahwplqcnv9m4kcf8i588ankafd2125ch71027plciqxxwid70";
           libraryHaskellDepends = [
             aeson attoparsec attoparsec-iso8601 base base-compat bytestring
             containers exceptions hashable scientific tagged text time
             time-locale-compat unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/aeson-compat#readme";
           description = "Compatibility layer for aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-diff" = callPackage
        ({ mkDerivation, aeson, base, bytestring, edit-distance-vector
         , hashable, mtl, optparse-applicative, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-diff";
           version = "1.1.0.8";
           sha256 = "24eab662fc61c022db1a67ba94ce1385e2ad1f500c6498b5ee90725f070835de";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring edit-distance-vector hashable mtl scientific
             text unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thsutton/aeson-diff";
           description = "Extract and apply patches to JSON documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-extra" = callPackage
        ({ mkDerivation, aeson, aeson-compat, attoparsec
         , attoparsec-iso8601, base, base-compat-batteries, bytestring
         , containers, deepseq, exceptions, hashable, parsec
         , recursion-schemes, scientific, semialign, stdenv
         , template-haskell, text, these, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-extra";
           version = "0.4.1.3";
           sha256 = "22e3e2b6d243fb9bc660899dbb677cb6f1f8c348cfc7464082b60ce3fcdc25cc";
           libraryHaskellDepends = [
             aeson aeson-compat attoparsec attoparsec-iso8601 base
             base-compat-batteries bytestring containers deepseq exceptions
             hashable parsec recursion-schemes scientific semialign
             template-haskell text these time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/aeson-extra#readme";
           description = "Extra goodies for aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-generic-compat" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "aeson-generic-compat";
           version = "0.0.1.3";
           sha256 = "a6b6ca511483bc9de72c2c640a9f871fe8d329811fb8b87d0a664c4394e223cf";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           description = "Compatible generic class names of Aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-iproute" = callPackage
        ({ mkDerivation, aeson, base, iproute, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "aeson-iproute";
           version = "0.2";
           sha256 = "ee4d53338bfdc4a6ce0039dea24e797a0ff1e22c312b31be2e73ddc0bddf268f";
           libraryHaskellDepends = [
             aeson base iproute text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/greydot/aeson-iproute";
           description = "Aeson instances for iproute types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-picker" = callPackage
        ({ mkDerivation, aeson, base, lens, lens-aeson, stdenv, text }:
         mkDerivation {
           pname = "aeson-picker";
           version = "0.1.0.5";
           sha256 = "97df83f6ef5f201e784c0a96c3bc3205c94d20b67f5ff4e3193acd8e9a339c16";
           libraryHaskellDepends = [ aeson base lens lens-aeson text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ozzzzz/aeson-picker#readme";
           description = "Tiny library to get fields from JSON format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-pretty" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
         , cmdargs, scientific, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-pretty";
           version = "0.8.8";
           sha256 = "81cea61cb6dcf32c3f0529ea5cfc98dbea3894152d7f2d9fe1cb051f927ec726";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base-compat bytestring scientific text
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson attoparsec base bytestring cmdargs
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/informatikr/aeson-pretty";
           description = "JSON pretty-printing library and command-line tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-qq" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat
         , haskell-src-meta, parsec, scientific, stdenv, template-haskell
         , text, vector
         }:
         mkDerivation {
           pname = "aeson-qq";
           version = "0.8.3";
           sha256 = "8f3129cf88bf52214a9f74c0be584a3c3296d1541280ad900188e102fee7f482";
           libraryHaskellDepends = [
             aeson attoparsec base base-compat haskell-src-meta parsec
             scientific template-haskell text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/aeson-qq#readme";
           description = "JSON quasiquoter for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-utils" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, scientific
         , stdenv, text
         }:
         mkDerivation {
           pname = "aeson-utils";
           version = "0.3.0.2";
           sha256 = "71814b1be8849f945395eb81217a2ad464f2943134c50c09afd8a3126add4b1f";
           revision = "7";
           editedCabalFile = "0lnlmsn5imbapdhbza1175wm04ynn1w75llkhlk1akpanx1dnd15";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring scientific text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Utilities for working with Aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-yak" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "aeson-yak";
           version = "0.1.1.3";
           sha256 = "af4355bc315a152592e9c06f5cc41bdb5ce7b236d85fe572a292c6bac02faa74";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tejon/aeson-yak";
           description = "Handle JSON that may or may not be a list, or exist";
           license = stdenv.lib.licenses.mit;
         }) {};
      "al" = callPackage
        ({ mkDerivation, base, c2hs, mtl, openal, stdenv }:
         mkDerivation {
           pname = "al";
           version = "0.1.4.2";
           sha256 = "8bf0f3b3a05ea7b7b8e43da282e1952e5c532ed23247d3384d394cd5046cecd2";
           libraryHaskellDepends = [ base mtl ];
           libraryPkgconfigDepends = [ openal ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phaazon/al";
           description = "OpenAL 1.1 raw API.";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openal;};
      "alarmclock" = callPackage
        ({ mkDerivation, async, base, clock, stdenv, stm, time
         , unbounded-delays
         }:
         mkDerivation {
           pname = "alarmclock";
           version = "0.7.0.2";
           sha256 = "07e945f39d950531904f7ee896729b517677fb5d312cdb94df9744e43782e96a";
           libraryHaskellDepends = [
             async base clock stm time unbounded-delays
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DaveCTurner/alarmclock";
           description = "Wake up and perform an action at a certain time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alerts" = callPackage
        ({ mkDerivation, base, blaze-html, stdenv, text }:
         mkDerivation {
           pname = "alerts";
           version = "0.1.2.0";
           sha256 = "8e9c684b1236c5a730f50b48aa38de2b835fbb48d5bc27be41e742cedb64de91";
           libraryHaskellDepends = [ base blaze-html text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alx741/alerts#readme";
           description = "Alert messages for web applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alex" = callPackage
        ({ mkDerivation, array, base, containers, directory, happy, stdenv
         }:
         mkDerivation {
           pname = "alex";
           version = "3.2.5";
           sha256 = "b77c8a1270767c64e2adb21a6e91ee7cd904ba17edae17bc20fd03da5256e0e3";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [ array base containers directory ];
           executableToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/alex/";
           description = "Alex is a tool for generating lexical analysers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alg" = callPackage
        ({ mkDerivation, base, dual, stdenv, util }:
         mkDerivation {
           pname = "alg";
           version = "0.2.13.1";
           sha256 = "83929d69abda54ba724c5221071b8629ed60605edb8ec9a66ed8a025ad90c41c";
           revision = "1";
           editedCabalFile = "0rm66k502d8la140ffawd38yaf0hr92h8x7xrq6krn6ypljwql0v";
           libraryHaskellDepends = [ base dual util ];
           doHaddock = false;
           doCheck = false;
           description = "Algebraic structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "algebraic-graphs" = callPackage
        ({ mkDerivation, array, base, base-compat, containers, deepseq, mtl
         , stdenv
         }:
         mkDerivation {
           pname = "algebraic-graphs";
           version = "0.4";
           sha256 = "c905d32a6178a11e3c8096dbbf3bd19e570e87362c51fdc8653b43a51e46d3b7";
           libraryHaskellDepends = [
             array base base-compat containers deepseq mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snowleopard/alga";
           description = "A library for algebraic graph construction and transformation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "almost-fix" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "almost-fix";
           version = "0.0.2";
           sha256 = "20597d015fe9b6bb6bfcb0eaee3eb58b28e38a1f4f43049ad0aeebcc6409a70f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Recurse while a predicate is satisfied";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alsa-core" = callPackage
        ({ mkDerivation, alsaLib, base, extensible-exceptions, stdenv }:
         mkDerivation {
           pname = "alsa-core";
           version = "0.5.0.1";
           sha256 = "eb50495ef05ecc7c06a0147da7f0d3efde832a44d23caaf5172dc114882270ab";
           libraryHaskellDepends = [ base extensible-exceptions ];
           libraryPkgconfigDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/ALSA";
           description = "Binding to the ALSA Library API (Exceptions)";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "i686-linux" "x86_64-linux" ];
         }) {inherit (pkgs) alsaLib;};
      "alsa-mixer" = callPackage
        ({ mkDerivation, alsa-core, alsaLib, base, c2hs, stdenv, unix }:
         mkDerivation {
           pname = "alsa-mixer";
           version = "0.3.0";
           sha256 = "cb6a197de99c6b4339a7f552e1c6b71eaefa11bb96102d5ba4519a23c615de02";
           libraryHaskellDepends = [ alsa-core base unix ];
           librarySystemDepends = [ alsaLib ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ttuegel/alsa-mixer";
           description = "Bindings to the ALSA simple mixer API";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "alsa-pcm" = callPackage
        ({ mkDerivation, alsa-core, alsaLib, array, base
         , extensible-exceptions, sample-frame, semigroups, stdenv
         , storable-record
         }:
         mkDerivation {
           pname = "alsa-pcm";
           version = "0.6.1.1";
           sha256 = "6348f63e2858df9c0b516053c7c5111139936faea6edf7cf400b8fba6cca94d6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             alsa-core array base extensible-exceptions sample-frame semigroups
             storable-record
           ];
           libraryPkgconfigDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/ALSA";
           description = "Binding to the ALSA Library API (PCM audio)";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "alsa-seq" = callPackage
        ({ mkDerivation, alsa-core, alsaLib, array, base, bytestring
         , data-accessor, enumset, extensible-exceptions, poll, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "alsa-seq";
           version = "0.6.0.7";
           sha256 = "06cda1e24993aaf0c3592b51a613cf1e187eea603dd77ad3a129a8a7b1e0b778";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             alsa-core array base bytestring data-accessor enumset
             extensible-exceptions poll transformers utility-ht
           ];
           libraryPkgconfigDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/ALSA";
           description = "Binding to the ALSA Library API (MIDI sequencer)";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "alternative-vector" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "alternative-vector";
           version = "0.0.0";
           sha256 = "42474bc708dbc81e13a7850887cefc2596db47cb07423610094cd994f754c7b1";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/alternative-vector#readme";
           description = "Use vectors instead of lists for many and some";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alternators" = callPackage
        ({ mkDerivation, base, lens, mmorph, mtl, newtype-generics, stdenv
         , stm, transformers
         }:
         mkDerivation {
           pname = "alternators";
           version = "1.0.0.0";
           sha256 = "44395b8b42193fdd78f94fd9f62560bfa69aef345a0fb2602df0d8d3613fd339";
           libraryHaskellDepends = [
             base lens mmorph mtl newtype-generics stm transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/alternators#readme";
           description = "Handy functions when using transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "amqp" = callPackage
        ({ mkDerivation, base, binary, bytestring, clock, connection
         , containers, data-binary-ieee754, monad-control, network
         , network-uri, split, stdenv, stm, text, vector, xml
         }:
         mkDerivation {
           pname = "amqp";
           version = "0.18.3";
           sha256 = "41688f6ab6af58bb7a566f7b4e713fa43aa03b7a640121a268be7c38e857dfb3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring clock connection containers
             data-binary-ieee754 monad-control network network-uri split stm
             text vector
           ];
           executableHaskellDepends = [ base containers xml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hreinhardt/amqp";
           description = "Client library for AMQP servers (currently only RabbitMQ)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "annotated-wl-pprint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "annotated-wl-pprint";
           version = "0.7.0";
           sha256 = "0c262d7fe13a9a50216438ec882c13e25f31236b886a5692e3c35b85cd773d18";
           revision = "1";
           editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
           description = "The Wadler/Leijen Pretty Printer, with annotation support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ansi-terminal" = callPackage
        ({ mkDerivation, base, colour, stdenv }:
         mkDerivation {
           pname = "ansi-terminal";
           version = "0.9.1";
           sha256 = "74088e80b33ba680f7c46137d25bfcca6fa8795bc2d097e4e0435b3c41a320fb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base colour ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/ansi-terminal";
           description = "Simple ANSI terminal support, with Windows compatibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ansi-wl-pprint" = callPackage
        ({ mkDerivation, ansi-terminal, base, stdenv }:
         mkDerivation {
           pname = "ansi-wl-pprint";
           version = "0.6.9";
           sha256 = "a7b2e8e7cd3f02f2954e8b17dc60a0ccd889f49e2068ebb15abfa1d42f7a4eac";
           revision = "1";
           editedCabalFile = "0bb5fzjjc00932pny1fql40dmpmikfqzbrbmpwr09bfw9aynvzgn";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ ansi-terminal base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ansi-wl-pprint";
           description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aos-signature" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, memory, mtl
         , protolude, random, stdenv
         }:
         mkDerivation {
           pname = "aos-signature";
           version = "0.1.1";
           sha256 = "c38a353c8bedd9710aa56f9aa8caf17db4313997afd9733921d1c5917511a9ea";
           libraryHaskellDepends = [
             base bytestring cryptonite memory mtl protolude random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/aos-signature#readme";
           description = "An implementation of the AOS signatures";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "apecs" = callPackage
        ({ mkDerivation, array, base, containers, mtl, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "apecs";
           version = "0.8.3";
           sha256 = "76f05a3a0bb9a2dc60dc8ee69c27c751e8e68f5acaf7410b033fe6a5a1df2ebd";
           libraryHaskellDepends = [
             array base containers mtl template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonascarpay/apecs#readme";
           description = "Fast Entity-Component-System library for game programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apecs-gloss" = callPackage
        ({ mkDerivation, apecs, apecs-physics, base, containers, gloss
         , linear, stdenv
         }:
         mkDerivation {
           pname = "apecs-gloss";
           version = "0.2.3";
           sha256 = "c974650ddda25e0479dbedaeef702064669d2ee357946a54321c00a7a9dc4c38";
           libraryHaskellDepends = [
             apecs apecs-physics base containers gloss linear
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonascarpay/apecs/apecs-gloss";
           description = "Simple gloss renderer for apecs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apecs-physics" = callPackage
        ({ mkDerivation, apecs, base, Cabal, containers, inline-c, linear
         , stdenv, template-haskell, vector
         }:
         mkDerivation {
           pname = "apecs-physics";
           version = "0.4.2";
           sha256 = "d03e5ecb1c0c8f7e3067f9fc2b8ad6756f9aec116179fcbc249eb033d2a61e4b";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [
             apecs base containers inline-c linear template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonascarpay/apecs#readme";
           description = "2D physics for apecs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "api-field-json-th" = callPackage
        ({ mkDerivation, aeson, base, lens, split, stdenv, template-haskell
         , text
         }:
         mkDerivation {
           pname = "api-field-json-th";
           version = "0.1.0.2";
           sha256 = "b8d49c3869bc8104539c43d5544ed2271d1e68a963440d781ee71d2252b0f724";
           libraryHaskellDepends = [
             aeson base lens split template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nakaji-dayo/api-field-json-th";
           description = "option of aeson's deriveJSON";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "app-settings" = callPackage
        ({ mkDerivation, base, containers, directory, mtl, parsec, stdenv
         , text
         }:
         mkDerivation {
           pname = "app-settings";
           version = "0.2.0.12";
           sha256 = "2bd198b97077090476f8f512a7c03f3ab4147a6df51cf8cd22b5145c37b2ccda";
           libraryHaskellDepends = [
             base containers directory mtl parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emmanueltouzery/app-settings";
           description = "A library to manage application settings (INI file-like)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "appar" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "appar";
           version = "0.1.8";
           sha256 = "c4ceeddc26525b58d82c41b6d3e32141371a200a6794aae185b6266ccc81631f";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A simple applicative parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "appendmap" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "appendmap";
           version = "0.1.5";
           sha256 = "2dbfa21a3702c30e0bdf764f5775f4ed8ac63b48a830b8931ea994f52030b90e";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/koterpillar/appendmap#readme";
           description = "Map with a Semigroup and Monoid instances delegating to Semigroup of the elements";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apply-refact" = callPackage
        ({ mkDerivation, base, containers, directory, filemanip, filepath
         , ghc, ghc-exactprint, mtl, optparse-applicative, process, refact
         , stdenv, syb, temporary, transformers, unix-compat
         }:
         mkDerivation {
           pname = "apply-refact";
           version = "0.6.0.0";
           sha256 = "2fbe0e3d4dca8f67e4a423116a947e2a7cf40ef620bf8f66653f64cce4c3555c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory filemanip ghc ghc-exactprint mtl process
             refact syb temporary transformers unix-compat
           ];
           executableHaskellDepends = [
             base containers directory filemanip filepath ghc ghc-exactprint mtl
             optparse-applicative process refact syb temporary transformers
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Perform refactorings specified by the refact library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apportionment" = callPackage
        ({ mkDerivation, base, containers, stdenv, utility-ht }:
         mkDerivation {
           pname = "apportionment";
           version = "0.0.0.3";
           sha256 = "8f71d0b77152edb048e9f75c72a82b9d7ae1b15432fc011610fe9f1b83225b18";
           libraryHaskellDepends = [ base containers utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/apportionment";
           description = "Round a set of numbers while maintaining its sum";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "approximate" = callPackage
        ({ mkDerivation, base, binary, bytes, Cabal, cabal-doctest, cereal
         , comonad, deepseq, ghc-prim, hashable, lens, log-domain, pointed
         , safecopy, semigroupoids, semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "approximate";
           version = "0.3.2";
           sha256 = "d3fb53dd85d95263eb2c61146b3bd872c28670f4ff9da91fb260d558d819d104";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base binary bytes cereal comonad deepseq ghc-prim hashable lens
             log-domain pointed safecopy semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/approximate/";
           description = "Approximate discrete values and numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "arbor-lru-cache" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm }:
         mkDerivation {
           pname = "arbor-lru-cache";
           version = "0.1.1.1";
           sha256 = "602f4969a88c630bff1a4e96acf326c455fdd79ada94c9de134bf4734b33d92b";
           libraryHaskellDepends = [ base containers stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arbor/arbor-lru-cache#readme";
           description = "LRU cache based on STM";
           license = stdenv.lib.licenses.mit;
         }) {};
      "arithmoi" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, exact-pi
         , ghc-prim, integer-gmp, integer-logarithms, random, semirings
         , stdenv, transformers, vector
         }:
         mkDerivation {
           pname = "arithmoi";
           version = "0.9.0.0";
           sha256 = "43e95b0d954f475c75e23cbaa636bfa9741d3769d456f8b785f011e2e6483a30";
           revision = "1";
           editedCabalFile = "0mygy3gy5q719y67i7qlbmqczg1fmzxc7karnmcj7ilhwsk81mq7";
           configureFlags = [ "-f-llvm" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base containers deepseq exact-pi ghc-prim integer-gmp
             integer-logarithms random semirings transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cartazio/arithmoi";
           description = "Efficient basic number-theoretic functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "array-memoize" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "array-memoize";
           version = "0.6.0";
           sha256 = "76c88cb3ed04875821a5601f6a1c40f4e15ef8cb36e8a3d4004df956d1db05dc";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Memoization combinators using arrays for finite sub-domains of functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "arrow-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "arrow-extras";
           version = "0.1.0.1";
           sha256 = "c13c3aba839d1ec78a49991fa4038a68c5eb9ef6da61eceb6e68bc3ce0586a6c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/arrow-extras#readme";
           description = "Extra functions for Control.Arrow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ascii-progress" = callPackage
        ({ mkDerivation, async, base, concurrent-output, data-default
         , stdenv, time
         }:
         mkDerivation {
           pname = "ascii-progress";
           version = "0.3.3.0";
           sha256 = "7e3fa6b80c09a83c9ba8a0644ef304ca92d65b76383b8dd023ff9f89ebec913e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base concurrent-output data-default time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-ascii-progress";
           description = "A simple progress bar for the console";
           license = stdenv.lib.licenses.mit;
         }) {};
      "asciidiagram" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , FontyFruity, JuicyPixels, lens, linear, mtl, optparse-applicative
         , pandoc-types, rasterific-svg, stdenv, svg-tree, text, vector
         }:
         mkDerivation {
           pname = "asciidiagram";
           version = "1.3.3.3";
           sha256 = "019f1e781143a19434baeffc49ed0ebdf46e05179b36b753772276a0549b6126";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers FontyFruity JuicyPixels lens linear mtl
             pandoc-types rasterific-svg svg-tree text vector
           ];
           executableHaskellDepends = [
             base bytestring directory filepath FontyFruity JuicyPixels
             optparse-applicative rasterific-svg svg-tree text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty rendering of Ascii diagram into svg or png";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-encoding" = callPackage
        ({ mkDerivation, asn1-types, base, bytestring, hourglass, stdenv }:
         mkDerivation {
           pname = "asn1-encoding";
           version = "0.9.6";
           sha256 = "d9f8deabd3b908e5cf83c0d813c08dc0143b3ec1c0d97f660d2cfa02c1c8da0a";
           revision = "1";
           editedCabalFile = "19nq8g1v323p47cqlc4m9r6li35dd3cmcd7k486jw24cijkdjm9n";
           libraryHaskellDepends = [ asn1-types base bytestring hourglass ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-asn1";
           description = "ASN1 data reader and writer in RAW, BER and DER forms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-parse" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , stdenv
         }:
         mkDerivation {
           pname = "asn1-parse";
           version = "0.9.5";
           sha256 = "8f1fe1344d30b39dc594d74df2c55209577722af1497204b4c2b6d6e8747f39e";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-asn1";
           description = "Simple monadic parser for ASN1 stream types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-types" = callPackage
        ({ mkDerivation, base, bytestring, hourglass, memory, stdenv }:
         mkDerivation {
           pname = "asn1-types";
           version = "0.3.3";
           sha256 = "57ebc2371bdb607294b5ca18f44ced121ab528ee304905db1524cb441b535498";
           libraryHaskellDepends = [ base bytestring hourglass memory ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-asn1";
           description = "ASN.1 types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "assert-failure" = callPackage
        ({ mkDerivation, base, pretty-show, stdenv, text }:
         mkDerivation {
           pname = "assert-failure";
           version = "0.1.2.2";
           sha256 = "f69416fd527b4f6933586edfc9ee741a2163c3741471e9b8e46a244495bd4a9d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base pretty-show text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Mikolaj/assert-failure";
           description = "Syntactic sugar improving 'assert' and 'error'";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "assoc" = callPackage
        ({ mkDerivation, base, bifunctors, stdenv, tagged }:
         mkDerivation {
           pname = "assoc";
           version = "1.0.1";
           sha256 = "4000dea2fbc272ff5a15a0bf0fae1c29dea4b87b8fb4ccb8b07b8114ee2636d5";
           revision = "1";
           editedCabalFile = "1q6sc9v79p2pdm7aa6mfbn824vc01wj267saf2gp86b3wzgp0mrh";
           libraryHaskellDepends = [ base bifunctors tagged ];
           doHaddock = false;
           doCheck = false;
           description = "swap and assoc: Symmetric and Semigroupy Bifunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "astro" = callPackage
        ({ mkDerivation, base, matrix, stdenv, time }:
         mkDerivation {
           pname = "astro";
           version = "0.4.2.1";
           sha256 = "da5dde1bcf42e4f48f5f23dbf3a890a2904ecaf86df3d75e365e071b924afe29";
           libraryHaskellDepends = [ base matrix time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aligusnet/astro";
           description = "Amateur astronomical computations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async" = callPackage
        ({ mkDerivation, base, hashable, stdenv, stm }:
         mkDerivation {
           pname = "async";
           version = "2.2.2";
           sha256 = "4b4ab1ac82c45144d82c6daf6cb6ba45eab9957dad44787fa5e869e23d73bbff";
           revision = "1";
           editedCabalFile = "1kg9xmby0wkx31998h2r43yr8bl1aixk6025zqigz9vdhmkc2y51";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base hashable stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/async";
           description = "Run IO operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-extra" = callPackage
        ({ mkDerivation, async, base, deepseq, split, stdenv }:
         mkDerivation {
           pname = "async-extra";
           version = "0.2.0.0";
           sha256 = "0d06d5a5cb835597ff1668ae58a1f0d048830164876838533dec4a78eb11cc43";
           libraryHaskellDepends = [ async base deepseq split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/async-extra#readme";
           description = "Useful concurrent combinators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "async-refresh" = callPackage
        ({ mkDerivation, base, formatting, lifted-async, microlens
         , microlens-th, monad-logger, safe-exceptions, stdenv, stm, text
         , unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "async-refresh";
           version = "0.3.0.0";
           sha256 = "da68061b2548a9b5b3e6f4af60120554ebfae9638dfa0b10cf7a244710a334c9";
           libraryHaskellDepends = [
             base formatting lifted-async microlens microlens-th monad-logger
             safe-exceptions stm text unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/async-refresh";
           description = "Package implementing core logic for refreshing of expiring data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-refresh-tokens" = callPackage
        ({ mkDerivation, async-refresh, base, bytestring, formatting
         , microlens, microlens-th, monad-logger, safe-exceptions, stdenv
         , text, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "async-refresh-tokens";
           version = "0.4.0.0";
           sha256 = "67a7419449428fc5f80e9cfc392df115f03721811d6cd73a6c7cbd83f48dc7df";
           libraryHaskellDepends = [
             async-refresh base bytestring formatting microlens microlens-th
             monad-logger safe-exceptions text unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/async-refresh-tokens#readme";
           description = "Package implementing core logic for refreshing of expiring access tokens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-timer" = callPackage
        ({ mkDerivation, async, base, safe-exceptions, stdenv, unliftio
         , unliftio-core
         }:
         mkDerivation {
           pname = "async-timer";
           version = "0.2.0.0";
           sha256 = "0632bfc4c141aa47c461747b3edb59f76ef5523a66ac03be0f32868a5e04cee0";
           libraryHaskellDepends = [
             async base safe-exceptions unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/async-timer#readme";
           description = "Provides API for timer based execution of IO actions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atom-basic" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, network
         , network-uri, stdenv, text, time
         }:
         mkDerivation {
           pname = "atom-basic";
           version = "0.2.5";
           sha256 = "24be9667b8bad3ad63b2e9b42fdea5aa0fd96f7e90f52fb1203adfa71d2f75ee";
           libraryHaskellDepends = [
             base base64-bytestring bytestring network network-uri text time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Basic Atom feed construction";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atomic-primops" = callPackage
        ({ mkDerivation, base, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "atomic-primops";
           version = "0.8.3";
           sha256 = "003af9f24f06355aa240d7ba11079def44d6e78f21e5869c5f0f677a7d6dc50e";
           libraryHaskellDepends = [ base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "A safe approach to CAS and other atomic ops in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atomic-write" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, stdenv
         , temporary, text, unix-compat
         }:
         mkDerivation {
           pname = "atomic-write";
           version = "0.2.0.7";
           sha256 = "b5f5c77884bc0332306fab89acf1c8a8582d76eabaa303c91b1c4072621c960d";
           libraryHaskellDepends = [
             base bytestring directory filepath temporary text unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/atomic-write";
           description = "Atomically write to a file";
           license = stdenv.lib.licenses.mit;
         }) {};
      "attoparsec" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , scientific, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "attoparsec";
           version = "0.13.2.3";
           sha256 = "3d1ac6713505e520ebb51f26cfb5f6e5a0825e25394a51419c7e035b60b2f2d9";
           revision = "1";
           editedCabalFile = "164n392qrgyb8mg3xxaxym0ffvqyjr4ny4lfrr81y7hk3947yw9q";
           libraryHaskellDepends = [
             array base bytestring containers deepseq scientific text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/attoparsec";
           description = "Fast combinator parsing for bytestrings and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-base64" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv, text, word8
         }:
         mkDerivation {
           pname = "attoparsec-base64";
           version = "0.0.0";
           sha256 = "0833530c8b4a46217272d14638f91325e156b22046fa291b528228afe66173e7";
           libraryHaskellDepends = [ attoparsec base bytestring text word8 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/attoparsec-base64#readme";
           description = "Fetch only base64 characters, erroring in the attoparsec monad on failure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-binary" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "attoparsec-binary";
           version = "0.2";
           sha256 = "05e6445b20b396c99275de3e37bf8bb18559a5666ad5136907857bf574e77a0b";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Binary processing extensions to Attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-expr" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv }:
         mkDerivation {
           pname = "attoparsec-expr";
           version = "0.1.1.2";
           sha256 = "8d4cd436112ce9007d2831776d4c5102a5322c48993229d2d41e259c07bb457c";
           libraryHaskellDepends = [ attoparsec base ];
           doHaddock = false;
           doCheck = false;
           description = "Port of parsec's expression parser to attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-ip" = callPackage
        ({ mkDerivation, attoparsec, base, ip, stdenv, vector }:
         mkDerivation {
           pname = "attoparsec-ip";
           version = "0.0.5";
           sha256 = "f5864859694fb9faa64cabea17fdf8f506e325fa4704c23036ea1cc17102c76f";
           libraryHaskellDepends = [ attoparsec base ip vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/attoparsec-ip#readme";
           description = "Parse IP data types with attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-iso8601" = callPackage
        ({ mkDerivation, attoparsec, base, base-compat, stdenv, text, time
         }:
         mkDerivation {
           pname = "attoparsec-iso8601";
           version = "1.0.1.0";
           sha256 = "499ffbd2d39e79cc4fda5ad0129dbf94fdb72a84aa932dfe2a5f5c5c02074142";
           revision = "1";
           editedCabalFile = "1rjhscmczgs1bwyqx7lvkm8py3ylxjd2797mrzgnq60fvm292750";
           libraryHaskellDepends = [ attoparsec base base-compat text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/aeson";
           description = "Parsing of ISO 8601 dates, originally from aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-path" = callPackage
        ({ mkDerivation, attoparsec, base, path, stdenv, text }:
         mkDerivation {
           pname = "attoparsec-path";
           version = "0.0.0.1";
           sha256 = "d07126622210fdb18722f585c61bda0a17389aecc83e786f9f6e621ec120b60c";
           libraryHaskellDepends = [ attoparsec base path text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/attoparsec-path#readme";
           description = "Convenience bindings between path and attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-uri" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-ip, base, bytedump, ip
         , QuickCheck, quickcheck-instances, stdenv, strict, text, vector
         }:
         mkDerivation {
           pname = "attoparsec-uri";
           version = "0.0.7";
           sha256 = "369d49c342f90bcc5e07c53b12dc642d6e03aa991900262abc48127d4b25725c";
           libraryHaskellDepends = [
             attoparsec attoparsec-ip base bytedump ip QuickCheck
             quickcheck-instances strict text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/attoparsec-uri#readme";
           description = "URI parser / printer using attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "audacity" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, directory
         , explicit-exception, filepath, non-empty, semigroups, stdenv
         , storable-record, storablevector, tagchup, transformers
         , utility-ht, xml-basic
         }:
         mkDerivation {
           pname = "audacity";
           version = "0.0.2";
           sha256 = "d9d2dfb1c4e6ad39b535561feb720a7889dc1151ad6625fd5522d4212dbc26a4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring deepseq directory explicit-exception filepath
             non-empty semigroups storable-record storablevector tagchup
             transformers utility-ht xml-basic
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/audacity";
           description = "Interchange with the Audacity sound signal editor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aur" = callPackage
        ({ mkDerivation, aeson, base, http-client, servant, servant-client
         , stdenv, text
         }:
         mkDerivation {
           pname = "aur";
           version = "6.2.0.1";
           sha256 = "a2892492bd0cd07508b25eafd822a4196b5a04fe9215d44360b2e848d6d80502";
           libraryHaskellDepends = [
             aeson base http-client servant servant-client text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aurapm/aura";
           description = "Access metadata from the Arch Linux User Repository";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "authenticate" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
         , case-insensitive, conduit, containers, html-conduit, http-conduit
         , http-types, network-uri, resourcet, stdenv, text, transformers
         , unordered-containers, xml-conduit
         }:
         mkDerivation {
           pname = "authenticate";
           version = "1.3.5";
           sha256 = "5f13043155a53b14da9b3625e512480110a5d906b0fd8eca2d2493c63c20ae81";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder bytestring case-insensitive
             conduit containers html-conduit http-conduit http-types network-uri
             resourcet text transformers unordered-containers xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/authenticate";
           description = "Authentication methods for Haskell web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "authenticate-oauth" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , crypto-pubkey-types, data-default, http-client, http-types
         , random, RSA, SHA, stdenv, time, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "authenticate-oauth";
           version = "1.6.0.1";
           sha256 = "e0520fb4255ac8d6ff30f06a2b91a9fdc478aa799e254e52747ebd13d70f3ec3";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring crypto-pubkey-types
             data-default http-client http-types random RSA SHA time
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/authenticate";
           description = "Library to authenticate with OAuth for Haskell web applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "auto" = callPackage
        ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
         , deepseq, MonadRandom, profunctors, random, semigroups, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "auto";
           version = "0.4.3.1";
           sha256 = "c6e26d1cbb17e3645e55bc8e9432b124520fbcba5ff32445acd4260c25cd3b41";
           libraryHaskellDepends = [
             base base-orphans bytestring cereal containers deepseq MonadRandom
             profunctors random semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/auto";
           description = "Denotative, locally stateful programming DSL & platform";
           license = stdenv.lib.licenses.mit;
         }) {};
      "auto-update" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "auto-update";
           version = "0.1.6";
           sha256 = "f4e023dc8713c387ecf20d851247597fd012cabea3872310b35e911105eb66c4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Efficiently run periodic, on-demand actions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "autoexporter" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, stdenv }:
         mkDerivation {
           pname = "autoexporter";
           version = "1.1.15";
           sha256 = "9d224acd9b1c7fa217d71b8e6d556891effb66874a9a26aa8b200444998d3718";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base Cabal directory filepath ];
           executableHaskellDepends = [ base Cabal directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/autoexporter#readme";
           description = "Automatically re-export modules";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avers" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, clock
         , containers, cryptonite, filepath, inflections, memory
         , MonadRandom, mtl, network, network-uri, resource-pool
         , rethinkdb-client-driver, safe, scrypt, stdenv, stm
         , template-haskell, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "avers";
           version = "0.0.17.1";
           sha256 = "1b45d8aa036b3c2ec7ea180327ff3cdce28dc1e1ef319c062be79f0ffa7626f5";
           revision = "34";
           editedCabalFile = "0mj6881npk0xdkf4nkcy52sn6y4414wdpysbw03kkb5vx6cgjws9";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring clock containers cryptonite
             filepath inflections memory MonadRandom mtl network network-uri
             resource-pool rethinkdb-client-driver safe scrypt stm
             template-haskell text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Server-side implementation of the Avers storage model";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "avers-api" = callPackage
        ({ mkDerivation, aeson, avers, base, bytestring, cookie
         , http-api-data, servant, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "avers-api";
           version = "0.1.0";
           sha256 = "5c1765976fd1ac49444023452e31cbe5200fd9c8480e1927aa4334e8752d5a3e";
           libraryHaskellDepends = [
             aeson avers base bytestring cookie http-api-data servant text time
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/wereHamster/avers-api";
           description = "Types describing the core and extended Avers APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avers-server" = callPackage
        ({ mkDerivation, aeson, avers, avers-api, base, base64-bytestring
         , bytestring, bytestring-conversion, containers, cookie, cryptonite
         , http-types, memory, mtl, resource-pool, servant, servant-server
         , stdenv, stm, text, time, transformers, wai, wai-websockets
         , websockets
         }:
         mkDerivation {
           pname = "avers-server";
           version = "0.1.0.1";
           sha256 = "becd96d702ba85bfa105f799da27e9fb1e483b59643345503e60888a8860518e";
           libraryHaskellDepends = [
             aeson avers avers-api base base64-bytestring bytestring
             bytestring-conversion containers cookie cryptonite http-types
             memory mtl resource-pool servant servant-server stm text time
             transformers wai wai-websockets websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/wereHamster/avers-server";
           description = "Server implementation of the Avers API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avro" = callPackage
        ({ mkDerivation, aeson, array, base, base16-bytestring, bifunctors
         , binary, bytestring, containers, data-binary-ieee754, deepseq
         , fail, hashable, mtl, scientific, semigroups, stdenv, tagged
         , template-haskell, text, tf-random, unordered-containers, vector
         , zlib
         }:
         mkDerivation {
           pname = "avro";
           version = "0.4.6.0";
           sha256 = "7d03f0de439d9334f1851dc6dda92405fab647d1184e42142f002ae1ed45fc88";
           libraryHaskellDepends = [
             aeson array base base16-bytestring bifunctors binary bytestring
             containers data-binary-ieee754 deepseq fail hashable mtl scientific
             semigroups tagged template-haskell text tf-random
             unordered-containers vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/avro#readme";
           description = "Avro serialization support for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "avwx" = callPackage
        ({ mkDerivation, attoparsec, base, HTTP, lens, optparse-applicative
         , parsers, pretty-show, stdenv, text
         }:
         mkDerivation {
           pname = "avwx";
           version = "0.3.0.2";
           sha256 = "b4299cc4e05a4c94f53d06f05b30baac1e15c59663b59afd1dd32417a280fb0a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ attoparsec base HTTP lens parsers text ];
           executableHaskellDepends = [
             base optparse-applicative pretty-show text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.hcesperer.org/posts/2016-09-20-avwx.html";
           description = "Parse aviation weather reports";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aws-cloudfront-signed-cookies" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, asn1-encoding, asn1-types
         , base, base64-bytestring, bytestring, cookie, cryptonite, lens
         , lens-aeson, optparse-applicative, pem, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aws-cloudfront-signed-cookies";
           version = "0.2.0.1";
           sha256 = "4850abc15a5614144c94e0dd4cce220c3fdb80c4904b6fa2bfe268f98c0564fa";
           revision = "3";
           editedCabalFile = "1v0bbyskwbawfhaji3s63hjrzwsi2bb7l8g6yxdp02bp6zb92757";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty asn1-encoding asn1-types base base64-bytestring
             bytestring cookie cryptonite lens lens-aeson optparse-applicative
             pem text time unordered-containers vector
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeclasses/aws-cloudfront-signed-cookies";
           description = "Generate signed cookies for AWS CloudFront";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aws-lambda-haskell-runtime" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client, http-types
         , path, path-io, safe-exceptions-checked, stdenv, template-haskell
         , text
         }:
         mkDerivation {
           pname = "aws-lambda-haskell-runtime";
           version = "2.0.3";
           sha256 = "d95a424399e2fd4f279083071bf760578c160971df1b3efe44ab7dfc6ee598f9";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-types path path-io
             safe-exceptions-checked template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/theam/aws-lambda-haskell-runtime#readme";
           description = "Haskell runtime for AWS Lambda";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "backprop" = callPackage
        ({ mkDerivation, base, containers, deepseq, microlens, primitive
         , reflection, stdenv, transformers, vector, vinyl
         }:
         mkDerivation {
           pname = "backprop";
           version = "0.2.6.3";
           sha256 = "b19dbb860a3611a43b02ff7a9920e10158eddb16bc87b719e61180c08098637e";
           libraryHaskellDepends = [
             base containers deepseq microlens primitive reflection transformers
             vector vinyl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://backprop.jle.im";
           description = "Heterogeneous automatic differentation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bank-holidays-england" = callPackage
        ({ mkDerivation, base, containers, stdenv, time }:
         mkDerivation {
           pname = "bank-holidays-england";
           version = "0.2.0.2";
           sha256 = "019d2d084f1340b08e6141fe05b7cf7cb62f3fb9d56a90fcc256b53031bd02e5";
           libraryHaskellDepends = [ base containers time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DaveCTurner/bank-holidays-england";
           description = "Calculation of bank holidays in England and Wales";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "barbies" = callPackage
        ({ mkDerivation, base, bifunctors, stdenv }:
         mkDerivation {
           pname = "barbies";
           version = "1.1.3.0";
           sha256 = "c12479bf02c9b823fefea2481948d770bb82f746f8460b8047f51b921d686739";
           libraryHaskellDepends = [ base bifunctors ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jcpetruzza/barbies#readme";
           description = "Classes for working with types that can change clothes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "barrier" = callPackage
        ({ mkDerivation, base, blaze-svg, bytestring, stdenv
         , template-haskell, text, unordered-containers
         }:
         mkDerivation {
           pname = "barrier";
           version = "0.1.1";
           sha256 = "6395da01eea1984c7bcc85c624b1b5dfbe0b6b764adeed7b04c9fa4d8de91ed9";
           revision = "1";
           editedCabalFile = "167akvi72l47gcqbq5609m24469pq0xmv0kjbmivnrxs796gh890";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-svg bytestring template-haskell text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/barrier";
           description = "Shields.io style badge generator";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-compat" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "base-compat";
           version = "0.10.5";
           sha256 = "990aea21568956d44ab018c5dbfbaea014b9a0d5295d29ca7550149419a6fb41";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           description = "A compatibility layer for base";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-compat-batteries" = callPackage
        ({ mkDerivation, base, base-compat, stdenv }:
         mkDerivation {
           pname = "base-compat-batteries";
           version = "0.10.5";
           sha256 = "175dcfd1453bd02ec955c05181cbf4278af145183b5899c62d3be29d866170ee";
           revision = "1";
           editedCabalFile = "15sn2qc8k0hxbb2nai341kkrci98hlhzcj2ci087m0zxcg5jcdbp";
           libraryHaskellDepends = [ base base-compat ];
           doHaddock = false;
           doCheck = false;
           description = "base-compat with extra batteries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-noprelude" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-noprelude";
           version = "4.12.0.0";
           sha256 = "abfa32167a9b4a68d4ae5acda2e9d66ffe883cdb780c4e626794cc44a42d62c1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/base-noprelude";
           description = "\"base\" package sans \"Prelude\" module";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base-orphans" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "base-orphans";
           version = "0.8.2";
           sha256 = "2a8062385e5d5dee418428a22c72b9391557bc1fe2f93bd643f7754b36b9eb01";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/base-orphans#readme";
           description = "Backwards-compatible orphan instances for base";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-prelude" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-prelude";
           version = "1.3";
           sha256 = "e3cc66e99d6c83aac548c4d8e6a166e5bd9cf557947cde49161026d0341267fe";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/base-prelude";
           description = "The most complete prelude formed solely from the \"base\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-unicode-symbols" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-unicode-symbols";
           version = "0.2.3";
           sha256 = "ee7bbe2bd314e8860a641264e956c2b5100ef5b2d5b847a69a3f3c894fa446c5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
           description = "Unicode alternatives for common functions and operators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base16-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "base16-bytestring";
           version = "0.1.1.6";
           sha256 = "5afe65a152c5418f5f4e3579a5e0d5ca19c279dc9bf31c1a371ccbe84705c449";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/base16-bytestring";
           description = "Fast base16 (hex) encoding and decoding for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base32string" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, stdenv, text }:
         mkDerivation {
           pname = "base32string";
           version = "0.9.1";
           sha256 = "9e931613aeba5f630f9292fc99131388f406e4b34d8f050515ed93aaf632ea32";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base binary bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a Base-32 string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base58string" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, stdenv, text }:
         mkDerivation {
           pname = "base58string";
           version = "0.10.0";
           sha256 = "3b72607dd76e30a5054acea656c3805f7191e27d67884a7db5fbc73c17e9c088";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base binary bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a Base-58 string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base64-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "base64-bytestring";
           version = "1.0.0.3";
           sha256 = "ef159d60ec14c0a3f3e26bab5c9fd7634d5e1b983c6a64f0b0c3261efe008fc7";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/base64-bytestring";
           description = "Fast base64 encoding and decoding for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base64-bytestring-type" = callPackage
        ({ mkDerivation, aeson, base, base-compat, base64-bytestring
         , binary, bytestring, cereal, deepseq, hashable, http-api-data
         , QuickCheck, serialise, stdenv, text
         }:
         mkDerivation {
           pname = "base64-bytestring-type";
           version = "1.0.1";
           sha256 = "f607d07c4aab227b4536c495fa7c07b35ddc9c2c013d385c16c02f236526780e";
           revision = "4";
           editedCabalFile = "0w7pzjyyhan42zbk8mn9dw1hzjcr0nv9nhpi4hs7s16d6cc80qwa";
           libraryHaskellDepends = [
             aeson base base-compat base64-bytestring binary bytestring cereal
             deepseq hashable http-api-data QuickCheck serialise text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/base64-bytestring-type#readme";
           description = "A newtype around ByteString, for base64 encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base64-string" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base64-string";
           version = "0.2";
           sha256 = "3ec896ca7261ad4ddeffbaa3bdf4d5cb61775250c303fca9929aa9a56acc705e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
           description = "Base64 implementation for String's";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "basement" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "basement";
           version = "0.0.11";
           sha256 = "67582b3475a5547925399f719df21f8bbbd0ca4d4db27795c22a474f8ee6346b";
           revision = "2";
           editedCabalFile = "1l95bzmn23cmx386hk3d3r0ykdaibh9rp489lcnba5g56kiy4hxg";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-foundation/foundation#readme";
           description = "Foundation scrap box of array & string";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "basic-prelude" = callPackage
        ({ mkDerivation, base, bytestring, containers, filepath, hashable
         , stdenv, text, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "basic-prelude";
           version = "0.7.0";
           sha256 = "10755f892548faa956b81b40d1d03ec6e94609fd8ec8e92be09b4453b7ad9379";
           libraryHaskellDepends = [
             base bytestring containers filepath hashable text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/basic-prelude#readme";
           description = "An enhanced core prelude; a common foundation for alternate preludes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bazel-runfiles" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "bazel-runfiles";
           version = "0.7.0.1";
           sha256 = "4d217f74a7eee5dced014d74ac8a3be886d9d0c5ce8e556d8ef16535bde40a00";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory filepath ];
           executableHaskellDepends = [ base filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tweag/rules_haskell#readme";
           description = "Locate Bazel runfiles location";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "bbdb" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "bbdb";
           version = "0.8";
           sha256 = "dce7798cb8e46e1c0f7048579496cabeebddaba9b6233820fd0496723fbc2a5c";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/henrylaxen/bbdb";
           description = "Ability to read, write, and modify BBDB files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "bcrypt" = callPackage
        ({ mkDerivation, base, bytestring, data-default, entropy, memory
         , stdenv
         }:
         mkDerivation {
           pname = "bcrypt";
           version = "0.0.11";
           sha256 = "e4331788eda7b65064d88930b4b7a50f5011bdec0ad46059d8c4ee6a5e72fcef";
           libraryHaskellDepends = [
             base bytestring data-default entropy memory
           ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell bindings to the bcrypt password hash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "beam-core" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, dlist, free
         , ghc-prim, hashable, microlens, mtl, network-uri, scientific
         , stdenv, tagged, text, time, vector, vector-sized
         }:
         mkDerivation {
           pname = "beam-core";
           version = "0.8.0.0";
           sha256 = "2893b34228b6888fdd0c49b0c7e2498d40628e74db390d9b33ce026febeee1d0";
           libraryHaskellDepends = [
             aeson base bytestring containers dlist free ghc-prim hashable
             microlens mtl network-uri scientific tagged text time vector
             vector-sized
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://travis.athougies.net/projects/beam.html";
           description = "Type-safe, feature-complete SQL query and manipulation interface for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "beam-migrate" = callPackage
        ({ mkDerivation, aeson, base, beam-core, bytestring, containers
         , deepseq, dependent-map, dependent-sum, free, ghc-prim, hashable
         , haskell-src-exts, microlens, mtl, parallel, pqueue, pretty
         , scientific, stdenv, text, time, unordered-containers, uuid-types
         , vector
         }:
         mkDerivation {
           pname = "beam-migrate";
           version = "0.4.0.1";
           sha256 = "ce4e57a254eaaf8b20c5fa01a330c0d2264ff3997119807ee299bfac56f48589";
           libraryHaskellDepends = [
             aeson base beam-core bytestring containers deepseq dependent-map
             dependent-sum free ghc-prim hashable haskell-src-exts microlens mtl
             parallel pqueue pretty scientific text time unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://travis.athougies.net/projects/beam.html";
           description = "SQL DDL support and migrations support library for Beam";
           license = stdenv.lib.licenses.mit;
         }) {};
      "beam-mysql" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, beam-core, bytestring
         , case-insensitive, free, hashable, mtl, mysql, network-uri
         , scientific, stdenv, text, time
         }:
         mkDerivation {
           pname = "beam-mysql";
           version = "0.2.0.0";
           sha256 = "a90858baf7a687a7043c6137755e7991f9a1d6f874bb5b230ab02df7bf630092";
           libraryHaskellDepends = [
             aeson attoparsec base beam-core bytestring case-insensitive free
             hashable mtl mysql network-uri scientific text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tathougies/beam-mysql";
           description = "Connection layer between beam and MySQL/MariaDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "beam-postgres" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, beam-core, beam-migrate
         , bytestring, case-insensitive, conduit, free, hashable
         , haskell-src-exts, lifted-base, monad-control, mtl, network-uri
         , postgresql-libpq, postgresql-simple, scientific, stdenv, tagged
         , text, time, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "beam-postgres";
           version = "0.4.0.0";
           sha256 = "7bc8dfd34c6fc034bf951ae38f0c795cf1ef39263c96b069de6078afbfb9b637";
           libraryHaskellDepends = [
             aeson attoparsec base beam-core beam-migrate bytestring
             case-insensitive conduit free hashable haskell-src-exts lifted-base
             monad-control mtl network-uri postgresql-libpq postgresql-simple
             scientific tagged text time unordered-containers uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://tathougies.github.io/beam/user-guide/backends/beam-postgres";
           description = "Connection layer between beam and postgres";
           license = stdenv.lib.licenses.mit;
         }) {};
      "beam-sqlite" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, beam-core, beam-migrate
         , bytestring, dlist, free, hashable, mtl, network-uri, scientific
         , sqlite-simple, stdenv, text, time, unix
         }:
         mkDerivation {
           pname = "beam-sqlite";
           version = "0.4.0.0";
           sha256 = "fcc75807e4a6052bfb0107ee8512fd0fbf6e10cc2d719cd956bd806d012a6a27";
           libraryHaskellDepends = [
             aeson attoparsec base beam-core beam-migrate bytestring dlist free
             hashable mtl network-uri scientific sqlite-simple text time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://tathougies.github.io/beam/user-guide/backends/beam-sqlite/";
           description = "Beam driver for SQLite";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bench" = callPackage
        ({ mkDerivation, base, criterion, optparse-applicative, process
         , silently, stdenv, text, turtle
         }:
         mkDerivation {
           pname = "bench";
           version = "1.0.12";
           sha256 = "a6376f4741588201ab6e5195efb1e9921bc0a899f77a5d9ac84a5db32f3ec9eb";
           revision = "1";
           editedCabalFile = "0sk6vkjwk7g1diwah67ifj7s69qvwi52ngaijkfx5prn0vz24ldn";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base criterion optparse-applicative process silently text turtle
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Gabriel439/bench";
           description = "Command-line benchmark tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bench-show" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, Chart, Chart-diagrams, csv
         , directory, filepath, mwc-random, optparse-applicative
         , optparse-simple, semigroups, split, statistics, stdenv
         , transformers, vector
         }:
         mkDerivation {
           pname = "bench-show";
           version = "0.3.1";
           sha256 = "f3643dca3e1988f76757e234ba8aafb7b02a4e49ea9636938a1cb2441b6b2e7c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base Chart Chart-diagrams csv directory filepath
             mwc-random split statistics transformers vector
           ];
           executableHaskellDepends = [
             ansi-wl-pprint base Chart Chart-diagrams csv directory filepath
             mwc-random optparse-applicative optparse-simple semigroups split
             statistics transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/composewell/bench-show";
           description = "Show, plot and compare benchmark results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "benchpress" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, time }:
         mkDerivation {
           pname = "benchpress";
           version = "0.2.2.12";
           sha256 = "d571e8d37f5ded433f184dcf8319757284abe6c0fce3106dd716812a5b0dab64";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base mtl time ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/WillSewell/benchpress";
           description = "Micro-benchmarking with detailed statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bencode" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, parsec
         , stdenv
         }:
         mkDerivation {
           pname = "bencode";
           version = "0.6.0.0";
           sha256 = "3b8efdfecee9bc486d9bcdbb633b7128ca235360f102478a7e0f8c895281f68a";
           revision = "1";
           editedCabalFile = "0nvph7frmrra9k57v01saxgnhf1ma3m8qzwj1i53pswssfnj41mv";
           libraryHaskellDepends = [
             base binary bytestring containers parsec
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parser and printer for bencoded data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bencoding" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, deepseq, ghc-prim
         , integer-gmp, mtl, pretty, stdenv, text
         }:
         mkDerivation {
           pname = "bencoding";
           version = "0.4.5.2";
           sha256 = "789ae242d5d04c33188ad3c277ec22e873b2ecb27c22fd7069b0ed22a5291be0";
           libraryHaskellDepends = [
             attoparsec base bytestring deepseq ghc-prim integer-gmp mtl pretty
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sergv/bencoding";
           description = "A library for encoding and decoding of BEncode data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "between" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "between";
           version = "0.11.0.0";
           sha256 = "8337351326c5a613d9b7520b6a8203234c04454e23550a81739beaa6f671465d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/trskop/between";
           description = "Function combinator \"between\" and derived combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bibtex" = callPackage
        ({ mkDerivation, base, latex, parsec, stdenv, utility-ht }:
         mkDerivation {
           pname = "bibtex";
           version = "0.1.0.6";
           sha256 = "090a3b9589388bdf9d2bf60d8d1898aa0313a2874b551ba86cbbd049f3ee5f04";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base latex parsec utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/BibTeX";
           description = "Parse, format and processing BibTeX files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bifunctors" = callPackage
        ({ mkDerivation, base, base-orphans, comonad, containers, stdenv
         , tagged, template-haskell, th-abstraction, transformers
         }:
         mkDerivation {
           pname = "bifunctors";
           version = "5.5.7";
           sha256 = "88b3a2d4504e1139a3aef7027913faa0870631477d0a2ebb6fa67d494cdb3532";
           libraryHaskellDepends = [
             base base-orphans comonad containers tagged template-haskell
             th-abstraction transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bifunctors/";
           description = "Bifunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bimap" = callPackage
        ({ mkDerivation, base, containers, deepseq, exceptions, stdenv }:
         mkDerivation {
           pname = "bimap";
           version = "0.4.0";
           sha256 = "d1a39686abbfed5864a8fb778d2244825b6eac977e130e7c1212e6d3a68f249d";
           revision = "1";
           editedCabalFile = "111wyqh17a6pkjhyaz8n1891m69hwr2gybqcpacw4xdmarxmi7f5";
           libraryHaskellDepends = [ base containers deepseq exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joelwilliamson/bimap";
           description = "Bidirectional mapping between two key types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bimap-server" = callPackage
        ({ mkDerivation, aeson, base, bimap, binary, directory, http-types
         , stdenv, unix, wai, warp
         }:
         mkDerivation {
           pname = "bimap-server";
           version = "0.1.0.1";
           sha256 = "09dfd1865812f40e317b610cbe05cc65ba6ea7215428748e1038ff7fc38ef535";
           libraryHaskellDepends = [
             aeson base bimap binary directory http-types unix wai warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Two-column database server";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-bits" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "binary-bits";
           version = "0.5";
           sha256 = "16534a018a4754d8d1eab051711c23fb741f41a0d141b289001c52824b5be794";
           revision = "1";
           editedCabalFile = "08x9vx9akj46aw1l9k9xhhvqpxwffbz7fcr2dk5vr001a2ya4ngm";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Bit parsing/writing on top of binary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-conduit" = callPackage
        ({ mkDerivation, base, binary, bytestring, conduit, exceptions
         , stdenv, vector
         }:
         mkDerivation {
           pname = "binary-conduit";
           version = "1.3.1";
           sha256 = "0480c3ff498bdbba6913ee8ad70d4828cf7a766bf9336a3ed8eb73676c46d29f";
           libraryHaskellDepends = [
             base binary bytestring conduit exceptions vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/qnikst/binary-conduit/";
           description = "data serialization/deserialization conduit library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "binary-ext" = callPackage
        ({ mkDerivation, attoparsec, base, binary, bytestring, conduit
         , conduit-combinators, data-binary-ieee754, errors, exceptions
         , monad-control, monad-loops, mono-traversable, mtl, scientific
         , stdenv, text, transformers, transformers-base
         }:
         mkDerivation {
           pname = "binary-ext";
           version = "2.0.4";
           sha256 = "6e58e19bde26d6f271916ceb43a28903136e28cf7868d86f65e68a60152ade08";
           libraryHaskellDepends = [
             attoparsec base binary bytestring conduit conduit-combinators
             data-binary-ieee754 errors exceptions monad-control monad-loops
             mono-traversable mtl scientific text transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/A1-Triard/binary-ext#readme";
           description = "An alternate with strong-typed errors for `Data.Binary.Get` monad from `binary` package.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "binary-ieee754" = callPackage
        ({ mkDerivation, array, base, binary, stdenv }:
         mkDerivation {
           pname = "binary-ieee754";
           version = "0.1.0.0";
           sha256 = "15c489898bcd346b4067a27579cb5fc62e2fafecbec81ea0446165a24aee4d54";
           libraryHaskellDepends = [ array base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/binary-ieee754";
           description = "Backport ieee754 float double combinators to older binary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-list" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, phantom-state
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "binary-list";
           version = "1.1.1.2";
           sha256 = "6b21e58ea4091b9572cb24a92dfb1ddc14fcea82d2272d30a83eb1b430dd1878";
           libraryHaskellDepends = [
             base binary bytestring deepseq phantom-state transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lists of length a power of two";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-orphans" = callPackage
        ({ mkDerivation, base, binary, stdenv, transformers }:
         mkDerivation {
           pname = "binary-orphans";
           version = "1.0.1";
           sha256 = "431ad40b8d812bada186c68935c0a69aa2904ca3bc57d957e1b0fb7d73b1753d";
           revision = "4";
           editedCabalFile = "07jwyndphnfr20ihagncpl8rr7i62hxf0b9m2bdahyzvz0yzdsl2";
           libraryHaskellDepends = [ base binary transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Compatibility package for binary; provides instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-parser" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring, mtl, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "binary-parser";
           version = "0.5.5";
           sha256 = "1dab718e06a978118cd28d2412bceaa0b6ec8d67785bdb0982e259fb60fe43b3";
           revision = "3";
           editedCabalFile = "14n41yazmks2qw0v4krxcqw3ac0wdy2z53d0qz0rdjcd94fpghjf";
           libraryHaskellDepends = [
             base base-prelude bytestring mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/binary-parser";
           description = "A highly-efficient but limited parser API specialised for bytestrings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "binary-parsers" = callPackage
        ({ mkDerivation, base, binary, bytestring, bytestring-lexing
         , scientific, stdenv
         }:
         mkDerivation {
           pname = "binary-parsers";
           version = "0.2.4.0";
           sha256 = "d193d3d3dca259e7299fb2c44cdd95b0a3e1bf54363ce4a9f6cda63b654bb9ca";
           libraryHaskellDepends = [
             base binary bytestring bytestring-lexing scientific
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/binary-parsers";
           description = "Extends binary with parsec/attoparsec style parsing combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-search" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "binary-search";
           version = "1.0.0.3";
           sha256 = "b0e32df46aeddceac57bd6afa940f84f275f82fb251479e10fadd7c14414f6fa";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Binary and exponential searches";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-shared" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, mtl, stdenv
         }:
         mkDerivation {
           pname = "binary-shared";
           version = "0.8.3";
           sha256 = "830116505018fc43de09867bea9039b0bfa29e77564efa8c3f3b708933c098b2";
           libraryHaskellDepends = [ base binary bytestring containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leksah.org";
           description = "Sharing for the binary package";
           license = "GPL";
         }) {};
      "binary-tagged" = callPackage
        ({ mkDerivation, aeson, array, base, base16-bytestring, binary
         , bytestring, containers, cryptohash-sha1, generics-sop, hashable
         , scientific, stdenv, tagged, text, time, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "binary-tagged";
           version = "0.2";
           sha256 = "123021887847d88d9d8efe09ec77a2d0b604c7162c81625f9d3bc136c115ebdd";
           revision = "1";
           editedCabalFile = "0chv885zl8m7c6281sz8kfr2p7hgcl7xj0yjajjyr9whwfnylfj0";
           libraryHaskellDepends = [
             aeson array base base16-bytestring binary bytestring containers
             cryptohash-sha1 generics-sop hashable scientific tagged text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/binary-tagged#readme";
           description = "Tagged binary serialisation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bindings-DSL" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bindings-DSL";
           version = "1.0.25";
           sha256 = "63de32380c68d1cc5e9c7b3622d67832c786da21163ba0c8a4835e6dd169194f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
           description = "FFI domain specific language, on top of hsc2hs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bindings-GLFW" = callPackage
        ({ mkDerivation, base, bindings-DSL, libGL, libX11, libXcursor
         , libXext, libXfixes, libXi, libXinerama, libXrandr, libXxf86vm
         , stdenv
         }:
         mkDerivation {
           pname = "bindings-GLFW";
           version = "3.2.1.1";
           sha256 = "6b24c66b20ebfd8ff2e4ac32e3b435889bba0a32477598ba69fc7adc9608160e";
           libraryHaskellDepends = [ base bindings-DSL ];
           librarySystemDepends = [
             libGL libX11 libXcursor libXext libXfixes libXi libXinerama
             libXrandr libXxf86vm
           ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level bindings to GLFW OpenGL library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL; inherit (pkgs.xorg) libXext; 
inherit (pkgs.xorg) libXfixes;};
      "bindings-libzip" = callPackage
        ({ mkDerivation, base, bindings-DSL, libzip, stdenv }:
         mkDerivation {
           pname = "bindings-libzip";
           version = "1.0.1";
           sha256 = "908d060360d66974b1d9400dea28a1dce35a88baf5d73a6e3c12be8e74cda2ec";
           libraryHaskellDepends = [ base bindings-DSL ];
           libraryPkgconfigDepends = [ libzip ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitbucket.org/astanin/hs-libzip/";
           description = "Low level bindings to libzip";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libzip;};
      "bindings-uname" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bindings-uname";
           version = "0.1";
           sha256 = "130e75c3fd95e232452c7d903efbfab2d2ff6c9d455b617adeaebe5d60235cd3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level binding to POSIX uname(3)";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "bins" = callPackage
        ({ mkDerivation, base, containers, finite-typelits
         , ghc-typelits-knownnat, ghc-typelits-natnormalise, math-functions
         , profunctors, reflection, stdenv, tagged, vector-sized
         }:
         mkDerivation {
           pname = "bins";
           version = "0.1.2.0";
           sha256 = "8a83fe1b836f7455b060becafa19c625a3f35bc2576295d163a81dbe91bbff0e";
           libraryHaskellDepends = [
             base containers finite-typelits ghc-typelits-knownnat
             ghc-typelits-natnormalise math-functions profunctors reflection
             tagged vector-sized
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/bins#readme";
           description = "Aggregate continuous values into discrete bins";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bitarray" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "bitarray";
           version = "0.0.1.1";
           sha256 = "b27f6f1065053a0e8e24fbf9382b7060af9962d8d150b631c682c0c58469d802";
           revision = "1";
           editedCabalFile = "10fk92v9afjqk43zi621jxl0n8kci0xjj32lz3vqa9xbh67zjz45";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~bkomuves/";
           description = "Mutable and immutable bit arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bitcoin-block" = callPackage
        ({ mkDerivation, base, binary, bitcoin-tx, bitcoin-types
         , bytestring, cryptohash, hexstring, largeword, lens, stdenv
         }:
         mkDerivation {
           pname = "bitcoin-block";
           version = "0.13.1";
           sha256 = "d7f57c0fe71045dab85d223dc15d64db3a15cc7fd8446bfe4ebd98cd9d417d5a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-tx bitcoin-types bytestring cryptohash
             hexstring largeword lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Utility functions for manipulating bitcoin blocks";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-script" = callPackage
        ({ mkDerivation, base, base16-bytestring, binary, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "bitcoin-script";
           version = "0.11.1";
           sha256 = "398c1d86e918731b5b2026351bb3b0b90b20606517e7c21e42f05d6c6e197b4c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base16-bytestring binary bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Compilation, manipulation and decompilation of Bitcoin scripts";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-tx" = callPackage
        ({ mkDerivation, base, binary, bitcoin-script, bitcoin-types
         , bytestring, cryptohash, hexstring, lens, stdenv
         }:
         mkDerivation {
           pname = "bitcoin-tx";
           version = "0.13.1";
           sha256 = "3bb88265353066c394e96a56b2dc555fa13d37ca7f820978b793196c6829cc00";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-script bitcoin-types bytestring cryptohash
             hexstring lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Utility functions for manipulating bitcoin transactions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-types" = callPackage
        ({ mkDerivation, base, base58string, binary, bytestring, hexstring
         , stdenv, text
         }:
         mkDerivation {
           pname = "bitcoin-types";
           version = "0.9.2";
           sha256 = "b72f9448508b64706d5f443748dc9b8abde8e749959187ce3d8356cde0d6c40b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base58string binary bytestring hexstring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Provides consistent low-level types used commonly among Bitcoin implementations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bits" = callPackage
        ({ mkDerivation, base, bytes, Cabal, cabal-doctest, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "bits";
           version = "0.5.2";
           sha256 = "5b4d38ccdb18baa9859f36baad9600ce7648da54da6e3e258f3808a2aaccafe0";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base bytes mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bits";
           description = "Various bit twiddling and bitwise serialization primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bits-extra" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, vector }:
         mkDerivation {
           pname = "bits-extra";
           version = "0.0.1.5";
           sha256 = "c5d15734689142425c65911ebeecd41f3d86d02778fa6c79b629d6fe909549b8";
           libraryHaskellDepends = [ base ghc-prim vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/bits-extra#readme";
           description = "Useful bitwise operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bitset-word8" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell
         , th-lift-instances
         }:
         mkDerivation {
           pname = "bitset-word8";
           version = "0.1.1.1";
           sha256 = "ffc0f8508049717192021dabcfe77d65f604cbe107da6b8b76d45b891dbe52de";
           libraryHaskellDepends = [
             base containers template-haskell th-lift-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/bitset-word8#readme";
           description = "Space efficient set of Word8 and some pre-canned sets useful for parsing HTTP";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitvec" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, gmp, integer-gmp
         , primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "bitvec";
           version = "1.0.2.0";
           sha256 = "052de3ca41f1a24e6beaf0d5dd5cd0569fd4db2ee703ad7e8834bba8be883932";
           libraryHaskellDepends = [
             base deepseq ghc-prim integer-gmp primitive vector
           ];
           librarySystemDepends = [ gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/bitvec";
           description = "Space-efficient bit vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) gmp;};
      "bitx-bitcoin" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, exceptions
         , http-client, http-client-tls, http-types, microlens, microlens-th
         , network, QuickCheck, scientific, split, stdenv, text, time
         }:
         mkDerivation {
           pname = "bitx-bitcoin";
           version = "0.12.0.0";
           sha256 = "31f2398bbb0deff80361fdabb108c1552ae097b15a44c6ca6674977ae735c871";
           libraryHaskellDepends = [
             aeson base bytestring deepseq exceptions http-client
             http-client-tls http-types microlens microlens-th network
             QuickCheck scientific split text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tebello-thejane/bitx.hs";
           description = "A Haskell library for working with the BitX bitcoin exchange";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blake2" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "blake2";
           version = "0.3.0";
           sha256 = "3b5ab376b87f481f2245f62734071a0e4a80b8ba9cd0cc67a407dd36f23c2379";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/centromere/blake2";
           description = "A library providing BLAKE2";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "blas-carray" = callPackage
        ({ mkDerivation, base, blas-ffi, carray, netlib-carray, netlib-ffi
         , stdenv, storable-complex, transformers
         }:
         mkDerivation {
           pname = "blas-carray";
           version = "0.1.0.1";
           sha256 = "f4bd1f0d73707ea92992ad18fdea6998ebca2681d76cfde577df67f61f8717ab";
           libraryHaskellDepends = [
             base blas-ffi carray netlib-carray netlib-ffi storable-complex
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/blas-carray/";
           description = "Auto-generated interface to Fortran BLAS via CArrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blas-comfort-array" = callPackage
        ({ mkDerivation, base, blas-ffi, comfort-array
         , netlib-comfort-array, netlib-ffi, stdenv, storable-complex
         , transformers
         }:
         mkDerivation {
           pname = "blas-comfort-array";
           version = "0.0.0.2";
           sha256 = "a1cd40064f00c8d5c0dccb0fccaf8a61bb946f7cbbaf8e1ae008ac7b0b483cd9";
           libraryHaskellDepends = [
             base blas-ffi comfort-array netlib-comfort-array netlib-ffi
             storable-complex transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/blas-comfort-array/";
           description = "Auto-generated interface to Fortran BLAS via comfort-array";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blas-ffi" = callPackage
        ({ mkDerivation, base, blas, netlib-ffi, stdenv }:
         mkDerivation {
           pname = "blas-ffi";
           version = "0.1";
           sha256 = "85a77bd66dc55e48a0922ca1c10c484f4a01bddb31008e24bd5a7b75460fbcfe";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base netlib-ffi ];
           libraryPkgconfigDepends = [ blas ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/blas-ffi/";
           description = "Auto-generated interface to Fortran BLAS";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) blas;};
      "blas-hs" = callPackage
        ({ mkDerivation, base, blas, stdenv, storable-complex }:
         mkDerivation {
           pname = "blas-hs";
           version = "0.1.1.0";
           sha256 = "80e06b0927982b391d239f8656ed437cd29665969d1a078ea4e42a2bf196b086";
           libraryHaskellDepends = [ base storable-complex ];
           librarySystemDepends = [ blas ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Rufflewind/blas-hs";
           description = "Low-level Haskell bindings to Blas";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) blas;};
      "blaze-bootstrap" = callPackage
        ({ mkDerivation, base, blaze-html, stdenv, text }:
         mkDerivation {
           pname = "blaze-bootstrap";
           version = "0.1.0.1";
           sha256 = "53b54c0b55ae7a436ec7e5d4e29d50fceb1ccd459ef715236358a3c661d05163";
           libraryHaskellDepends = [ base blaze-html text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/blaze-bootstrap";
           description = "Blaze helper functions for bootstrap pages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "blaze-builder" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv, text }:
         mkDerivation {
           pname = "blaze-builder";
           version = "0.4.1.0";
           sha256 = "91fc8b966f3e9dc9461e1675c7566b881740f99abc906495491a3501630bc814";
           libraryHaskellDepends = [ base bytestring deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lpsmith/blaze-builder";
           description = "Efficient buffered output";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-colonnade" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, colonnade
         , profunctors, stdenv, text
         }:
         mkDerivation {
           pname = "blaze-colonnade";
           version = "1.2.2.1";
           sha256 = "4d3466813487b5847c2fed70cc717dab2c10495a988e100551468b8dc5c100f2";
           libraryHaskellDepends = [
             base blaze-html blaze-markup colonnade profunctors text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/colonnade#readme";
           description = "blaze-html backend for colonnade";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-html" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "blaze-html";
           version = "0.9.1.2";
           sha256 = "60503f42546c6c1b954014d188ea137e43d74dcffd2bf6157c113fd91a0c394c";
           libraryHaskellDepends = [
             base blaze-builder blaze-markup bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/blaze";
           description = "A blazingly fast HTML combinator library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-markup" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, stdenv, text }:
         mkDerivation {
           pname = "blaze-markup";
           version = "0.8.2.3";
           sha256 = "72f8b0ed5310e3c2e49abcc9273728555655ec5f13f3f0e1f7cd1da9ad3a35bd";
           libraryHaskellDepends = [ base blaze-builder bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/blaze";
           description = "A blazingly fast markup combinator library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-svg" = callPackage
        ({ mkDerivation, base, blaze-markup, mtl, stdenv }:
         mkDerivation {
           pname = "blaze-svg";
           version = "0.3.6.1";
           sha256 = "f6a4f1bba1e973b336e94de73369f4562778fde43b6ac7c0b32d6a501527aa60";
           libraryHaskellDepends = [ base blaze-markup mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/deepakjois/blaze-svg";
           description = "SVG combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-textual" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, ghc-prim
         , integer-gmp, old-locale, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "blaze-textual";
           version = "0.2.1.0";
           sha256 = "1042795ab0bab891c034c24a51bafecbb89870ccd28af39534ab3d9ae7f46c2d";
           libraryHaskellDepends = [
             base blaze-builder bytestring ghc-prim integer-gmp old-locale text
             time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/blaze-textual";
           description = "Fast rendering of common datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bmp" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "bmp";
           version = "1.2.6.3";
           sha256 = "3cc63de40fe088ce4d1c869180fd2309bcec35a940c9e3d1904d3520ca2fdacc";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/benl23x5/bmp";
           description = "Read and write uncompressed BMP image files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "board-games" = callPackage
        ({ mkDerivation, array, base, cgi, containers, enummapset, html
         , httpd-shed, network-uri, non-empty, QuickCheck, random, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "board-games";
           version = "0.3";
           sha256 = "a77bcfe67d4c83ab0b15f1fdbed553d786416a83d2ba9bdb023b4840fd8a9cfa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base cgi containers enummapset html non-empty QuickCheck
             random transformers utility-ht
           ];
           executableHaskellDepends = [
             array base cgi containers html httpd-shed network-uri non-empty
             random transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/games/";
           description = "Three games for inclusion in a web server";
           license = "GPL";
         }) {};
      "boltzmann-samplers" = callPackage
        ({ mkDerivation, ad, base, containers, hashable, hmatrix, ieee754
         , MonadRandom, mtl, QuickCheck, stdenv, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "boltzmann-samplers";
           version = "0.1.1.0";
           sha256 = "de7c3e1f77b0ae27c78cb53e539dbaa8dc2f6e3f3605c25f1611545806ad878e";
           libraryHaskellDepends = [
             ad base containers hashable hmatrix ieee754 MonadRandom mtl
             QuickCheck transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/boltzmann-samplers#readme";
           description = "Uniform random generators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "boolean-like" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , semigroups, stdenv, text, vector
         }:
         mkDerivation {
           pname = "boolean-like";
           version = "0.1.1.0";
           sha256 = "6ca47b21a6d98161edfd94f4d5a19daacc13d229b87a0c107e868ff0259658b8";
           libraryHaskellDepends = [
             attoparsec base bytestring containers semigroups text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/Shou/boolean-like";
           description = "Logical combinatory operations dealing with datatypes representing booleans by their constructors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boolean-normal-forms" = callPackage
        ({ mkDerivation, base, cond, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "boolean-normal-forms";
           version = "0.0.1.1";
           sha256 = "59a9474c0b4a0e7b0812c401f80c4e1032d1c8627c92f29dd7e51d660ea1547f";
           libraryHaskellDepends = [ base cond containers deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Boolean normal form: NNF, DNF & CNF";
           license = stdenv.lib.licenses.mit;
         }) {};
      "boolsimplifier" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "boolsimplifier";
           version = "0.1.8";
           sha256 = "096fa9377241520ee114403fd53b51a7369187fb4dca65f19f85a727d689828f";
           revision = "1";
           editedCabalFile = "0xqm0vn9i49b75fnvnvcnr9m4zwvhqynrkcjdxghrsxayg420lnh";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Simplification tools for simple propositional formulas";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boots" = callPackage
        ({ mkDerivation, base, exceptions, mtl, stdenv }:
         mkDerivation {
           pname = "boots";
           version = "0.0.100";
           sha256 = "9f55de481474fb3630c6f0c14ffa4cda5f5e86a6d3e2299e7c3498f20b2cc860";
           libraryHaskellDepends = [ base exceptions mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leptonyu/boots#readme";
           description = "IoC Monad in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bordacount" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "bordacount";
           version = "0.1.0.0";
           sha256 = "cb691095f688dc2c1726750d5e5d267d3f49466377869a574d6416090a46fdce";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/bordacount#readme";
           description = "Implementation of the Borda count election method";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boring" = callPackage
        ({ mkDerivation, adjunctions, base, base-compat, constraints, dec
         , fin, generics-sop, singleton-bool, stdenv, streams, tagged
         , transformers, transformers-compat, vec
         }:
         mkDerivation {
           pname = "boring";
           version = "0.1.2";
           sha256 = "5926f11595064f71e562d8293deedca0678b463755361f3e6567dd3c0a6ee824";
           revision = "3";
           editedCabalFile = "1d7xl2dxm4v33j1bd5450x1mh86x8kb24qjvad8nk98dmgf63ah2";
           libraryHaskellDepends = [
             adjunctions base base-compat constraints dec fin generics-sop
             singleton-bool streams tagged transformers transformers-compat vec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/boring";
           description = "Boring and Absurd types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "both" = callPackage
        ({ mkDerivation, base, semigroups, stdenv, zero }:
         mkDerivation {
           pname = "both";
           version = "0.1.1.0";
           sha256 = "6f4ee8b7745fb3054282240fe941dd74cf2481f1a07b170d211c2b8791340e8e";
           revision = "1";
           editedCabalFile = "0fi2lvxcdnj9bi683kl840xpyj12wxwxvqbi86a6qp4r8bq8442n";
           libraryHaskellDepends = [ base semigroups zero ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/both";
           description = "Like Maybe, but with a different Monoid instance";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bound" = callPackage
        ({ mkDerivation, base, bifunctors, binary, bytes, Cabal
         , cabal-doctest, cereal, comonad, deepseq, hashable, mmorph
         , profunctors, stdenv, template-haskell, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "bound";
           version = "2.0.1";
           sha256 = "294a206f33b6583e56bd3aad620e4a7bd0a22b4bf4c6fe5988b2fe55159fbb76";
           revision = "7";
           editedCabalFile = "0amr5rpq8andqq3z2dsh8hn67g3x7ykcmqq899vbkxwnpvg60h5r";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bifunctors binary bytes cereal comonad deepseq hashable mmorph
             profunctors template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bound/";
           description = "Making de Bruijn Succ Less";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bounded-queue" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "bounded-queue";
           version = "1.0.0";
           sha256 = "ad7056ad562c19841bf5e8d911de3ce90df6d49ff83bf45d341bf0e97e9b54a2";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/fosskers/bounded-queue";
           description = "A strict, immutable, thread-safe, single-ended, bounded queue";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boundingboxes" = callPackage
        ({ mkDerivation, base, lens, stdenv }:
         mkDerivation {
           pname = "boundingboxes";
           version = "0.2.3";
           sha256 = "e80947aa2c2c7f11e7eb2eb088a463d1cd1cdf03790e4c2746b629dcb1737564";
           libraryHaskellDepends = [ base lens ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/boundingboxes";
           description = "A generic boundingbox for an arbitrary vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bower-json" = callPackage
        ({ mkDerivation, aeson, aeson-better-errors, base, bytestring
         , deepseq, ghc-prim, mtl, scientific, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "bower-json";
           version = "1.0.0.1";
           sha256 = "7aa954e2b1bf79307db710c158108bd9ddb45b333ca96072cdbfaf96c77b7e73";
           libraryHaskellDepends = [
             aeson aeson-better-errors base bytestring deepseq ghc-prim mtl
             scientific text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdgarrood/bower-json";
           description = "Read bower.json from Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "boxes" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "boxes";
           version = "0.1.5";
           sha256 = "38e1782e8a458f342a0acbb74af8f55cb120756bc3af7ee7220d955812af56c3";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           description = "2D text pretty-printing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "brick" = callPackage
        ({ mkDerivation, base, config-ini, containers, contravariant
         , data-clist, deepseq, directory, dlist, filepath, microlens
         , microlens-mtl, microlens-th, stdenv, stm, template-haskell, text
         , text-zipper, transformers, unix, vector, vty, word-wrap
         }:
         mkDerivation {
           pname = "brick";
           version = "0.47.1";
           sha256 = "30913841ced247545f77c23b7f3665c108c9017119556ff7fffd5d6d72cf0e68";
           configureFlags = [ "-fdemos" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base config-ini containers contravariant data-clist deepseq
             directory dlist filepath microlens microlens-mtl microlens-th stm
             template-haskell text text-zipper transformers unix vector vty
             word-wrap
           ];
           executableHaskellDepends = [
             base microlens microlens-th text text-zipper vector vty word-wrap
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/brick/";
           description = "A declarative terminal user interface library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "brittany" = callPackage
        ({ mkDerivation, aeson, base, butcher, bytestring, cmdargs
         , containers, czipwith, data-tree-print, deepseq, directory, extra
         , filepath, ghc, ghc-boot-th, ghc-exactprint, ghc-paths, monad-memo
         , mtl, multistate, neat-interpolation, pretty, random, safe
         , semigroups, stdenv, strict, syb, text, transformers, uniplate
         , unsafe, yaml
         }:
         mkDerivation {
           pname = "brittany";
           version = "0.12.1.1";
           sha256 = "ff40f792758233ed52904a80c7f2438adeed9fec810ac2c93055f5b35af5875b";
           revision = "2";
           editedCabalFile = "0pfrm5vvh7x94f8gy8ka6rmq6yk6xxxgba68rd91bk8lbjxsmkxl";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base butcher bytestring cmdargs containers czipwith
             data-tree-print deepseq directory extra filepath ghc ghc-boot-th
             ghc-exactprint ghc-paths monad-memo mtl multistate
             neat-interpolation pretty random safe semigroups strict syb text
             transformers uniplate unsafe yaml
           ];
           executableHaskellDepends = [
             aeson base butcher bytestring cmdargs containers czipwith
             data-tree-print deepseq directory extra filepath ghc ghc-boot-th
             ghc-exactprint ghc-paths monad-memo mtl multistate
             neat-interpolation pretty safe semigroups strict syb text
             transformers uniplate unsafe yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/brittany/";
           description = "Haskell source code formatter";
           license = stdenv.lib.licenses.agpl3;
         }) {};
      "bsb-http-chunked" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bsb-http-chunked";
           version = "0.0.0.4";
           sha256 = "148309e23eb8b261c1de374712372d62d8c8dc8ee504c392809c7ec33c0a0e7c";
           revision = "2";
           editedCabalFile = "0bz62lxdbnwkfr1d4ngm8xi4y1ndpdflbv71s6h43vp5lbd546hr";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sjakobi/bsb-http-chunked";
           description = "Chunked HTTP transfer encoding for bytestring builders";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bson" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptohash-md5
         , data-binary-ieee754, mtl, network, stdenv, text, time
         }:
         mkDerivation {
           pname = "bson";
           version = "0.3.2.8";
           sha256 = "881cbef714750200c284f7474c1d5152454a722b1ed93e29b33b53b881961df7";
           libraryHaskellDepends = [
             base binary bytestring cryptohash-md5 data-binary-ieee754 mtl
             network text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mongodb-haskell/bson";
           description = "BSON documents are JSON-like objects with a standard binary encoding";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "bson-lens" = callPackage
        ({ mkDerivation, base, bson, lens, stdenv, text }:
         mkDerivation {
           pname = "bson-lens";
           version = "0.1.1";
           sha256 = "d73bb417def2d8cb1efebfc22482a859e119bcc4005dd10106c82dff5ceeb160";
           libraryHaskellDepends = [ base bson lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/bson-lens";
           description = "BSON lenses";
           license = stdenv.lib.licenses.mit;
         }) {};
      "btrfs" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, time, unix }:
         mkDerivation {
           pname = "btrfs";
           version = "0.2.0.0";
           sha256 = "22ffcc2c0168992f4fcf06bd2b3467392b889801b2d3ab45212cc4a1c8f2a6c0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring time unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-btrfs";
           description = "Bindings to the btrfs API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "buffer-builder" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "buffer-builder";
           version = "0.2.4.7";
           sha256 = "b389fac5ce61818adb8451550762aca135c34b9007b68be5a8d9a0fa45583f58";
           libraryHaskellDepends = [
             base bytestring mtl text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chadaustin/buffer-builder";
           description = "Library for efficiently building up buffers, one piece at a time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "buffer-pipe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "buffer-pipe";
           version = "0.0";
           sha256 = "0875b6e41988f70e20d2e9d1a092ae03d545954732f93d65a3481b5c4b52dccf";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Read from stdin and write to stdout in large blocks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bugsnag-haskell" = callPackage
        ({ mkDerivation, aeson, base, bytestring, case-insensitive
         , containers, Glob, http-client, http-client-tls, http-conduit
         , http-types, iproute, network, parsec, stdenv, template-haskell
         , text, th-lift-instances, time, ua-parser, wai
         }:
         mkDerivation {
           pname = "bugsnag-haskell";
           version = "0.0.3.0";
           sha256 = "98258f64568d1898a70e5c3d8faaacfd1c06c3fa79f30e1c9abe3dba87c63cbc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring case-insensitive containers Glob http-client
             http-client-tls http-conduit http-types iproute network parsec
             template-haskell text th-lift-instances time ua-parser wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pbrisbin/bugsnag-haskell#readme";
           description = "Bugsnag error reporter for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bulletproofs" = callPackage
        ({ mkDerivation, arithmoi, base, containers, cryptonite, memory
         , MonadRandom, protolude, random-shuffle, stdenv, text
         }:
         mkDerivation {
           pname = "bulletproofs";
           version = "0.4.0";
           sha256 = "6c6ea840f4d22e07bc0325dcbc6f41004b627e1868ddd13939fdd6105e41842b";
           libraryHaskellDepends = [
             arithmoi base containers cryptonite memory MonadRandom protolude
             random-shuffle text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/bulletproofs#readme";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "butcher" = callPackage
        ({ mkDerivation, base, bifunctors, containers, deque, extra, free
         , microlens, microlens-th, mtl, multistate, pretty, stdenv
         , transformers, unsafe, void
         }:
         mkDerivation {
           pname = "butcher";
           version = "1.3.2.3";
           sha256 = "05177cb934f3cb6acfa5b0567321efa3987cbdee09a5dfbca8a9cc84bd62f152";
           revision = "2";
           editedCabalFile = "1751sllw8s81x3s1dhilbr5lqnv9cpdqiv17c8by466aa6304dxa";
           libraryHaskellDepends = [
             base bifunctors containers deque extra free microlens microlens-th
             mtl multistate pretty transformers unsafe void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/butcher/";
           description = "Chops a command or program invocation into digestable pieces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "butter" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , forkable-monad, free, HUnit, network-simple, stdenv, stm
         , template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "butter";
           version = "0.1.0.6";
           sha256 = "8640b2681a57c0bc545684c821e80a97d57fe14bc6036e9030dc4cc63c2e4164";
           libraryHaskellDepends = [
             aeson base bytestring containers forkable-monad free HUnit
             network-simple stm template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/System-Indystress/Butter#readme";
           description = "Monad Transformer for Asyncronous Message Passing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bv" = callPackage
        ({ mkDerivation, base, ghc-prim, integer-gmp, stdenv }:
         mkDerivation {
           pname = "bv";
           version = "0.5";
           sha256 = "04a189ab1758f6adc51ffff0a10705d8c8b54959946a90a3b9a750c930c77bda";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ghc-prim integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iagoabal/haskell-bv";
           description = "Bit-vector arithmetic library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bv-little" = callPackage
        ({ mkDerivation, base, deepseq, hashable, integer-gmp, keys
         , mono-traversable, mono-traversable-keys, primitive, QuickCheck
         , stdenv, text-show
         }:
         mkDerivation {
           pname = "bv-little";
           version = "1.1.1";
           sha256 = "d936b6eabc60706a2a0668ce88b7f0787feddbd82315b669a19eb1f9288e990c";
           libraryHaskellDepends = [
             base deepseq hashable integer-gmp keys mono-traversable
             mono-traversable-keys primitive QuickCheck text-show
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/recursion-ninja/bv-little";
           description = "Efficient little-endian bit vector library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "byteable";
           version = "0.1.1";
           sha256 = "243b34a1b5b64b39e39fe58f75c18f6cad5b668b10cabcd86816cbde27783fe2";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-byteable";
           description = "Type class for sequence of bytes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytedump" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bytedump";
           version = "1.0";
           sha256 = "ae17b5040f0423eec792505f14d1d3e53f5ff81ddf83524f1c5dc7a16c0dc0dd";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-bytedump";
           description = "Flexible byte dump helpers for human readers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteorder" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "byteorder";
           version = "1.0.4";
           sha256 = "bd20bbb586947f99c38a4c93d9d0266f49f6fc581767b51ba568f6d5d52d2919";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://community.haskell.org/~aslatter/code/byteorder";
           description = "Exposes the native endianness or byte ordering of the system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytes" = callPackage
        ({ mkDerivation, base, binary, bytestring, Cabal, cabal-doctest
         , cereal, containers, hashable, mtl, scientific, stdenv, text, time
         , transformers, transformers-compat, unordered-containers, void
         }:
         mkDerivation {
           pname = "bytes";
           version = "0.15.5";
           sha256 = "039935e6b367eb8657aa3eb109e719b257a06524b0d9ff5246e8029bb7a07118";
           revision = "1";
           editedCabalFile = "0k05cszpxmdwgnbxhmlmmvsxkwlanvz8dn0p3f6bzs8qlv3kbhm7";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base binary bytestring cereal containers hashable mtl scientific
             text time transformers transformers-compat unordered-containers
             void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ekmett/bytes";
           description = "Sharing code for serialization between binary and cereal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteset" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "byteset";
           version = "0.1.1.0";
           sha256 = "13499c5b279f022097e9ae1d0aeef3fcea12b7f18f50157d4950aec58741afa1";
           revision = "1";
           editedCabalFile = "1lgxxxrmw4g32pa861n6qbfpzwv14wfjrlp4hv5zd9hygy6v6q2p";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           description = "Set of bytes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-builder" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv }:
         mkDerivation {
           pname = "bytestring-builder";
           version = "0.10.8.2.0";
           sha256 = "27faef6db27c5be5a3715fd68b93725853e0e668849eaf92ce7c33cef9cb2c3f";
           libraryHaskellDepends = [ base bytestring deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "The new bytestring builder, packaged outside of GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-conversion" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, case-insensitive
         , double-conversion, stdenv, text
         }:
         mkDerivation {
           pname = "bytestring-conversion";
           version = "0.3.1";
           sha256 = "13b7ea48737dc7a7fd4c894ff1fb9344cf8d9ef8f4201e813d578b613e874ef8";
           revision = "2";
           editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
           libraryHaskellDepends = [
             attoparsec base bytestring case-insensitive double-conversion text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/twittner/bytestring-conversion/";
           description = "Type-classes to convert values to and from ByteString";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "bytestring-lexing" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bytestring-lexing";
           version = "0.5.0.2";
           sha256 = "01f9add3f25067a89c5ae9ab1f2fd8ab75ec9f386987ee0d83f73ec855b43f73";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Parse and produce literals efficiently from strict or lazy bytestrings";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "bytestring-strict-builder" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring, semigroups, stdenv
         }:
         mkDerivation {
           pname = "bytestring-strict-builder";
           version = "0.4.5.3";
           sha256 = "adcc72c11187604db87d1f7f9f679f8d40102a1ab904dcbbb1524cd445849e5c";
           revision = "1";
           editedCabalFile = "0i3gnzb2dlhxyjx5zbbgycf9l285amwj98s6drvq2hih21z4d3h6";
           libraryHaskellDepends = [
             base base-prelude bytestring semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/bytestring-strict-builder";
           description = "An efficient strict bytestring builder";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bytestring-to-vector" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "bytestring-to-vector";
           version = "0.3.0.1";
           sha256 = "ccfb5bdccd88a5be488acb291a5863d9026e109d2178e58d87948b43b519284a";
           libraryHaskellDepends = [ base bytestring vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/bytestring-to-vector";
           description = "Convert between ByteString and Vector.Storable without copying";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-tree-builder" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring, semigroups, stdenv
         , text
         }:
         mkDerivation {
           pname = "bytestring-tree-builder";
           version = "0.2.7.3";
           sha256 = "26cca5f48754d3d9435370fc2ee946c975c760a73345907d24fcc65b3f97e86c";
           libraryHaskellDepends = [
             base base-prelude bytestring semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/bytestring-tree-builder";
           description = "A very efficient ByteString builder implementation based on the binary tree";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bzlib" = callPackage
        ({ mkDerivation, base, bytestring, bzip2, stdenv }:
         mkDerivation {
           pname = "bzlib";
           version = "0.5.0.5";
           sha256 = "9ee7d0ac7461b330820af928c13c6668bf4fe3601f171c42432a85c33718017e";
           revision = "1";
           editedCabalFile = "1d4ra5prh2q9h8inpwvrsmkmg1ndisdj47jv06iijpj6xdp5bapl";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ bzip2 ];
           doHaddock = false;
           doCheck = false;
           description = "Compression and decompression in the bzip2 format";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) bzip2;};
      "bzlib-conduit" = callPackage
        ({ mkDerivation, base, bindings-DSL, bytestring, bzip2, conduit
         , data-default-class, mtl, resourcet, stdenv
         }:
         mkDerivation {
           pname = "bzlib-conduit";
           version = "0.3.0.2";
           sha256 = "eb2c732b3d4ab5f7b367c51eef845e597ade19da52c03ee11954d35b6cfc4128";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bindings-DSL bytestring conduit data-default-class mtl
             resourcet
           ];
           librarySystemDepends = [ bzip2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/bzlib-conduit#readme";
           description = "Streaming compression/decompression via conduits";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) bzip2;};
      "c2hs" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, directory
         , dlist, filepath, language-c, pretty, process, stdenv
         }:
         mkDerivation {
           pname = "c2hs";
           version = "0.28.6";
           sha256 = "91dd121ac565009f2fc215c50f3365ed66705071a698a545e869041b5d7ff4da";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             array base bytestring containers directory dlist filepath
             language-c pretty process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/c2hs";
           description = "C->Haskell FFI tool that gives some cross-language type safety";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "ca-province-codes" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text }:
         mkDerivation {
           pname = "ca-province-codes";
           version = "1.0.0.0";
           sha256 = "03e3427723546165237d5e27d1e24803ca6b7a5fd88a4e2a752bed812cae15d2";
           libraryHaskellDepends = [ aeson base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prikhi/ca-province-codes#readme";
           description = "ISO 3166-2:CA Province Codes and Names";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-doctest" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, stdenv }:
         mkDerivation {
           pname = "cabal-doctest";
           version = "1.0.8";
           sha256 = "2026a6a87d410202ce091412ca6bc33c5aca787025326b4a3d13425a23392e0e";
           revision = "1";
           editedCabalFile = "0z0r7h2y5six2zgfylcwr9g4j78qph35zqglk9lz4za1klvgdprl";
           libraryHaskellDepends = [ base Cabal directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/cabal-doctest";
           description = "A Setup.hs helper for doctests running";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-file-th" = callPackage
        ({ mkDerivation, base, Cabal, directory, pretty, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "cabal-file-th";
           version = "0.2.6";
           sha256 = "dc06f84889253b1d5e6d2859906283adc823f775091cee3155c0eabafa49554d";
           libraryHaskellDepends = [
             base Cabal directory pretty template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nkpart/cabal-file-th";
           description = "Template Haskell expressions for reading fields from a project's cabal file";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-install" = callPackage
        ({ mkDerivation, array, async, base, base16-bytestring, binary
         , bytestring, Cabal, containers, cryptohash-sha256, deepseq
         , directory, echo, edit-distance, filepath, hackage-security
         , hashable, HTTP, mtl, network, network-uri, parsec, pretty
         , process, random, stdenv, stm, tar, text, time, unix, zip-archive
         , zlib
         }:
         mkDerivation {
           pname = "cabal-install";
           version = "2.4.1.0";
           sha256 = "69bcb2b54a064982412e1587c3c5c1b4fada3344b41b568aab25730034cb21ad";
           revision = "3";
           editedCabalFile = "1mnm6mfrgavq3blvkm3wz45pqrj10apjihg1g9cds58qp19m9r1h";
           configureFlags = [ "-f-native-dns" ];
           isLibrary = false;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal filepath process ];
           executableHaskellDepends = [
             array async base base16-bytestring binary bytestring Cabal
             containers cryptohash-sha256 deepseq directory echo edit-distance
             filepath hackage-security hashable HTTP mtl network network-uri
             parsec pretty process random stm tar text time unix zip-archive
             zlib
           ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             mkdir $out/etc
             mv bash-completion $out/etc/bash_completion.d
           '';
           homepage = "http://www.haskell.org/cabal/";
           description = "The command-line interface for Cabal and Hackage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-rpm" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath
         , http-client, http-client-tls, http-conduit, optparse-applicative
         , process, simple-cabal, simple-cmd, simple-cmd-args, stdenv, time
         , unix
         }:
         mkDerivation {
           pname = "cabal-rpm";
           version = "1.0.3";
           sha256 = "d5383fecab21fe837ad809e158d70e70130ee9d594d6e6b0ccb3e4b7462f15c8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring Cabal directory filepath http-client
             http-client-tls http-conduit optparse-applicative process
             simple-cabal simple-cmd simple-cmd-args time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/cabal-rpm";
           description = "RPM packaging tool for Haskell Cabal-based packages";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "cabal2nix" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, bytestring, Cabal
         , containers, deepseq, directory, distribution-nixpkgs, filepath
         , hackage-db, hopenssl, hpack, language-nix, lens, monad-par
         , monad-par-extras, mtl, optparse-applicative, pretty, process
         , split, stdenv, text, time, transformers, yaml
         }:
         mkDerivation {
           pname = "cabal2nix";
           version = "2.14.4";
           sha256 = "103ff1f0ddcc6feee546f0d6e187eda47380c6337fe37a6ec65117863b6fb85f";
           revision = "2";
           editedCabalFile = "1hy50bhcyh5z5bd8yr44l40nmmwa3kqarbafs5b6w9nk83dgijpa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base bytestring Cabal containers deepseq
             directory distribution-nixpkgs filepath hackage-db hopenssl hpack
             language-nix lens optparse-applicative pretty process split text
             time transformers yaml
           ];
           executableHaskellDepends = [
             aeson base bytestring Cabal containers directory
             distribution-nixpkgs filepath hopenssl language-nix lens monad-par
             monad-par-extras mtl optparse-applicative pretty
           ];
           doHaddock = false;
           doCheck = false;
           preCheck = ''
             export PATH="$PWD/dist/build/cabal2nix:$PATH"
             export HOME="$TMPDIR/home"
           '';
           homepage = "https://github.com/nixos/cabal2nix#readme";
           description = "Convert Cabal files into Nix build instructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal2spec" = callPackage
        ({ mkDerivation, base, Cabal, filepath, optparse-applicative
         , stdenv, time
         }:
         mkDerivation {
           pname = "cabal2spec";
           version = "2.2.2.1";
           sha256 = "5ed56787f30468750cd356a160e7c73eda58c5ca100634ae343efc6d5619634b";
           revision = "1";
           editedCabalFile = "09bkjwnr01mgn1yf861p3dai18kgpm5mvw8nmh5zvdr8sgqi207v";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base Cabal filepath time ];
           executableHaskellDepends = [
             base Cabal filepath optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/cabal2spec";
           description = "Convert Cabal files into rpm spec files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "cache" = callPackage
        ({ mkDerivation, base, clock, hashable, stdenv, stm, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "cache";
           version = "0.1.3.0";
           sha256 = "42e9d9f040fab2fd5fc1095a901d6348de73342b1d14254bdaf6ca3d4f11e534";
           libraryHaskellDepends = [
             base clock hashable stm transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/haskell-cache#readme";
           description = "An in-memory key/value store with expiration support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cacophony" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, exceptions, free
         , lens, memory, monad-coroutine, mtl, safe-exceptions, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "cacophony";
           version = "0.10.1";
           sha256 = "52c5ac525767c89e103fcf50ebf8db2a9425904abea2e570b37c7fdf2a013bf1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring cryptonite exceptions free lens memory
             monad-coroutine mtl safe-exceptions transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/centromere/cacophony#readme";
           description = "A library implementing the Noise protocol";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "calendar-recycling" = callPackage
        ({ mkDerivation, base, containers, html, old-time, stdenv
         , utility-ht
         }:
         mkDerivation {
           pname = "calendar-recycling";
           version = "0.0.0.1";
           sha256 = "8cd39ccf4fbe538f8e5d434d0efd0c559074420b9283d2c7c4b7ab6262b4d529";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers html old-time utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/calendar-recycling";
           description = "List years with the same calendars";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "call-stack" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "call-stack";
           version = "0.1.0";
           sha256 = "f25f5e0992a39371079cc25c2a14b5abb872fa7d868a32753aac3a258b83b1e2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/call-stack#readme";
           description = "Use GHC call-stacks in a backward compatible way";
           license = stdenv.lib.licenses.mit;
         }) {};
      "carray" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, ix-shapable
         , QuickCheck, stdenv, syb
         }:
         mkDerivation {
           pname = "carray";
           version = "0.1.6.8";
           sha256 = "8f1967d54c7cf9680481c6f630eafa66f6d916b93c98f3b3c47449f682f11613";
           libraryHaskellDepends = [
             array base binary bytestring ix-shapable QuickCheck syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "A C-compatible array library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "case-insensitive" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, hashable, stdenv, text
         }:
         mkDerivation {
           pname = "case-insensitive";
           version = "1.2.0.11";
           sha256 = "a7ce6d17e50caaa0f19ad8e67361499022860554c521b1e57993759da3eb37e3";
           libraryHaskellDepends = [ base bytestring deepseq hashable text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/case-insensitive";
           description = "Case insensitive string comparison";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cased" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "cased";
           version = "0.1.0.0";
           sha256 = "8394e6705ed83152875e1de1c51c54c26b04a2359919d8958d66997b2b60ad23";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/cased";
           description = "Track string casing in its type";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cases" = callPackage
        ({ mkDerivation, attoparsec, base-prelude, loch-th, stdenv, text }:
         mkDerivation {
           pname = "cases";
           version = "0.1.3.2";
           sha256 = "9ecf632f7751aac2ed7ec93407f9499237316f2eb50f331bb4969abf3359a8a9";
           libraryHaskellDepends = [ attoparsec base-prelude loch-th text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/cases";
           description = "A converter for spinal, snake and camel cases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "casing" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "casing";
           version = "0.1.4.1";
           sha256 = "106271c00246b551f2ef6a2e511437c9f0e1f3bb920a283f6f9eaa0940b4f8ca";
           revision = "1";
           editedCabalFile = "1n7w4w2icfppyvlmyzzmfivbx175ckqabs4my5qvvdvwlc89xrqb";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           description = "Convert between various source code casing conventions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cassava" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, containers
         , deepseq, hashable, Only, scientific, stdenv, text, text-short
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cassava";
           version = "0.5.2.0";
           sha256 = "b30d2ad5894519e364130c0510f167a4ffaf0e08a1e24c9a64238c855bfe0106";
           revision = "1";
           editedCabalFile = "1ph8rf91z4nf1ryrh9s4gd1kq98jlgk2manwddkpch8k0n9xvfk4";
           configureFlags = [ "-f-bytestring--lt-0_10_4" ];
           libraryHaskellDepends = [
             array attoparsec base bytestring containers deepseq hashable Only
             scientific text text-short transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cassava";
           description = "A CSV parsing and encoding library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cassava-conduit" = callPackage
        ({ mkDerivation, array, base, bifunctors, bytestring, cassava
         , conduit, containers, mtl, stdenv, text
         }:
         mkDerivation {
           pname = "cassava-conduit";
           version = "0.5.1";
           sha256 = "b55b72e9d52a40473f609c0c406db41bd92178a493f191295a7d8f23d89677f8";
           libraryHaskellDepends = [
             array base bifunctors bytestring cassava conduit containers mtl
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/domdere/cassava-conduit";
           description = "Conduit interface for cassava package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cassava-megaparsec" = callPackage
        ({ mkDerivation, base, bytestring, cassava, megaparsec, stdenv
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "cassava-megaparsec";
           version = "2.0.1";
           sha256 = "e38e7849da5bcf2b20aff6b85c447c0cdfc2007f1bf3fb2a8bc67f8b129f9a60";
           libraryHaskellDepends = [
             base bytestring cassava megaparsec unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/cassava-megaparsec";
           description = "Megaparsec parser of CSV files that plays nicely with Cassava";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cassava-records" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, cassava, foldl
         , stdenv, template-haskell, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cassava-records";
           version = "0.1.0.4";
           sha256 = "11f832c11125bd7a73b57941284d9aeb7f1e7572004da7e37311b34d3366af8d";
           libraryHaskellDepends = [
             attoparsec base bytestring cassava foldl template-haskell text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gdevanla/cassava-records#readme";
           description = "Auto-generation of records data type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cast" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cast";
           version = "0.1.0.2";
           sha256 = "24d545e5974436b6e3ee9dfda7ed68218c9f698103adae676a60860d90d7bc91";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-patterns/cast#readme";
           description = "Abstact cast pattern";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "caster" = callPackage
        ({ mkDerivation, base, bytestring, fast-builder, stdenv, stm, text
         , unix-time
         }:
         mkDerivation {
           pname = "caster";
           version = "0.0.3.0";
           sha256 = "72aadc554ca149b3b586eeab57c745be2ce540520d352f50f7c1b1b3a3feac72";
           libraryHaskellDepends = [
             base bytestring fast-builder stm text unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kirisaki/caster#readme";
           description = "Multicast, thread-safe, and fast logger";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "category" = callPackage
        ({ mkDerivation, alg, base, dual, stdenv, transformers }:
         mkDerivation {
           pname = "category";
           version = "0.2.5.0";
           sha256 = "870b624395000ccfadb2ec5b739e6dc7d54c03ab2beaaac8ee2bfcb0063eca47";
           libraryHaskellDepends = [ alg base dual transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Categorical types and classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cayley-client" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, binary, bytestring
         , exceptions, http-client, http-conduit, lens, lens-aeson, mtl
         , stdenv, text, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cayley-client";
           version = "0.4.9";
           sha256 = "ff9ce08f141477cb855ac1f91505f7ab400722ee74b6e420a3179288bb182016";
           libraryHaskellDepends = [
             aeson attoparsec base binary bytestring exceptions http-client
             http-conduit lens lens-aeson mtl text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/cayley-client";
           description = "A Haskell client for the Cayley graph database";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cborg" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , ghc-prim, half, integer-gmp, primitive, stdenv, text
         }:
         mkDerivation {
           pname = "cborg";
           version = "0.2.2.1";
           sha256 = "ba920d368892fe14e048cd6ac4270ce4ea1aea0fb6a4998c5c97fe106e6c6183";
           libraryHaskellDepends = [
             array base bytestring containers deepseq ghc-prim half integer-gmp
             primitive text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Concise Binary Object Representation (CBOR)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cborg-json" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, cborg, scientific
         , stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cborg-json";
           version = "0.2.2.0";
           sha256 = "ab68a2457cb71a76699d7a8df07a880ea70c51d2c1a891b12669ca9ccfa7517b";
           libraryHaskellDepends = [
             aeson aeson-pretty base cborg scientific text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/well-typed/cborg";
           description = "A library for encoding JSON as CBOR";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, ghc-prim
         , stdenv
         }:
         mkDerivation {
           pname = "cereal";
           version = "0.5.8.1";
           sha256 = "2d9e88ac934b9ebc058097c72011ff59f3f146176310e1c957a0e4cf63681bd7";
           libraryHaskellDepends = [
             array base bytestring containers ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GaloisInc/cereal";
           description = "A binary serialization library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-conduit" = callPackage
        ({ mkDerivation, base, bytestring, cereal, conduit, resourcet
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "cereal-conduit";
           version = "0.8.0";
           sha256 = "d95c4518a9984feacfd811c64be993705bff74c1f2daa00b4687bbb79f3a39eb";
           revision = "1";
           editedCabalFile = "1imyl3g2bni8bc6kajr857xh94fscphksj3286pxfpa8yp9vqqpc";
           libraryHaskellDepends = [
             base bytestring cereal conduit resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/conduit";
           description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-text" = callPackage
        ({ mkDerivation, base, cereal, stdenv, text }:
         mkDerivation {
           pname = "cereal-text";
           version = "0.1.0.2";
           sha256 = "3c7a15f4681fa53b66dcd5165f31f56ff9751a752ac5123ecc5bcf5c3ea0354c";
           libraryHaskellDepends = [ base cereal text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ulikoehler/cereal-text";
           description = "Data.Text instances for the cereal serialization library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "cereal-time" = callPackage
        ({ mkDerivation, base, cereal, stdenv, time }:
         mkDerivation {
           pname = "cereal-time";
           version = "0.1.0.0";
           sha256 = "bec6d5103ec45bee242825da4cf695f574f101bb1d48778bf7823175dfa43cb2";
           libraryHaskellDepends = [ base cereal time ];
           doHaddock = false;
           doCheck = false;
           description = "Serialize instances for types from `time` package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-vector" = callPackage
        ({ mkDerivation, base, bytestring, cereal, stdenv, vector }:
         mkDerivation {
           pname = "cereal-vector";
           version = "0.2.0.1";
           sha256 = "ff0685a6c39e7aae32f8b4165e2ae06f284c867298ad4f7b776c1c1b2859f933";
           libraryHaskellDepends = [ base bytestring cereal vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/cereal-vector";
           description = "Serialize instances for Data.Vector types.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cfenv" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "cfenv";
           version = "0.1.0.0";
           sha256 = "8ce96643559ebe4504c0641f9817d8795b22631f614084af50c88e51277e747e";
           libraryHaskellDepends = [ aeson base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tomphp/haskell-cfenv#readme";
           description = "A library getting the environment when running on Cloud Foundry";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cgi" = callPackage
        ({ mkDerivation, base, bytestring, containers, exceptions, mtl
         , multipart, network-uri, parsec, stdenv, time, xhtml
         }:
         mkDerivation {
           pname = "cgi";
           version = "3001.4.0.0";
           sha256 = "b308c57d78354c737b479af3c07d672022e72af9ee01ebc99d53e3597d8116b4";
           revision = "2";
           editedCabalFile = "1y0gh51qzdkmvla5r02vab8i9r90m4qqglb0iyy888yc4lw2v6jj";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers exceptions mtl multipart network-uri
             parsec time xhtml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cheecheeo/haskell-cgi";
           description = "A library for writing CGI programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chan" = callPackage
        ({ mkDerivation, async, base, stdenv, stm }:
         mkDerivation {
           pname = "chan";
           version = "0.0.4.1";
           sha256 = "926fcb205f6d43ed3a2b85b8e88a6c99a2deb097bc7988116c493a04a52547cf";
           libraryHaskellDepends = [ async base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/chan#readme";
           description = "Some extra kit for Chans";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "charset" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, semigroups
         , stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "charset";
           version = "0.3.7.1";
           sha256 = "3d415d2883bd7bf0cc9f038e8323f19c71e07dd12a3c712f449ccb8b4daac0be";
           revision = "1";
           editedCabalFile = "1z6nxw2g9vgsjq0g159sk8mwj68lwzxzi5iv5ynha0h85jcqxszy";
           libraryHaskellDepends = [
             array base bytestring containers semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/charset";
           description = "Fast unicode character sets based on complemented PATRICIA tries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "charsetdetect-ae" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "charsetdetect-ae";
           version = "1.1.0.4";
           sha256 = "9bbaa48d3026abdd403ed59ee5f41978b2f5be6d0dc545e142c86d5aa790410c";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/charsetdetect-ae";
           description = "Character set detection using Mozilla's Universal Character Set Detector";
           license = "LGPL";
         }) {};
      "chaselev-deque" = callPackage
        ({ mkDerivation, abstract-deque, array, atomic-primops, base
         , ghc-prim, stdenv, transformers, vector
         }:
         mkDerivation {
           pname = "chaselev-deque";
           version = "0.5.0.5";
           sha256 = "4d58f8d56228e9f5bea2a65717dea65106323cb5ead9b5f39f904dac5c0043f4";
           libraryHaskellDepends = [
             abstract-deque array atomic-primops base ghc-prim transformers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "Chase & Lev work-stealing lock-free double-ended queues (deques)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cheapskate" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers
         , data-default, deepseq, mtl, stdenv, syb, text, uniplate
         , xss-sanitize
         }:
         mkDerivation {
           pname = "cheapskate";
           version = "0.1.1.2";
           sha256 = "ed374897c39391fcf760552e6468def39fe36c3185708ca83056660ca3a2c69e";
           revision = "1";
           editedCabalFile = "15hdlp062gv8x7giwcfbj1kfmhpj1bg7y2w4wr2yl436haxkrbmq";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html containers data-default deepseq mtl syb text
             uniplate xss-sanitize
           ];
           executableHaskellDepends = [ base blaze-html bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/cheapskate";
           description = "Experimental markdown processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cheapskate-highlight" = callPackage
        ({ mkDerivation, base, blaze-html, cheapskate, highlighting-kate
         , stdenv, text
         }:
         mkDerivation {
           pname = "cheapskate-highlight";
           version = "0.1.0.0";
           sha256 = "5af7afb26b4ea80952963b44db695cbf18da34d3e8a7d32382a7dbfa4832d370";
           revision = "1";
           editedCabalFile = "1c8kxqdqf0j962xjdrrjfcbjsl0c1kax31rjykymv7w16d6hmlj4";
           libraryHaskellDepends = [
             base blaze-html cheapskate highlighting-kate text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cheapskate-highlight";
           description = "Code highlighting for cheapskate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cheapskate-lucid" = callPackage
        ({ mkDerivation, base, blaze-html, cheapskate, lucid, stdenv }:
         mkDerivation {
           pname = "cheapskate-lucid";
           version = "0.1.0.0";
           sha256 = "f582e512befd2707a7056c1d15541967de2e0ce5702bc2197a3fced58a777245";
           revision = "1";
           editedCabalFile = "197nx95xw21i7zyvgzcgnr36ab6vrk17c66iz8ndwz61vp1jf6hc";
           libraryHaskellDepends = [ base blaze-html cheapskate lucid ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cheapskate-lucid";
           description = "Use cheapskate with Lucid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "check-email" = callPackage
        ({ mkDerivation, base, bytestring, email-validate, resolv, stdenv
         }:
         mkDerivation {
           pname = "check-email";
           version = "1.0.2";
           sha256 = "1c2615fadba09a5d7aa5c68648d12218a595efb759842fb4f524cf380afa9327";
           libraryHaskellDepends = [ base bytestring email-validate ];
           librarySystemDepends = [ resolv ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qoelet/check-email#readme";
           description = "Confirm whether an email is valid and probably existant";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) resolv;};
      "checkers" = callPackage
        ({ mkDerivation, array, base, QuickCheck, random, semigroupoids
         , stdenv
         }:
         mkDerivation {
           pname = "checkers";
           version = "0.5.2";
           sha256 = "7886d049692925687f5373ab9abb9803fb0bcef53f65b7fa3483ed98a9f10ed7";
           libraryHaskellDepends = [
             array base QuickCheck random semigroupoids
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/checkers";
           description = "Check properties on standard classes and data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "checksum" = callPackage
        ({ mkDerivation, base, explicit-exception, stdenv, utility-ht }:
         mkDerivation {
           pname = "checksum";
           version = "0.0";
           sha256 = "337a0f6fcf7687469ecd410a3ed41c85ab68de08b5da0798d0d0aeb861a4470c";
           libraryHaskellDepends = [ base explicit-exception utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/checksum";
           description = "Compute and verify checksums of ISBN, IBAN, etc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chimera" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, vector }:
         mkDerivation {
           pname = "chimera";
           version = "0.2.0.0";
           sha256 = "f1939577fd0aabeda544de27b286f5a494c5bc76bf12da070b0c9f86aedf36c3";
           revision = "1";
           editedCabalFile = "029hpcs3x1sv3jsq10bygm4246b4gy83yxg3s4r98f37055dyzyd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ghc-prim vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/chimera#readme";
           description = "Lazy, infinite streams with O(1) indexing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chiphunk" = callPackage
        ({ mkDerivation, base, c2hs, hashable, safe-exceptions, StateVar
         , stdenv, vector-space
         }:
         mkDerivation {
           pname = "chiphunk";
           version = "0.1.2.1";
           sha256 = "7855a903402e3a27c918dde42a966eabbd3ff07227464c95b6b6af6990e8b20e";
           libraryHaskellDepends = [
             base hashable safe-exceptions StateVar vector-space
           ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/CthulhuDen/chiphunk#readme";
           description = "Haskell bindings for Chipmunk2D physics engine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "choice" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "choice";
           version = "0.2.2";
           sha256 = "d367e4321329df5913216f9746528e4526e14b5ad1f33edc82de8288ad719e61";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mboes/choice#readme";
           description = "A solution to boolean blindness";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "chronologique" = callPackage
        ({ mkDerivation, aeson, base, hourglass, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "chronologique";
           version = "0.3.1.1";
           sha256 = "c538bc2e7b1cb9c1f4ae4177a5545c08d3ff66c29c80ef8faddd92daaa499e16";
           libraryHaskellDepends = [ aeson base hourglass text time vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/afcowie/chronologique/";
           description = "Time to manipulate time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chronos" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, clock
         , hashable, primitive, semigroups, stdenv, text, torsor, vector
         }:
         mkDerivation {
           pname = "chronos";
           version = "1.0.9";
           sha256 = "1b275777ea6b480c94510e168e9a373a4d56d4128655e510d72c4c2cdbe57b80";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring clock hashable primitive
             semigroups text torsor vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/chronos";
           description = "A performant time library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chronos-bench" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, chronos
         , containers, deepseq, optparse-applicative, process, stdenv
         , terminal-size
         }:
         mkDerivation {
           pname = "chronos-bench";
           version = "0.2.0.2";
           sha256 = "1b1880b02973dad0bad3a6fa18d6f85f7e0b2fadc602de83dd91e4fbbe255bc0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base bytestring chronos containers deepseq
             optparse-applicative process terminal-size
           ];
           executableHaskellDepends = [ base optparse-applicative ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/knupfer/chronos";
           description = "Benchmarking tool with focus on comparing results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chunked-data" = callPackage
        ({ mkDerivation, base, bytestring, containers, semigroups, stdenv
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "chunked-data";
           version = "0.3.1";
           sha256 = "f710c581aee1f899e807fc9e6cba721b27d53dc9d56986f1922bc7ccddf1a79a";
           libraryHaskellDepends = [
             base bytestring containers semigroups text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Typeclasses for dealing with various chunked data representations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cipher-aes" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv
         }:
         mkDerivation {
           pname = "cipher-aes";
           version = "0.2.11";
           sha256 = "d3b171895698c73da24d7ce97543f725d26637f038de670c0fd4012ca7f95015";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-cipher-aes";
           description = "Fast AES cipher implementation with advanced mode of operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-aes128" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cereal, crypto-api
         , process, stdenv, tagged
         }:
         mkDerivation {
           pname = "cipher-aes128";
           version = "0.7.0.5";
           sha256 = "3cb4f4e893928e1daae862434e09f4978097d6be8a3fc35efb4ed6a454c94ead";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [
             base bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/cipher-aes128";
           description = "AES and common modes using AES-NI when available";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-blowfish" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv, vector
         }:
         mkDerivation {
           pname = "cipher-blowfish";
           version = "0.0.3";
           sha256 = "8f41170a851dba6d0b6f07298af3213baca09ab2a8aaf2adb733631feb3b6641";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Blowfish cipher";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-camellia" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv, vector
         }:
         mkDerivation {
           pname = "cipher-camellia";
           version = "0.0.2";
           sha256 = "8d0cd137cdb890646bb5d3bb52b20fa6d74e1b0c35d7d524d60edd9d43ace2a7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Camellia block cipher primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-des" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv
         }:
         mkDerivation {
           pname = "cipher-des";
           version = "0.0.6";
           sha256 = "85f1bccdec625a120ecf83b861afcb6478f8f899ceaa06fc083e642b54ff4ac7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "DES and 3DES primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-rc4" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , stdenv
         }:
         mkDerivation {
           pname = "cipher-rc4";
           version = "0.1.4";
           sha256 = "c67e731bc9e7f3882e33609c3d9ec97b4e9bbd2f95cd882926acfb621970384d";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cipher-rc4";
           description = "Fast RC4 cipher implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "circle-packing" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "circle-packing";
           version = "0.1.0.6";
           sha256 = "64ee44a90da3e5fe20d5b78bfe6eba93102a6b52c65f8a7b99af7799798ee81b";
           revision = "3";
           editedCabalFile = "0rcv84a6bp6dll8df4pfmjl03cm87hrlrf6mbig26ifp9ql4542m";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Simple heuristic for packing discs of varying radii in a circle";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cisco-spark-api" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bitset-word8, bytestring
         , conduit, data-default, http-conduit, network-uri
         , optparse-applicative, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "cisco-spark-api";
           version = "0.1.0.4";
           sha256 = "6f550e999cb3b3bf1d4d041363c0bead0eec02f078dc51301873cc450143a244";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bitset-word8 bytestring conduit data-default
             http-conduit network-uri text
           ];
           executableHaskellDepends = [
             aeson base bytestring conduit data-default http-conduit
             optparse-applicative text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/webex-teams-api#readme";
           description = "DEPRECATED in favor of webex-teams-api";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude" = callPackage
        ({ mkDerivation, async, base, basic-prelude, bifunctors, bytestring
         , chunked-data, containers, deepseq, dlist, ghc-prim, hashable
         , mono-traversable, mono-traversable-instances, mtl
         , mutable-containers, primitive, say, semigroups, stdenv, stm
         , stm-chans, text, time, transformers, unliftio
         , unordered-containers, vector, vector-instances
         }:
         mkDerivation {
           pname = "classy-prelude";
           version = "1.5.0";
           sha256 = "d3bae4b17fdf73d7255f550ad172b1f709a8743371aa3a40c13c2cdc9fa7a4da";
           libraryHaskellDepends = [
             async base basic-prelude bifunctors bytestring chunked-data
             containers deepseq dlist ghc-prim hashable mono-traversable
             mono-traversable-instances mtl mutable-containers primitive say
             semigroups stm stm-chans text time transformers unliftio
             unordered-containers vector vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "A typeclass-based Prelude";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude-conduit" = callPackage
        ({ mkDerivation, base, bytestring, classy-prelude, conduit
         , monad-control, resourcet, stdenv, transformers, void
         }:
         mkDerivation {
           pname = "classy-prelude-conduit";
           version = "1.5.0";
           sha256 = "da27783595cd6b94ea5cb93f3e81084a664e65ed4766757a5e7f81fb3df8fd00";
           libraryHaskellDepends = [
             base bytestring classy-prelude conduit monad-control resourcet
             transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "classy-prelude together with conduit functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude-yesod" = callPackage
        ({ mkDerivation, aeson, base, classy-prelude
         , classy-prelude-conduit, data-default, http-conduit, http-types
         , persistent, stdenv, yesod, yesod-newsfeed, yesod-static
         }:
         mkDerivation {
           pname = "classy-prelude-yesod";
           version = "1.5.0";
           sha256 = "9ffbc4447ec2df8131ca32c259da19f379109d6e44569a7ee16714ab67029f83";
           libraryHaskellDepends = [
             aeson base classy-prelude classy-prelude-conduit data-default
             http-conduit http-types persistent yesod yesod-newsfeed
             yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Provide a classy prelude including common Yesod functionality";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classyplate" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "classyplate";
           version = "0.3.2.0";
           sha256 = "712eefbe6b6fd92d6e5e7982d82a27e45b7992a83c2b09fc8696b1e30752527a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Fuseable type-class based generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clay" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "clay";
           version = "0.13.3";
           sha256 = "5db3c4c4a40f377b808a1569c5f8aeeea3ecdd2191f4fbbcd0f22b23fdd254a4";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://fvisser.nl/clay";
           description = "CSS preprocessor as embedded Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clientsession" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cereal
         , cipher-aes, cprng-aes, crypto-api, crypto-random, directory
         , entropy, setenv, skein, stdenv, tagged
         }:
         mkDerivation {
           pname = "clientsession";
           version = "0.9.1.2";
           sha256 = "5915adc4de26d2a8b03f1a445bac0b0f5d10a5b0380a4eed71b79a20a727d068";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base64-bytestring bytestring cereal cipher-aes cprng-aes
             crypto-api crypto-random directory entropy setenv skein tagged
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/clientsession/tree/master";
           description = "Securely store session data in a client-side cookie";
           license = stdenv.lib.licenses.mit;
         }) {};
      "clock" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "clock";
           version = "0.8";
           sha256 = "08a35c5294009040f1e5eb721a21b60df7af6584092bb3d376ab1b2e57e26914";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/corsis/clock";
           description = "High-resolution clock functions: monotonic, realtime, cputime";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clock-extras" = callPackage
        ({ mkDerivation, base, clock, stdenv }:
         mkDerivation {
           pname = "clock-extras";
           version = "0.1.0.2";
           sha256 = "a9ed097aa9d48b53c6a555bc5f67e347249b08e2252dd4fc998fb4ab42edda59";
           libraryHaskellDepends = [ base clock ];
           doHaddock = false;
           doCheck = false;
           description = "A couple functions that probably should be in the 'clock' package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "closed" = callPackage
        ({ mkDerivation, aeson, base, cassava, deepseq, hashable
         , persistent, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "closed";
           version = "0.2.0.1";
           sha256 = "564334f7c6d0fcc06daade2ddafc15210bcdf9717b875da7ba2a1fbb655be4b4";
           libraryHaskellDepends = [
             aeson base cassava deepseq hashable persistent QuickCheck text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frontrowed/closed#readme";
           description = "Integers bounded by a closed interval";
           license = stdenv.lib.licenses.mit;
         }) {};
      "clr-host" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, clr-marshal, directory
         , file-embed, filepath, glib, mono, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "clr-host";
           version = "0.2.1.0";
           sha256 = "fe2abf0386c96df6e51cbae4f45e074b54452fc01f9308b098198ade4ffc5ea4";
           setupHaskellDepends = [
             base Cabal directory filepath transformers
           ];
           libraryHaskellDepends = [
             base bytestring clr-marshal file-embed text
           ];
           librarySystemDepends = [ glib mono ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-host";
           description = "Hosting the Common Language Runtime";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) glib; inherit (pkgs) mono;};
      "clr-marshal" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "clr-marshal";
           version = "0.2.0.0";
           sha256 = "4113651f3d10de21813b2a44b78ca19f9ab62b6c6d9df0c25a88940fabebdcd6";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-marshal";
           description = "Marshaling for the clr";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clumpiness" = callPackage
        ({ mkDerivation, base, containers, stdenv, tree-fun }:
         mkDerivation {
           pname = "clumpiness";
           version = "0.17.0.2";
           sha256 = "eca2c21c6d3d9d3e6f26f7ca36db99680120c8f959fdbfef8c970aac131936c0";
           libraryHaskellDepends = [ base containers tree-fun ];
           doHaddock = false;
           doCheck = false;
           description = "Calculate the clumpiness of leaf properties in a tree";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "cmark" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "cmark";
           version = "0.6";
           sha256 = "0dec55cd4e02ac6ff557044a9aa2523479afc88370d3838430b3e386bef981dc";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/cmark-hs";
           description = "Fast, accurate CommonMark (Markdown) parser and renderer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cmark-gfm" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "cmark-gfm";
           version = "0.2.1";
           sha256 = "4330e20dcdf4ca2586585298093d2c514d4b59c208bb38283219a8f3726470e1";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kivikakk/cmark-gfm-hs";
           description = "Fast, accurate GitHub Flavored Markdown parser and renderer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cmdargs" = callPackage
        ({ mkDerivation, base, filepath, process, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "cmdargs";
           version = "0.10.20";
           sha256 = "0e269dc48c3d4c0447c96ffd772a6fe69dfa1260c323f4cd7bf171cbf2ab7331";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base filepath process template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/cmdargs#readme";
           description = "Command line argument processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "co-log" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, chronos
         , co-log-core, containers, contravariant, directory, filepath
         , markdown-unlit, mtl, stdenv, stm, text, transformers, typerep-map
         }:
         mkDerivation {
           pname = "co-log";
           version = "0.3.0.0";
           sha256 = "0a6a5bbdadff762aae73b59dd67fddf6a7934c73826cd0489214048d077b3d67";
           revision = "3";
           editedCabalFile = "0z2456b49k0qfd4fzvbwndvdvnwfvsmhyxd5gmbiz7l7b458dq3s";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base bytestring chronos co-log-core containers
             contravariant directory filepath mtl stm text transformers
             typerep-map
           ];
           executableHaskellDepends = [
             base co-log-core mtl text typerep-map
           ];
           executableToolDepends = [ markdown-unlit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/co-log";
           description = "Composable Contravariant Comonadic Logging Library";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "co-log-core" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "co-log-core";
           version = "0.2.1.0";
           sha256 = "e0c7cf12e9d9ca89b51892a0bdbe24bf4f20c43bb38bec0090b292061793cdc9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/co-log";
           description = "Composable Contravariant Comonadic Logging Library";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "code-page" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "code-page";
           version = "0.2";
           sha256 = "bfe32a8c4be9cf0d5a088267bf3fdf4adda8ba3f109e85675c93e70d575e1844";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/code-page";
           description = "Windows code page library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "codec" = callPackage
        ({ mkDerivation, aeson, base, binary, binary-bits, bytestring, mtl
         , profunctors, stdenv, template-haskell, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "codec";
           version = "0.2.1";
           sha256 = "ffc261b58108c3d90c0b0b68461857d1148208d1a9645916e63241aaa3c25b28";
           libraryHaskellDepends = [
             aeson base binary binary-bits bytestring mtl profunctors
             template-haskell text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chpatrick/codec";
           description = "Simple bidirectional serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "codec-beam" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text, zlib
         }:
         mkDerivation {
           pname = "codec-beam";
           version = "0.2.0";
           sha256 = "61eb624e5f347ec9249f976bc8b62ae597777604d82ab0e62acb9901374ae365";
           libraryHaskellDepends = [ base bytestring containers text zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hkgumbs/codec-beam#readme";
           description = "Erlang VM byte code assembler";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "codec-rpm" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-binary, base, bytestring
         , conduit, conduit-extra, cpio-conduit, exceptions, lzma-conduit
         , mtl, parsec, pretty, resourcet, stdenv, text
         }:
         mkDerivation {
           pname = "codec-rpm";
           version = "0.2.2";
           sha256 = "a34b88378dc79b08b56c39515763b6d940166595c24dc45e61cc8d2bb4ed4b97";
           libraryHaskellDepends = [
             attoparsec attoparsec-binary base bytestring conduit conduit-extra
             cpio-conduit exceptions lzma-conduit mtl parsec pretty resourcet
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/weldr/codec-rpm";
           description = "A library for manipulating RPM files";
           license = stdenv.lib.licenses.lgpl21;
         }) {};
      "codo-notation" = callPackage
        ({ mkDerivation, base, comonad, haskell-src-meta, parsec, stdenv
         , template-haskell, uniplate
         }:
         mkDerivation {
           pname = "codo-notation";
           version = "0.5.2";
           sha256 = "78eb57004541ed29eb4c54196b91ac2dd1028a3315f51cd4dc00debfc0938eaf";
           libraryHaskellDepends = [
             base comonad haskell-src-meta parsec template-haskell uniplate
           ];
           doHaddock = false;
           doCheck = false;
           description = "A notation for comonads, analogous to the do-notation for monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "coercible-utils" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "coercible-utils";
           version = "0.0.0";
           sha256 = "2a624986cdc010c7fc3e90f8c94f722995af9fe6e88b9d52a94ebaa319b08c98";
           revision = "1";
           editedCabalFile = "1xbnkv6fqf4mizqkha8b073p0r84l1rx1kzdsd6nh8b0adrp6i4d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sjakobi/coercible-utils";
           description = "Utility functions for Coercible types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "colonnade" = callPackage
        ({ mkDerivation, base, bytestring, contravariant, profunctors
         , semigroups, stdenv, text, vector
         }:
         mkDerivation {
           pname = "colonnade";
           version = "1.2.0.2";
           sha256 = "244f0feb381896d17b194c1c63fcfcd696d59a5be88e777609ca88fbc2e952ab";
           revision = "1";
           editedCabalFile = "1aq72ri6labv8vsf6s3h8mkry4kiig9659lgdmrqr8ngyp7jwp69";
           libraryHaskellDepends = [
             base bytestring contravariant profunctors semigroups text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/colonnade#readme";
           description = "Generic types and functions for columnar encoding and decoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "colorful-monoids" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "colorful-monoids";
           version = "0.2.1.2";
           sha256 = "0b42ff47e011f011f73e444d7121b7bc54324077cb2a1011ee01766483706578";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/colorful-monoids#readme";
           description = "Styled console text output using ANSI escape sequences";
           license = stdenv.lib.licenses.mit;
         }) {};
      "colorize-haskell" = callPackage
        ({ mkDerivation, ansi-terminal, base, haskell-lexer, stdenv }:
         mkDerivation {
           pname = "colorize-haskell";
           version = "1.0.1";
           sha256 = "03764374bd1aed5c63e20517441ccaae7c95cb2fa9e416da952f26be8dba9aec";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ ansi-terminal base haskell-lexer ];
           executableHaskellDepends = [ ansi-terminal base haskell-lexer ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yav/colorize-haskell";
           description = "Highligt Haskell source";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "colour" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "colour";
           version = "2.3.5";
           sha256 = "3b8d471979617dce7c193523743c9782df63433d8e87e3ef6d97922e0da104e7";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Colour";
           description = "A model for human colour/color perception";
           license = stdenv.lib.licenses.mit;
         }) {};
      "columnar" = callPackage
        ({ mkDerivation, base, bytestring, cassava, containers, enum-text
         , fmt, lens, possibly, rio, stdenv, template-haskell, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "columnar";
           version = "1.0.0.0";
           sha256 = "5b192ad8db18eaa486e02954994716bef57ca4921a13ceaf15827196da72c561";
           libraryHaskellDepends = [
             base bytestring cassava containers enum-text fmt lens possibly rio
             template-haskell text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/columnar#readme";
           description = "A CSV toolkit based on cassava and enum-text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "combinatorial" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "combinatorial";
           version = "0.1.0.1";
           sha256 = "c4d67854fecd353f5e7e6be009ffbd16cd6e9f6f41af16f072ae89778596db70";
           libraryHaskellDepends = [
             array base containers transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/combinatorial/";
           description = "Count, enumerate, rank and unrank combinatorial objects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comfort-array" = callPackage
        ({ mkDerivation, base, containers, deepseq, guarded-allocation
         , non-empty, prelude-compat, primitive, QuickCheck, semigroups
         , stdenv, storable-record, tagged, transformers, utility-ht
         }:
         mkDerivation {
           pname = "comfort-array";
           version = "0.4";
           sha256 = "35dcc0e36f684ed52a4aca08281db4fa28840106ed161b71e4e56daaf7d6734b";
           libraryHaskellDepends = [
             base containers deepseq guarded-allocation non-empty prelude-compat
             primitive QuickCheck semigroups storable-record tagged transformers
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/comfort-array/";
           description = "Arrays where the index type is a function of the shape type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comfort-graph" = callPackage
        ({ mkDerivation, base, containers, QuickCheck, semigroups, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "comfort-graph";
           version = "0.0.3.1";
           sha256 = "c926189971d0b416b4b078a1652de65a12a9fabd013d2373204bbe96fef8b562";
           libraryHaskellDepends = [
             base containers QuickCheck semigroups transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/comfort-graph";
           description = "Graph structure with type parameters for nodes and edges";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "commutative" = callPackage
        ({ mkDerivation, base, random, semigroups, stdenv, vector }:
         mkDerivation {
           pname = "commutative";
           version = "0.0.2";
           sha256 = "ccbc6a445bbc5c26a504a322664b2275e9834fdc17c80a2bdcef0dc517609969";
           libraryHaskellDepends = [ base random semigroups vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/commutative#readme";
           description = "Commutative binary operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comonad" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, containers
         , distributive, stdenv, tagged, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "comonad";
           version = "5.0.6";
           sha256 = "77cfb016acd1747b892c31b82daf0de93f508ba775d62562d376b354adb88fae";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base containers distributive tagged transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/comonad/";
           description = "Comonads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compact" = callPackage
        ({ mkDerivation, base, binary, bytestring, ghc-compact, stdenv }:
         mkDerivation {
           pname = "compact";
           version = "0.1.0.1";
           sha256 = "ee8533e16b94bbbf3519ccad26f3e569d60d33a5a9d2e3636e0764aff7b2d653";
           revision = "2";
           editedCabalFile = "1sy8szbmbhn13s54bq04ni234kk05najm3xm0sh6r9qnvg7pcjd7";
           libraryHaskellDepends = [ base binary bytestring ghc-compact ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ezyang/compact";
           description = "Non-GC'd, contiguous storage for immutable data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compactmap" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "compactmap";
           version = "0.1.4.2.1";
           sha256 = "22166e0a2a78bf2b7cff49448ed9fcb145dece4f034de9afc8ce5b692fd0f774";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           description = "A read-only memory-efficient key-value store";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compensated" = callPackage
        ({ mkDerivation, base, bifunctors, binary, bytes, Cabal
         , cabal-doctest, cereal, comonad, deepseq, distributive, hashable
         , lens, log-domain, safecopy, semigroupoids, semigroups, stdenv
         , vector
         }:
         mkDerivation {
           pname = "compensated";
           version = "0.7.3";
           sha256 = "af211a8217f42e27df5744de7852d89649ad666af22aee8df9ddfe3764923d21";
           revision = "1";
           editedCabalFile = "1ax4jq2hp5737yvi3lxvyj3c4bzkg10h4c7w3nw0hgfcn1ng49kc";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bifunctors binary bytes cereal comonad deepseq distributive
             hashable lens log-domain safecopy semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/compensated/";
           description = "Compensated floating-point arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compiler-warnings" = callPackage
        ({ mkDerivation, base, binary, parsec, stdenv, text }:
         mkDerivation {
           pname = "compiler-warnings";
           version = "0.1.0";
           sha256 = "8cf4c57e1b4d61b1163969faa6e9f2cb8f22073fa75bf982d9b8a328225f5ce3";
           libraryHaskellDepends = [ base binary parsec text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/compiler-warnings#readme";
           description = "Parser for common compiler warning formats";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "composable-associations" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "composable-associations";
           version = "0.1.0.0";
           sha256 = "9d1a10bc7ee1b514221bd8d0fc71f43f8d2338b1faebe6722f1d4db3bc29800e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/SamProtas/composable-associations#readme";
           description = "Types and helpers for composing types into a single larger key-value type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composable-associations-aeson" = callPackage
        ({ mkDerivation, aeson, base, composable-associations, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "composable-associations-aeson";
           version = "0.1.0.0";
           sha256 = "dbd754ed6d624469f16c4cd2ad51c441eeb8c62d6af66673f76034c7517c2a4f";
           libraryHaskellDepends = [
             aeson base composable-associations text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/SamProtas/composable-associations#readme";
           description = "Aeson ToJSON/FromJSON implementation for the types of composable-associations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composition" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "composition";
           version = "1.0.2.1";
           sha256 = "7123300f5eca5a7cec4eb731dc0e9c2c44aabe26b37e6579582a7267d9f7ad6a";
           doHaddock = false;
           doCheck = false;
           description = "Combinators for unorthodox function composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composition-extra" = callPackage
        ({ mkDerivation, base, composition, contravariant, stdenv }:
         mkDerivation {
           pname = "composition-extra";
           version = "2.0.0";
           sha256 = "c998244a8fd160af3dd7ee93c417f665af51a46a04ce6b7d4623f46596ba7129";
           libraryHaskellDepends = [ base composition contravariant ];
           doHaddock = false;
           doCheck = false;
           description = "Combinators for unorthodox structure composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concise" = callPackage
        ({ mkDerivation, base, bytestring, lens, stdenv, text }:
         mkDerivation {
           pname = "concise";
           version = "0.1.0.1";
           sha256 = "5c27df5a3e1fe820548e90abc4a0e326b6d0fb286218619aa22d3af90c7b9925";
           libraryHaskellDepends = [ base bytestring lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frasertweedale/hs-concise";
           description = "Utilities for Control.Lens.Cons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrency" = callPackage
        ({ mkDerivation, array, atomic-primops, base, exceptions
         , monad-control, mtl, stdenv, stm, transformers
         }:
         mkDerivation {
           pname = "concurrency";
           version = "1.7.0.0";
           sha256 = "06b88e915de3caaa0d0cbbbaf9dba2d8f03ab244f7d7987766a77ad10523ef9b";
           libraryHaskellDepends = [
             array atomic-primops base exceptions monad-control mtl stm
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Typeclasses, functions, and data types for concurrency and STM";
           license = stdenv.lib.licenses.mit;
         }) {};
      "concurrent-extra" = callPackage
        ({ mkDerivation, base, stdenv, stm, unbounded-delays }:
         mkDerivation {
           pname = "concurrent-extra";
           version = "0.7.0.12";
           sha256 = "040e6db9e0147de9929661759930f1566a7250add4c7f65b04dc6e070c991df9";
           libraryHaskellDepends = [ base stm unbounded-delays ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/concurrent-extra";
           description = "Extra concurrency primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrent-output" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, directory, exceptions
         , process, stdenv, stm, terminal-size, text, transformers, unix
         }:
         mkDerivation {
           pname = "concurrent-output";
           version = "1.10.11";
           sha256 = "e30a5f8164f6e172349c4f882455d4e28d6b007443f308562a9304541e562ab4";
           libraryHaskellDepends = [
             ansi-terminal async base directory exceptions process stm
             terminal-size text transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "Ungarble output from several threads or commands";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "concurrent-split" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "concurrent-split";
           version = "0.0.1.1";
           sha256 = "ae0028cfaf27da2c4d0e70783e8f45e82d33f402af1dfc6778c8ab81cf542f45";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "MVars and Channels with distinguished input and output side";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrent-supply" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "concurrent-supply";
           version = "0.1.8";
           sha256 = "ccf827dcd221298ae93fad6021c63a06707456de0671706b44f1f2fed867f21f";
           revision = "1";
           editedCabalFile = "1yzrr68k81w3jmrarx3y6z7ymzaaxwab509pp6kkd2fjia3g8wwk";
           libraryHaskellDepends = [ base ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/concurrent-supply/";
           description = "A fast concurrent unique identifier supply with a pure API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cond" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cond";
           version = "0.4.1.1";
           sha256 = "039c76e43b5484bdc78627f50740106ae2844b3c877d92b5228de9106997ac8b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kallisti-dev/cond";
           description = "Basic conditional and boolean operators with monadic variants";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit" = callPackage
        ({ mkDerivation, base, bytestring, directory, exceptions, filepath
         , mono-traversable, mtl, primitive, resourcet, stdenv, text
         , transformers, unix, unliftio-core, vector
         }:
         mkDerivation {
           pname = "conduit";
           version = "1.3.1.2";
           sha256 = "78e2cbe92cdadb89cb1dba486bb0834d23d5c09b0db43e3c307f1819f30e8289";
           libraryHaskellDepends = [
             base bytestring directory exceptions filepath mono-traversable mtl
             primitive resourcet text transformers unix unliftio-core vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Streaming data processing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-algorithms" = callPackage
        ({ mkDerivation, async, base, bytestring, bzlib-conduit, conduit
         , conduit-combinators, conduit-extra, conduit-zstd, containers
         , deepseq, exceptions, lzma-conduit, monad-control, mtl, pqueue
         , resourcet, stdenv, stm, stm-conduit, streaming-commons
         , transformers, unliftio-core, vector
         }:
         mkDerivation {
           pname = "conduit-algorithms";
           version = "0.0.11.0";
           sha256 = "31edb5d0a4a1bc03c31b0cafe27255ce4f30bd402798454faf71cf09c6e73230";
           libraryHaskellDepends = [
             async base bytestring bzlib-conduit conduit conduit-combinators
             conduit-extra conduit-zstd containers deepseq exceptions
             lzma-conduit monad-control mtl pqueue resourcet stm stm-conduit
             streaming-commons transformers unliftio-core vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/luispedro/conduit-algorithms#readme";
           description = "Conduit-based algorithms";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "conduit-combinators";
           version = "1.3.0";
           sha256 = "9717d916a0422a7fb7cc262302333269607530d40cd0bea3be947872f906e7d3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "DEPRECATED Functionality merged into the conduit package itself";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-concurrent-map" = callPackage
        ({ mkDerivation, base, conduit, containers, mtl, resourcet, stdenv
         , unliftio, unliftio-core, vector
         }:
         mkDerivation {
           pname = "conduit-concurrent-map";
           version = "0.1.1";
           sha256 = "527c429c39eaf5181e2aa8e5a6fcafd552149cc37b0b9d21003ff6507cd6c766";
           libraryHaskellDepends = [
             base conduit containers mtl resourcet unliftio unliftio-core vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/conduit-concurrent-map";
           description = "Concurrent, order-preserving mapping Conduit";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-extra" = callPackage
        ({ mkDerivation, async, attoparsec, base, bytestring, conduit
         , directory, filepath, network, primitive, process, resourcet
         , stdenv, stm, streaming-commons, text, transformers, typed-process
         , unliftio-core
         }:
         mkDerivation {
           pname = "conduit-extra";
           version = "1.3.4";
           sha256 = "b17381c259305eaa1752cbaedf2319757efc1b975633d73d5ab7c89d461b05b5";
           libraryHaskellDepends = [
             async attoparsec base bytestring conduit directory filepath network
             primitive process resourcet stm streaming-commons text transformers
             typed-process unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Batteries included conduit: adapters for common libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-iconv" = callPackage
        ({ mkDerivation, base, bytestring, conduit, stdenv }:
         mkDerivation {
           pname = "conduit-iconv";
           version = "0.1.1.3";
           sha256 = "1c71304782e4599a2987321028b50356c4982b45d9096d954e0b7c0b7ad3acb6";
           libraryHaskellDepends = [ base bytestring conduit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdroege/conduit-iconv";
           description = "Conduit for character encoding conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit-parse" = callPackage
        ({ mkDerivation, base, conduit, dlist, mtl, parsers, safe
         , safe-exceptions, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "conduit-parse";
           version = "0.2.1.0";
           sha256 = "b585dbdc0c1e3a844a9cd97cd1e72d7a73521b66b856001960afe4057130dae1";
           revision = "1";
           editedCabalFile = "1bgxjn9lbx67584xpwl2k9jrwvlgyqf4vkv0s7vs1nnc1h6qk7qw";
           libraryHaskellDepends = [
             base conduit dlist mtl parsers safe safe-exceptions text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/conduit-parse";
           description = "Parsing framework based on conduit";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "conduit-throttle" = callPackage
        ({ mkDerivation, async, base, conduit, conduit-combinators
         , conduit-extra, monad-control, resourcet, stdenv, stm, stm-chans
         , throttle-io-stream, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "conduit-throttle";
           version = "0.3.1.0";
           sha256 = "8dd6d616f5ddce25668bb34069bfdcdfe2a866c8d708b725a9b2e450a95aa329";
           libraryHaskellDepends = [
             async base conduit conduit-combinators conduit-extra monad-control
             resourcet stm stm-chans throttle-io-stream unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/conduit-throttle#readme";
           description = "Throttle Conduit Producers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit-zstd" = callPackage
        ({ mkDerivation, base, bytestring, conduit, stdenv, zstd }:
         mkDerivation {
           pname = "conduit-zstd";
           version = "0.0.1.1";
           sha256 = "8681f59d08399f92478329b0cdd555ae5a1b7d12ef8acee423fcc10192e00712";
           libraryHaskellDepends = [ base bytestring conduit zstd ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/luispedro/conduit-zstd#readme";
           description = "Conduit-based ZStd Compression";
           license = stdenv.lib.licenses.mit;
         }) {};
      "config-ini" = callPackage
        ({ mkDerivation, base, containers, megaparsec, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "config-ini";
           version = "0.2.4.0";
           sha256 = "6e5194e8acb7d189f0904852138990d03b64f86b9fde8f591ee1341d5627d535";
           revision = "1";
           editedCabalFile = "15ryq15851m9hzljamw5spr6hzr6picgf6s3xzkn7nviidcq78mz";
           libraryHaskellDepends = [
             base containers megaparsec text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aisamanra/config-ini";
           description = "A library for simple INI-based configuration files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "configuration-tools" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
         , base-unicode-symbols, base64-bytestring, bytestring, Cabal
         , case-insensitive, connection, data-default, deepseq, directory
         , dlist, enclosed-exceptions, filepath, http-client
         , http-client-tls, http-types, monad-control, mtl, network-uri
         , optparse-applicative, process, profunctors, semigroupoids
         , semigroups, stdenv, text, tls, transformers, unordered-containers
         , x509, x509-system, x509-validation, yaml
         }:
         mkDerivation {
           pname = "configuration-tools";
           version = "0.4.2";
           sha256 = "181c4ebff7954afafadcde0da9a885550638ae86600ca4d37d993685467b9f23";
           revision = "1";
           editedCabalFile = "1x30k0jbx62689rnjwg74v9mwcf81rpjvbkm0gj94slzsx66adpp";
           setupHaskellDepends = [
             base bytestring Cabal directory filepath process
           ];
           libraryHaskellDepends = [
             aeson ansi-wl-pprint attoparsec base base-unicode-symbols
             base64-bytestring bytestring Cabal case-insensitive connection
             data-default deepseq directory dlist enclosed-exceptions filepath
             http-client http-client-tls http-types monad-control mtl
             network-uri optparse-applicative process profunctors semigroupoids
             semigroups text tls transformers unordered-containers x509
             x509-system x509-validation yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alephcloud/hs-configuration-tools";
           description = "Tools for specifying and parsing configurations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "configurator" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, directory, hashable
         , stdenv, text, unix-compat, unordered-containers
         }:
         mkDerivation {
           pname = "configurator";
           version = "0.3.0.0";
           sha256 = "6eb9996b672e9f7112ca23482c42fa533553312c3c13f38a8a06476e67c031b4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring directory hashable text unix-compat
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/configurator";
           description = "Configuration management";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "configurator-export" = callPackage
        ({ mkDerivation, base, base-compat, configurator, pretty
         , semigroups, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "configurator-export";
           version = "0.1.0.1";
           sha256 = "9dbd62ef29c97792ccdfdb1b3b79aedfa527dce49a9ac5054f21b29a7f9b824c";
           libraryHaskellDepends = [
             base base-compat configurator pretty semigroups text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mstksg/configurator-export";
           description = "Pretty printer and exporter for configurations from the \"configurator\" library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "configurator-pg" = callPackage
        ({ mkDerivation, attoparsec, base, containers, protolude
         , scientific, stdenv, text
         }:
         mkDerivation {
           pname = "configurator-pg";
           version = "0.1.0.3";
           sha256 = "779887ac3b00751944ee6e2f12140bc4e6c1d84528bf0936728e2e65613c8739";
           libraryHaskellDepends = [
             attoparsec base containers protolude scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/robx/configurator-pg";
           description = "Reduced parser for configurator-ng config files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "connection" = callPackage
        ({ mkDerivation, base, basement, bytestring, containers
         , data-default-class, network, socks, stdenv, tls, x509, x509-store
         , x509-system, x509-validation
         }:
         mkDerivation {
           pname = "connection";
           version = "0.3.1";
           sha256 = "5d759589c532c34d87bfc4f6fcb732bf55b55a93559d3b94229e8347a15375d9";
           revision = "1";
           editedCabalFile = "08f1n38zryd0jklyv3yillilp040zxfxha6jphrmf28haq2irnk5";
           libraryHaskellDepends = [
             base basement bytestring containers data-default-class network
             socks tls x509 x509-store x509-system x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-connection";
           description = "Simple and easy network connections API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "connection-pool" = callPackage
        ({ mkDerivation, base, between, data-default-class, monad-control
         , network, resource-pool, stdenv, streaming-commons, time
         , transformers-base
         }:
         mkDerivation {
           pname = "connection-pool";
           version = "0.2.2";
           sha256 = "f2cf43b7698b719b05467b3625884d00c748de2b3eb1229d19490b029a667353";
           libraryHaskellDepends = [
             base between data-default-class monad-control network resource-pool
             streaming-commons time transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/trskop/connection-pool";
           description = "Connection pool built on top of resource-pool and streaming-commons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "console-style" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "console-style";
           version = "0.0.2.1";
           sha256 = "6d818ea841d7acfe6c42cc3fc7751e324656abfd0509ce470bc8bdbf52d1bd7f";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/console-style#readme";
           description = "Styled console text output using ANSI escape sequences";
           license = stdenv.lib.licenses.mit;
         }) {};
      "constraint" = callPackage
        ({ mkDerivation, base, category, stdenv, unconstrained }:
         mkDerivation {
           pname = "constraint";
           version = "0.1.4.0";
           sha256 = "2467002144d7fa5e107c04bd5c64088334879d71e98d20365029fb777f63b631";
           revision = "1";
           editedCabalFile = "0ivca43m1lqi75462z4hacvzs27whqzjnby7y7jjji8kqaw8wlda";
           libraryHaskellDepends = [ base category unconstrained ];
           doHaddock = false;
           doCheck = false;
           description = "Reified constraints";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "constraints" = callPackage
        ({ mkDerivation, base, binary, deepseq, ghc-prim, hashable, mtl
         , semigroups, stdenv, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "constraints";
           version = "0.10.1";
           sha256 = "5880ec261e053841b307c7c8c59614f46c2efbd5189f0f2a3c817589cedec3f7";
           revision = "1";
           editedCabalFile = "1i2rd805mjz5q7s98ryy1m91zd4b9hx92gw1rwr6kpibqqw9smcb";
           libraryHaskellDepends = [
             base binary deepseq ghc-prim hashable mtl semigroups transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/constraints/";
           description = "Constraint manipulation";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "contravariant" = callPackage
        ({ mkDerivation, base, StateVar, stdenv, transformers }:
         mkDerivation {
           pname = "contravariant";
           version = "1.5.2";
           sha256 = "c4262c24e3dcc2ba8ca221ed52a6390818a715301e4f13135d8d732e0c7dc60c";
           libraryHaskellDepends = [ base StateVar transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/contravariant/";
           description = "Contravariant functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "contravariant-extras" = callPackage
        ({ mkDerivation, base, base-prelude, contravariant, semigroups
         , stdenv, template-haskell, tuple-th
         }:
         mkDerivation {
           pname = "contravariant-extras";
           version = "0.3.5";
           sha256 = "d7d42b155977123499a8249d45ea5de6f9f3929b74b79b0ca730e511c58d1fa2";
           libraryHaskellDepends = [
             base base-prelude contravariant semigroups template-haskell
             tuple-th
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/contravariant-extras";
           description = "Extras for the \"contravariant\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "control-bool" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "control-bool";
           version = "0.2.1";
           sha256 = "e46a85d2985a65f8d7ecbcdab0cfb12734b4d6e4c558631e6ab01fe742ed5581";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/control-bool";
           description = "Useful combinators for boolean expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "control-dsl" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "control-dsl";
           version = "0.2.1.3";
           sha256 = "e8c795e256030194ef9beb8009ed49f1257790ad1b51d3f629c98f6ce5e56967";
           revision = "2";
           editedCabalFile = "18jypzsawq0mp12i35f58px80i3k07ri0g07wcrh6af93vqkhvil";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Atry/Control.Dsl#readme";
           description = "An alternative to monads in do-notation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "control-monad-free" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "control-monad-free";
           version = "0.6.2";
           sha256 = "63c830bd2af23e372ebfee628d9f538a32d8368cf74f897370d839bf8e7b4bc1";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pepeiborra/control-monad-free";
           description = "Free monads and monad transformers";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "control-monad-omega" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "control-monad-omega";
           version = "0.3.2";
           sha256 = "f62c1e4607481041b66a4c7afd1e4cb1fef72669c142fe73301c84bdfd17a9ff";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/control-monad-omega";
           description = "A breadth-first list monad";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "convertible" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, old-locale
         , old-time, stdenv, text, time
         }:
         mkDerivation {
           pname = "convertible";
           version = "1.1.1.0";
           sha256 = "e9f9a70904b9995314c2aeb41580d654a2c76293feb955fb6bd63256c355286c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers mtl old-locale old-time text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/convertible";
           description = "Typeclasses and instances for converting between types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cookie" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, deepseq
         , stdenv, text, time
         }:
         mkDerivation {
           pname = "cookie";
           version = "0.4.5";
           sha256 = "707f94d1b31018b91d6a1e9e19ef5413e20d02cab00ad93a5fd7d7b3b46a3583";
           libraryHaskellDepends = [
             base bytestring data-default-class deepseq text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/cookie";
           description = "HTTP cookie parsing and rendering";
           license = stdenv.lib.licenses.mit;
         }) {};
      "core-data" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, core-text
         , hashable, prettyprinter, prettyprinter-ansi-terminal, scientific
         , stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "core-data";
           version = "0.2.1.5";
           sha256 = "3630c886e8104cb780f6ea389edc21d3b8e15eb185cc7cf14895a79cfdba9b9e";
           libraryHaskellDepends = [
             aeson base bytestring containers core-text hashable prettyprinter
             prettyprinter-ansi-terminal scientific text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/oprdyn/unbeliever#readme";
           description = "Convenience wrappers around common data structures and encodings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "core-text" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, fingertree, hashable
         , prettyprinter, prettyprinter-ansi-terminal, stdenv
         , template-haskell, text, text-short
         }:
         mkDerivation {
           pname = "core-text";
           version = "0.2.3.3";
           sha256 = "4d502670f2a7478f65946264c43d41664890c86d9e3d49913a89f8efc8a0cb2e";
           libraryHaskellDepends = [
             base bytestring deepseq fingertree hashable prettyprinter
             prettyprinter-ansi-terminal template-haskell text text-short
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/oprdyn/unbeliever#readme";
           description = "A rope type based on a finger tree over UTF-8 fragments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "countable" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "countable";
           version = "1.0";
           sha256 = "f9a0eb6f697a044bdf72e9c08126d4cb0f2d6de82cce07e55cb87ddbae6a0e6c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AshleyYakeley/countable";
           description = "Countable, Searchable, Finite, Empty classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "country" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, deepseq
         , ghc-prim, hashable, primitive, scientific, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "country";
           version = "0.1.6";
           sha256 = "09b36e30dfb1fa5fa7a2c5c38f316a70e0c740b8a4dd6e340abe9770ad149928";
           revision = "3";
           editedCabalFile = "034cd94hiwgci0qhkdkkqmx2igmf1wxmd4b70g6sdlk1kklcn7x1";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring deepseq ghc-prim hashable
             primitive scientific text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/country#readme";
           description = "Country data type and functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "courier" = callPackage
        ({ mkDerivation, async, base, bytestring, cereal, containers
         , hslogger, network, stdenv, stm, text, uuid
         }:
         mkDerivation {
           pname = "courier";
           version = "0.1.1.5";
           sha256 = "ac9e674ff33de347b173da2892859b3807a408b341d10d6101d2a7d07ac334d3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring cereal containers hslogger network stm text
             uuid
           ];
           executableHaskellDepends = [ base cereal ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/hargettp/courier";
           description = "A message-passing library for simplifying network applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cpio-conduit" = callPackage
        ({ mkDerivation, base, base16-bytestring, binary, bytestring
         , conduit, conduit-extra, stdenv
         }:
         mkDerivation {
           pname = "cpio-conduit";
           version = "0.7.0";
           sha256 = "8f0be7538b234496ef3b2fb2633336908ae99040ecb6d9832b3dbd1d0750f513";
           libraryHaskellDepends = [
             base base16-bytestring binary bytestring conduit conduit-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/da-x/cpio-conduit";
           description = "Conduit-based CPIO";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "cpphs" = callPackage
        ({ mkDerivation, base, directory, old-locale, old-time, polyparse
         , stdenv
         }:
         mkDerivation {
           pname = "cpphs";
           version = "1.20.8";
           sha256 = "e56d64a7d8058e0fb63f0669397c1c861efb20a0376e0e74d86942ac151105ae";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory old-locale old-time polyparse
           ];
           executableHaskellDepends = [
             base directory old-locale old-time polyparse
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/cpphs/";
           description = "A liberalised re-implementation of cpp, the C pre-processor";
           license = "LGPL";
         }) {};
      "cprng-aes" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cipher-aes
         , crypto-random, stdenv
         }:
         mkDerivation {
           pname = "cprng-aes";
           version = "0.6.1";
           sha256 = "64592a01de8c6683c5e29f538dceee918887ffe211d87214a2e38559d72c21f3";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base byteable bytestring cipher-aes crypto-random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cprng-aes";
           description = "Crypto Pseudo Random Number Generator using AES in counter mode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cpu" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cpu";
           version = "0.1.2";
           sha256 = "5627feb4974a3ff8499c42cc958927e88761a2e004c4000d34e9cd6a15ad2974";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cpu";
           description = "Cpu information and properties helpers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cpuinfo" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, deepseq, stdenv }:
         mkDerivation {
           pname = "cpuinfo";
           version = "0.1.0.1";
           sha256 = "d1b3e3992cc0c82edfb21f30e1684bb66e6a3cb23a26b777a079702362d05655";
           libraryHaskellDepends = [ attoparsec base bytestring deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TravisWhitaker/cpuinfo";
           description = "Haskell Library for Checking CPU Information";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cql" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, Decimal
         , iproute, network, stdenv, template-haskell, text, time
         , transformers, uuid, vector
         }:
         mkDerivation {
           pname = "cql";
           version = "4.0.2";
           sha256 = "f42a3a385faadb10d61ca1622815f77c4218df289b305e3a539ebc0a9501c82c";
           libraryHaskellDepends = [
             base bytestring cereal containers Decimal iproute network
             template-haskell text time transformers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/cql/";
           description = "Cassandra CQL binary protocol";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "cql-io" = callPackage
        ({ mkDerivation, async, auto-update, base, bytestring, containers
         , cql, cryptonite, data-default-class, exceptions, hashable
         , HsOpenSSL, iproute, lens, mtl, mwc-random, network, retry
         , semigroups, stdenv, stm, text, time, transformers, unliftio-core
         , unordered-containers, uuid, vector
         }:
         mkDerivation {
           pname = "cql-io";
           version = "1.1.1";
           sha256 = "97fd0d2487d42f5256f5985cd5e5f2c56a52a90417ef32865a01e2e9624ae1fd";
           libraryHaskellDepends = [
             async auto-update base bytestring containers cql cryptonite
             data-default-class exceptions hashable HsOpenSSL iproute lens mtl
             mwc-random network retry semigroups stm text time transformers
             unliftio-core unordered-containers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/cql-io/";
           description = "Cassandra CQL client";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "crackNum" = callPackage
        ({ mkDerivation, array, base, FloatingHex, stdenv }:
         mkDerivation {
           pname = "crackNum";
           version = "2.3";
           sha256 = "428f25cfa0f7c4c126ee96fb9122966c2b175a194d59c200470a6f689ec038f3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ array base FloatingHex ];
           executableHaskellDepends = [ array base FloatingHex ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/LeventErkok/CrackNum";
           description = "Crack various integer, floating-point data formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crc32c" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, stdenv }:
         mkDerivation {
           pname = "crc32c";
           version = "0.0.0";
           sha256 = "0908682d921cc79249704d8b34fba918f399ad25321376b3a96b471a624500f8";
           libraryHaskellDepends = [ base bytestring ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leptonyu/crc32c#readme";
           description = "Haskell bindings for crc32c";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "credential-store" = callPackage
        ({ mkDerivation, base, bytestring, containers, cryptonite, dbus
         , memory, safe-exceptions, stdenv
         }:
         mkDerivation {
           pname = "credential-store";
           version = "0.1.2";
           sha256 = "4dadbc219a7187442258608c1d834f4297652fb605fc6bbbb41d751fef6a9284";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers cryptonite dbus memory safe-exceptions
           ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rblaze/credential-store#readme";
           description = "Library to access secure credential storage providers";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "criterion" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, base-compat-batteries
         , binary, binary-orphans, bytestring, cassava, code-page
         , containers, criterion-measurement, deepseq, directory, exceptions
         , filepath, Glob, js-flot, js-jquery, microstache, mtl, mwc-random
         , optparse-applicative, parsec, statistics, stdenv, text, time
         , transformers, transformers-compat, vector, vector-algorithms
         }:
         mkDerivation {
           pname = "criterion";
           version = "1.5.6.1";
           sha256 = "a5fb69c78ff33c2a7bc5dca1f56d19b2ce34bc68cc3d345de903039087185354";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base base-compat-batteries binary
             binary-orphans bytestring cassava code-page containers
             criterion-measurement deepseq directory exceptions filepath Glob
             js-flot js-jquery microstache mtl mwc-random optparse-applicative
             parsec statistics text time transformers transformers-compat vector
             vector-algorithms
           ];
           executableHaskellDepends = [
             base base-compat-batteries optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.serpentine.com/criterion";
           description = "Robust, reliable performance measurement and analysis";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "criterion-measurement" = callPackage
        ({ mkDerivation, aeson, base, base-compat, binary, containers
         , deepseq, stdenv, vector
         }:
         mkDerivation {
           pname = "criterion-measurement";
           version = "0.1.2.0";
           sha256 = "74a433da656c298608c514b962b915ec83915983197ae06c4b5d3a6b5d0de70e";
           libraryHaskellDepends = [
             aeson base base-compat binary containers deepseq vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/criterion";
           description = "Criterion measurement functionality and associated types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cron" = callPackage
        ({ mkDerivation, attoparsec, base, data-default-class, mtl
         , mtl-compat, old-locale, semigroups, stdenv, text, time
         }:
         mkDerivation {
           pname = "cron";
           version = "0.6.2";
           sha256 = "b0789bab33cd49a9a992f6cddf3975324af53301d0b465cd932fc4229bdde491";
           libraryHaskellDepends = [
             attoparsec base data-default-class mtl mtl-compat old-locale
             semigroups text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/michaelxavier/cron";
           description = "Cron datatypes and Attoparsec parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "crypt-sha512" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, cryptohash-sha512
         , stdenv
         }:
         mkDerivation {
           pname = "crypt-sha512";
           version = "0";
           sha256 = "c2be6252bf12f38c74950eb778039426c730e9a7cd7f034a4cc3e6965d5255f3";
           revision = "4";
           editedCabalFile = "0a4282bhh21l7vk79hpgcz7kj9n05r0ilgdksjkimkydg7sxgldb";
           libraryHaskellDepends = [
             attoparsec base bytestring cryptohash-sha512
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/crypt-sha512";
           description = "Pure Haskell implelementation for GNU SHA512 crypt algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-api" = callPackage
        ({ mkDerivation, base, bytestring, cereal, entropy, stdenv, tagged
         , transformers
         }:
         mkDerivation {
           pname = "crypto-api";
           version = "0.13.3";
           sha256 = "298a9ea7ce97c8ccf4bfe46d4864092c3a007a56bede73560070db3bf1ac7aa5";
           revision = "1";
           editedCabalFile = "1z6n1sa5pn3iqvqjrd8hv4bc2pxzsrhm5sh0l8z7g9lbqp6w0wp5";
           libraryHaskellDepends = [
             base bytestring cereal entropy tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/crypto-api";
           description = "A generic interface for cryptographic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-api-tests" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, directory
         , filepath, HUnit, QuickCheck, stdenv, test-framework
         , test-framework-hunit, test-framework-quickcheck2
         }:
         mkDerivation {
           pname = "crypto-api-tests";
           version = "0.3";
           sha256 = "f44aecdd4ceb9da9f38330e84d9c17745a82b0611085ebb34442d2dce4207270";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal crypto-api directory filepath HUnit
             QuickCheck test-framework test-framework-hunit
             test-framework-quickcheck2
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/crypto-api/wiki";
           description = "A test framework and KATs for cryptographic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-cipher-tests" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , HUnit, mtl, QuickCheck, securemem, stdenv, test-framework
         , test-framework-hunit, test-framework-quickcheck2
         }:
         mkDerivation {
           pname = "crypto-cipher-tests";
           version = "0.0.11";
           sha256 = "dfb670b73d4091b8683634d0d4d5a40576d573ad160650d5e518244ced8b98a7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
             securemem test-framework test-framework-hunit
             test-framework-quickcheck2
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Generic cryptography cipher tests";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-cipher-types" = callPackage
        ({ mkDerivation, base, byteable, bytestring, securemem, stdenv }:
         mkDerivation {
           pname = "crypto-cipher-types";
           version = "0.0.9";
           sha256 = "2073f6b70df7916aebe2da49d224497183662d56d19da87b76f70039430c0a0f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base byteable bytestring securemem ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Generic cryptography cipher types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-enigma" = callPackage
        ({ mkDerivation, ansi-terminal, base, containers
         , optparse-applicative, split, stdenv, text
         }:
         mkDerivation {
           pname = "crypto-enigma";
           version = "0.1.1.6";
           sha256 = "5fec48245fd75d91ed1ac953fb21834eff3dc0b13b5bd100155ce4f4f8cd1d1f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers split text ];
           executableHaskellDepends = [
             ansi-terminal base containers optparse-applicative split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/orome/crypto-enigma-hs";
           description = "An Enigma machine simulator with display";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-numbers" = callPackage
        ({ mkDerivation, base, bytestring, crypto-random, ghc-prim
         , integer-gmp, stdenv, vector
         }:
         mkDerivation {
           pname = "crypto-numbers";
           version = "0.2.7";
           sha256 = "420aeb17e9cdcfdf8c950c6c6f10c54503c5524d36f611aa7238e3fd65f189a6";
           revision = "1";
           editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
           libraryHaskellDepends = [
             base bytestring crypto-random ghc-prim integer-gmp vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-crypto-numbers";
           description = "Cryptographic numbers: functions and algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-pubkey" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-numbers
         , crypto-pubkey-types, crypto-random, cryptohash, stdenv
         }:
         mkDerivation {
           pname = "crypto-pubkey";
           version = "0.2.8";
           sha256 = "c0ccf2f5c38517de1f1626cb0a2542f35aefad8842f8ad5c1fac0b8c9de8b56e";
           libraryHaskellDepends = [
             base byteable bytestring crypto-numbers crypto-pubkey-types
             crypto-random cryptohash
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
           description = "Public Key cryptography";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-pubkey-openssh" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, attoparsec, base
         , base64-bytestring, bytestring, cereal, crypto-pubkey-types, pem
         , stdenv
         }:
         mkDerivation {
           pname = "crypto-pubkey-openssh";
           version = "0.2.7";
           sha256 = "849085c854c561b94974f2086bf1ad4004fb17be7168b75068ab0f2a330bab59";
           libraryHaskellDepends = [
             asn1-encoding asn1-types attoparsec base base64-bytestring
             bytestring cereal crypto-pubkey-types pem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/knsd/crypto-pubkey-openssh";
           description = "OpenSSH keys decoder/encoder";
           license = stdenv.lib.licenses.mit;
         }) {};
      "crypto-pubkey-types" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, stdenv }:
         mkDerivation {
           pname = "crypto-pubkey-types";
           version = "0.4.3";
           sha256 = "7ed9f52281ec4e34021a91818fe45288e33d65bff937f60334a3f45be5a71c60";
           libraryHaskellDepends = [ asn1-encoding asn1-types base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
           description = "Generic cryptography Public keys algorithm types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-random" = callPackage
        ({ mkDerivation, base, bytestring, securemem, stdenv, unix, vector
         }:
         mkDerivation {
           pname = "crypto-random";
           version = "0.0.9";
           sha256 = "170a7a18441379c2d1c19b502ee5919026a19adc6e78641cd4fb40b1d69a6904";
           revision = "1";
           editedCabalFile = "1ax1iafbbqkcrvjnnxlvqh2zgpx8xzcbxl6l870207bpzwrja2f1";
           libraryHaskellDepends = [ base bytestring securemem unix vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-random";
           description = "Simple cryptographic random related types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-random-api" = callPackage
        ({ mkDerivation, base, bytestring, entropy, stdenv }:
         mkDerivation {
           pname = "crypto-random-api";
           version = "0.2.0";
           sha256 = "56e9777061bd9ce553683d097ba3a11fdc371724060b62ca103f1f291f9f897c";
           libraryHaskellDepends = [ base bytestring entropy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-random-api";
           description = "Simple random generators API for cryptography related code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptocipher" = callPackage
        ({ mkDerivation, base, cipher-aes, cipher-blowfish, cipher-camellia
         , cipher-des, cipher-rc4, crypto-cipher-types, stdenv
         }:
         mkDerivation {
           pname = "cryptocipher";
           version = "0.6.2";
           sha256 = "34b9e62dee36c4019dd0c0e86576295d0bd1bb573eeb24686ec635a09550e346";
           libraryHaskellDepends = [
             base cipher-aes cipher-blowfish cipher-camellia cipher-des
             cipher-rc4 crypto-cipher-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Symmetrical block and stream ciphers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptocompare" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , exceptions, http-conduit, MissingH, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "cryptocompare";
           version = "0.1.1";
           sha256 = "d12e0f6fd133e538852e5700b0a31d81c6885dc8b1e9e88d1b331dcec38316b3";
           libraryHaskellDepends = [
             aeson base bytestring containers directory exceptions http-conduit
             MissingH text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aviaviavi/cryptocompare";
           description = "Haskell wrapper for the cryptocompare API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cryptohash" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cryptonite, ghc-prim
         , memory, stdenv
         }:
         mkDerivation {
           pname = "cryptohash";
           version = "0.11.9";
           sha256 = "c28f847fc1fcd65b6eea2e74a100300af940919f04bb21d391f6a773968f22fb";
           libraryHaskellDepends = [
             base byteable bytestring cryptonite ghc-prim memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cryptohash";
           description = "collection of crypto hashes, fast, pure and practical";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-cryptoapi" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, cryptonite
         , memory, stdenv, tagged
         }:
         mkDerivation {
           pname = "cryptohash-cryptoapi";
           version = "0.1.4";
           sha256 = "717a8664ebfaa1c31aaec1d78c9b7c776a5adcfdfc50ad88e21a34566f72058e";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal crypto-api cryptonite memory tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-cryptohash-cryptoapi";
           description = "Crypto-api interfaces for cryptohash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-md5" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-md5";
           version = "0.11.100.1";
           sha256 = "710bd48770fa3e9a3b05428c6dc77fb72c91956d334a1eb89ded11bb843e18f9";
           revision = "5";
           editedCabalFile = "1dxakry5p9dv9p9h617c0295plrfy2n5k13lsgp4gxwb6yzji9d4";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-md5";
           description = "Fast, pure and practical MD5 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-sha1" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-sha1";
           version = "0.11.100.1";
           sha256 = "3c79af33542512442f8f87f6abb1faef7cd43bbfb2859260a33251d861eb0dab";
           revision = "5";
           editedCabalFile = "1qay4qlvmwpllsqn1yd8gyraifx5ydl4chgg3dj4gzgmi36i9n0l";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-sha1";
           description = "Fast, pure and practical SHA-1 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-sha256" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-sha256";
           version = "0.11.101.0";
           sha256 = "52756435dbea248e344fbcbcc5df5307f60dfacf337dfd11ae30f1c7a4da05dd";
           revision = "4";
           editedCabalFile = "00p6sx2n1pzykm3my68hjfk8l66g66rh7inrfcnkd5mhilqdcqxr";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-sha256";
           description = "Fast, pure and practical SHA-256 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-sha512" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-sha512";
           version = "0.11.100.1";
           sha256 = "10698bb9575eaa414a65d9644caa9408f9276c63447406e0a4faef91db1071a9";
           revision = "4";
           editedCabalFile = "0iqs51a58w71j1zz3rn9kical63yvvqqqrc6971mh6wfscyi1gqr";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-sha512";
           description = "Fast, pure and practical SHA-512 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite" = callPackage
        ({ mkDerivation, base, basement, bytestring, deepseq, ghc-prim
         , integer-gmp, memory, stdenv
         }:
         mkDerivation {
           pname = "cryptonite";
           version = "0.25";
           sha256 = "89be1a18af8730a7bfe4d718d7d5f6ce858e9df93a411566d15bf992db5a3c8c";
           libraryHaskellDepends = [
             base basement bytestring deepseq ghc-prim integer-gmp memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite";
           description = "Cryptography Primitives sink";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , cryptonite, exceptions, memory, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "cryptonite-conduit";
           version = "0.2.2";
           sha256 = "705d69ab3f79b7b8810c7b9e7da81a1c6686b6a4323b1e78150576a25a658dae";
           revision = "1";
           editedCabalFile = "1hh2nzfz4qpxgivfilgk4ll416lph8b2fdkzpzrmqfjglivydfmz";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra cryptonite exceptions memory
             resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite-conduit";
           description = "cryptonite conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite-openssl" = callPackage
        ({ mkDerivation, base, basement, bytestring, cryptonite, memory
         , openssl, stdenv
         }:
         mkDerivation {
           pname = "cryptonite-openssl";
           version = "0.7";
           sha256 = "9e4e1c08264f26e602ef3054f3c827c3c65d153e5b9d68a0cb44f446ca0844f6";
           libraryHaskellDepends = [
             base basement bytestring cryptonite memory
           ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite-openssl";
           description = "Crypto stuff using OpenSSL cryptographic library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "csp" = callPackage
        ({ mkDerivation, base, containers, mtl, nondeterminism, stdenv }:
         mkDerivation {
           pname = "csp";
           version = "1.4.0";
           sha256 = "08877f5ff196772675ac55b3c43ab39b527259114da8cfc36122c0cd7ce93496";
           libraryHaskellDepends = [ base containers mtl nondeterminism ];
           doHaddock = false;
           doCheck = false;
           description = "Discrete constraint satisfaction problem (CSP) solver";
           license = "LGPL";
         }) {};
      "css-syntax" = callPackage
        ({ mkDerivation, base, scientific, stdenv, text }:
         mkDerivation {
           pname = "css-syntax";
           version = "0.1.0.0";
           sha256 = "50f386171dc691f2280a695eaafea64ba1ac1cc102fd702994b001f62d00c009";
           revision = "4";
           editedCabalFile = "0n3wf9yjpn29nl0f9jk3izp7d2iq00j6bp1y1v1k5vc1ycskhn5y";
           libraryHaskellDepends = [ base scientific text ];
           doHaddock = false;
           doCheck = false;
           description = "High-performance CSS tokenizer and serializer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "css-text" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "css-text";
           version = "0.1.3.0";
           sha256 = "5ff507bf3863219f41e7f2d215e5511fe15ee13d1e28bd3ee64e0b0b894bcd7a";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/css-text.git#readme";
           description = "CSS parser and renderer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "csv" = callPackage
        ({ mkDerivation, base, filepath, parsec, stdenv }:
         mkDerivation {
           pname = "csv";
           version = "0.1.2";
           sha256 = "8cf43442325faa1368f9b55ad952beccf677d9980cdffa3d70a7f204a23ae600";
           libraryHaskellDepends = [ base filepath parsec ];
           doHaddock = false;
           doCheck = false;
           description = "CSV loader and dumper";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ctrie" = callPackage
        ({ mkDerivation, atomic-primops, base, hashable, primitive, stdenv
         }:
         mkDerivation {
           pname = "ctrie";
           version = "0.2";
           sha256 = "20e3a6d39f65ed1663ff5ab2c5431dc12b1c601d2133a74bc7bea1596ad9c814";
           libraryHaskellDepends = [ atomic-primops base hashable primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mcschroeder/ctrie";
           description = "Non-blocking concurrent map";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cubicbezier" = callPackage
        ({ mkDerivation, base, containers, fast-math, integration, matrices
         , microlens, microlens-mtl, microlens-th, mtl, stdenv, vector
         , vector-space
         }:
         mkDerivation {
           pname = "cubicbezier";
           version = "0.6.0.6";
           sha256 = "5a73fcde2b92ce138d924c323f04f48427acbfdc2c774ff0f032a10ea60afa68";
           libraryHaskellDepends = [
             base containers fast-math integration matrices microlens
             microlens-mtl microlens-th mtl vector vector-space
           ];
           doHaddock = false;
           doCheck = false;
           description = "Efficient manipulating of 2D cubic bezier curves";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cubicspline" = callPackage
        ({ mkDerivation, base, hmatrix, safe, stdenv }:
         mkDerivation {
           pname = "cubicspline";
           version = "0.1.2";
           sha256 = "5b6ced9ca65b0d01ddceaf18605c8f915491d8d4a6aaef73475c4e8d4b1a9b79";
           libraryHaskellDepends = [ base hmatrix safe ];
           doHaddock = false;
           doCheck = false;
           description = "Natural cubic spline interpolation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cublas" = callPackage
        ({ mkDerivation, base, c2hs, Cabal, cuda, directory, filepath, half
         , stdenv, storable-complex, template-haskell
         }:
         mkDerivation {
           pname = "cublas";
           version = "0.5.0.0";
           sha256 = "2e3c94f63fc6f7df9cc517b5a444342654d4314266fc46aabfad8c456be68768";
           setupHaskellDepends = [ base Cabal cuda directory filepath ];
           libraryHaskellDepends = [
             base cuda half storable-complex template-haskell
           ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           description = "FFI bindings to the CUDA BLAS library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cuckoo-filter" = callPackage
        ({ mkDerivation, aeson, array, base, bytestring, cereal, containers
         , criterion, hashable, random, stdenv, time
         }:
         mkDerivation {
           pname = "cuckoo-filter";
           version = "0.2.0.2";
           sha256 = "ac495fb589ba939688e7c163ec07f7c591e183278c8ddb4148baf2174746cafb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson array base bytestring cereal containers hashable time
           ];
           executableHaskellDepends = [
             aeson array base bytestring cereal containers criterion hashable
             random time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisCoffey/cuckoo-filter#readme";
           description = "Pure and impure Cuckoo Filter";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cuda" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, Cabal, directory, filepath
         , pretty, stdenv, template-haskell, uuid-types
         }:
         mkDerivation {
           pname = "cuda";
           version = "0.10.1.0";
           sha256 = "7717b2c139ea454cda2d0b2adeb475c9a794c5be5f3f5532a98345510cf39e82";
           revision = "1";
           editedCabalFile = "0y08nr4p6rad1393l0373s4ivq2zvgm8xv0axh5bi6n95j2khkqz";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal directory filepath ];
           libraryHaskellDepends = [
             base bytestring filepath template-haskell uuid-types
           ];
           libraryToolDepends = [ c2hs ];
           executableHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcdonell/cuda";
           description = "FFI binding to the CUDA interface for programming NVIDIA GPUs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cue-sheet" = callPackage
        ({ mkDerivation, base, bytestring, containers, exceptions
         , megaparsec, mtl, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "cue-sheet";
           version = "2.0.1";
           sha256 = "71e42497329b9ebf74e94920ed2bd7a2ffe15e385906a37cbd5160d607a5575d";
           revision = "1";
           editedCabalFile = "0md9051a0jp4vkss15dyyf1w7ylpqmvzfdj9xb1rgj95s1x7cx2g";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers exceptions megaparsec mtl QuickCheck
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/cue-sheet";
           description = "Support for construction, rendering, and parsing of CUE sheets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cufft" = callPackage
        ({ mkDerivation, base, c2hs, Cabal, cuda, directory, filepath
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "cufft";
           version = "0.9.0.1";
           sha256 = "c312aafe408d466eb32b15d9b59b805008f631147f7e0ef4ba2b8548540cc1b1";
           setupHaskellDepends = [
             base Cabal cuda directory filepath template-haskell
           ];
           libraryHaskellDepends = [ base cuda ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/robeverest/cufft";
           description = "Haskell bindings for the CUFFT library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "curl" = callPackage
        ({ mkDerivation, base, bytestring, containers, curl, stdenv }:
         mkDerivation {
           pname = "curl";
           version = "1.3.8";
           sha256 = "9087c936bfcdb865bad3166baa3f12bf37acf076fa76010e3b5f82a1d485446e";
           revision = "1";
           editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
           configureFlags = [ "-fnew-base" ];
           libraryHaskellDepends = [ base bytestring containers ];
           librarySystemDepends = [ curl ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell binding to libcurl";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) curl;};
      "currencies" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "currencies";
           version = "0.2.0.0";
           sha256 = "fb7292d4a5b9c4389690d1386fe24ce6a93eacbcfa952936ca6d4fd3afa98499";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alx741/currencies#readme";
           description = "Currencies representation, pretty printing and conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "currency" = callPackage
        ({ mkDerivation, base, containers, hashable, iso3166-country-codes
         , stdenv
         }:
         mkDerivation {
           pname = "currency";
           version = "0.2.0.0";
           sha256 = "bcd517f3d9f47f0dd3c4e802143159239e4a90db2fc552be4a99d759ffe9417a";
           libraryHaskellDepends = [
             base containers hashable iso3166-country-codes
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/currency-haskell";
           description = "Types representing standard and non-standard currencies";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "cusparse" = callPackage
        ({ mkDerivation, base, c2hs, Cabal, cuda, directory, filepath, half
         , stdenv, storable-complex
         }:
         mkDerivation {
           pname = "cusparse";
           version = "0.2.0.0";
           sha256 = "06ee8332c9a4f540a9566d09d0903034e06b080281902beb987170d65cb7d8f8";
           setupHaskellDepends = [ base Cabal cuda directory filepath ];
           libraryHaskellDepends = [ base cuda half storable-complex ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           description = "FFI bindings to the CUDA Sparse BLAS library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cutter" = callPackage
        ({ mkDerivation, base, bytestring, explicit-exception, spreadsheet
         , stdenv, utility-ht
         }:
         mkDerivation {
           pname = "cutter";
           version = "0.0";
           sha256 = "117319c36a20efea6d9edd0a8d902e37ec0386512f2eb8a6e5563411c00c6ac2";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring explicit-exception spreadsheet utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           description = "Cut files according to a position list";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cyclotomic" = callPackage
        ({ mkDerivation, arithmoi, base, containers, stdenv }:
         mkDerivation {
           pname = "cyclotomic";
           version = "1.0.1";
           sha256 = "505219393023460ae03dc743c11f652f66351defe30a3365011221aadeb55234";
           libraryHaskellDepends = [ arithmoi base containers ];
           doHaddock = false;
           doCheck = false;
           description = "A subfield of the complex numbers for exact calculation";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "czipwith" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "czipwith";
           version = "1.0.1.2";
           sha256 = "41bf60844327cb9740c8f31a340ca561cdf4aabf335f26a16a875cf9e812ee9f";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/czipwith/";
           description = "CZipWith class and deriving via TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "data-accessor";
           version = "0.2.2.8";
           sha256 = "ac3f95162df227a16eabf6be65d1d6563e5207d581edf72b680bfcd59f7f04bb";
           libraryHaskellDepends = [ array base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Utilities for accessing and manipulating fields of records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor-mtl" = callPackage
        ({ mkDerivation, base, data-accessor, mtl, stdenv }:
         mkDerivation {
           pname = "data-accessor-mtl";
           version = "0.2.0.4";
           sha256 = "10cf9166e2e046076b7e58987718e57b31408e7cada9f26c8ff111e0379814c5";
           libraryHaskellDepends = [ base data-accessor mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Use Accessor to access state in mtl State monad class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor-template" = callPackage
        ({ mkDerivation, base, data-accessor, stdenv, template-haskell
         , utility-ht
         }:
         mkDerivation {
           pname = "data-accessor-template";
           version = "0.2.1.16";
           sha256 = "93e7f2120b8974d81a4acc56bd6a5b7121dac4672d974a42512c169c6937ed95";
           revision = "1";
           editedCabalFile = "0zz2v420zvinphs6jnngc40x7h8jn5rqj3nj8alpgfyqx59w41my";
           libraryHaskellDepends = [
             base data-accessor template-haskell utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Utilities for accessing and manipulating fields of records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor-transformers" = callPackage
        ({ mkDerivation, base, data-accessor, stdenv, transformers }:
         mkDerivation {
           pname = "data-accessor-transformers";
           version = "0.2.1.7";
           sha256 = "20c8823dc16c7ca6f55c64eb5564c9aae4b5565406987a046ded2ea73618e07a";
           libraryHaskellDepends = [ base data-accessor transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Use Accessor to access state in transformers State monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-binary-ieee754" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "data-binary-ieee754";
           version = "0.4.4";
           sha256 = "59975abed8f4caa602f0780c10a9b2493479e6feb71ad189bb10c3ac5678df0a";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/data-binary-ieee754/";
           description = "Parser/Serialiser for IEEE-754 floating-point values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "data-bword" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "data-bword";
           version = "0.1.0.1";
           sha256 = "70f01f857865edcf1d1d20128b0202320b1635cc03b00954b6d1447cd699db7d";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-bword";
           description = "Extra operations on binary words of fixed length";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-checked" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "data-checked";
           version = "0.3";
           sha256 = "dc87d09c7c8587c9e6e372166e8de3b42c2cd804a493ff100c253e4d713c5676";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-checked";
           description = "Type-indexed runtime-checked properties";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-clist" = callPackage
        ({ mkDerivation, base, deepseq, QuickCheck, stdenv }:
         mkDerivation {
           pname = "data-clist";
           version = "0.1.2.3";
           sha256 = "356910406b1615819fefd87ff50f425bc41bd935750cfaa567718fb8ab858ed7";
           revision = "1";
           editedCabalFile = "13hg7a3d4ky8b765dl03ryxg28lq8iaqj5ky3j51r0i1i4f2a9hy";
           libraryHaskellDepends = [ base deepseq QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sw17ch/data-clist";
           description = "Simple functional ring type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default" = callPackage
        ({ mkDerivation, base, data-default-class
         , data-default-instances-containers, data-default-instances-dlist
         , data-default-instances-old-locale, stdenv
         }:
         mkDerivation {
           pname = "data-default";
           version = "0.7.1.1";
           sha256 = "b0f95d279cd75cacaa8152a01590dc3460f7134f6840b37052abb3ba3cb2a511";
           libraryHaskellDepends = [
             base data-default-class data-default-instances-containers
             data-default-instances-dlist data-default-instances-old-locale
           ];
           doHaddock = false;
           doCheck = false;
           description = "A class for types with a default value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-class" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-default-class";
           version = "0.1.2.0";
           sha256 = "4f01b423f000c3e069aaf52a348564a6536797f31498bb85c3db4bd2d0973e56";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A class for types with a default value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-containers" = callPackage
        ({ mkDerivation, base, containers, data-default-class, stdenv }:
         mkDerivation {
           pname = "data-default-instances-containers";
           version = "0.0.1";
           sha256 = "a55e07af005c9815d82f3fc95e125db82994377c9f4a769428878701d4ec081a";
           libraryHaskellDepends = [ base containers data-default-class ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in containers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-dlist" = callPackage
        ({ mkDerivation, base, data-default-class, dlist, stdenv }:
         mkDerivation {
           pname = "data-default-instances-dlist";
           version = "0.0.1";
           sha256 = "7d683711cbf08abd7adcd5ac2be825381308d220397315a5570fe61b719b5959";
           libraryHaskellDepends = [ base data-default-class dlist ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in dlist";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-old-locale" = callPackage
        ({ mkDerivation, base, data-default-class, old-locale, stdenv }:
         mkDerivation {
           pname = "data-default-instances-old-locale";
           version = "0.0.1";
           sha256 = "60d3b02922958c4908d7bf2b24ddf61511665745f784227d206745784b0c0802";
           libraryHaskellDepends = [ base data-default-class old-locale ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in old-locale";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-diverse" = callPackage
        ({ mkDerivation, base, containers, deepseq, ghc-prim, stdenv
         , tagged
         }:
         mkDerivation {
           pname = "data-diverse";
           version = "4.6.0.0";
           sha256 = "094d44446b2429bad5707b4aef0f1f63a9d101739d9a244cb2131f7646eccbd4";
           libraryHaskellDepends = [
             base containers deepseq ghc-prim tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/data-diverse#readme";
           description = "Extensible records and polymorphic variants";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-diverse-lens" = callPackage
        ({ mkDerivation, base, data-diverse, data-has, lens, profunctors
         , stdenv, tagged
         }:
         mkDerivation {
           pname = "data-diverse-lens";
           version = "4.3.0.0";
           sha256 = "97d049769f0a3693428bac8eb8de73e004f6fc9a1d0e3dc0c567f9d39f8ed986";
           libraryHaskellDepends = [
             base data-diverse data-has lens profunctors tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/data-diverse-lens#readme";
           description = "Isos & Lens for Data.Diverse.Many and Prisms for Data.Diverse.Which";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-dword" = callPackage
        ({ mkDerivation, base, data-bword, ghc-prim, hashable, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "data-dword";
           version = "0.3.1.3";
           sha256 = "0b7545ea720a7a8001a22792eff2d254d434744e04bba624c5ddf4a857478fd0";
           revision = "1";
           editedCabalFile = "0gz9pqbi47f4dhn2c9v7y9nzgprbkbp9pd2vq5kpzj18hf53bvdm";
           libraryHaskellDepends = [
             base data-bword ghc-prim hashable template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-dword";
           description = "Stick two binary words together to get a bigger one";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-endian" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-endian";
           version = "0.1.1";
           sha256 = "8c1d4f30374f8331d31f4d7c6b39284331b6b9436e7b50f86547417bd05f2ac0";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-endian";
           description = "Endian-sensitive data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-fix" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-fix";
           version = "0.2.0";
           sha256 = "7e5718055cb27ccac1e0bf25be70ba9bfe2b0d021cfe0a57a163355830341392";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/anton-k/data-fix";
           description = "Fixpoint data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-has" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-has";
           version = "0.3.0.0";
           sha256 = "3c25d403605ecb196df53c8c8fb7829cd7b6a88e0ea04b88038602ba7faa7379";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/data-has";
           description = "Simple extensible product";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-inttrie" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-inttrie";
           version = "0.1.4";
           sha256 = "6b3a7d8d49b0676c09486ac08107b0e5a6dfd66d9627443be440e9fd11e7bd54";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/luqui/data-inttrie";
           description = "A simple lazy, infinite trie from integers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-lens-light" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell }:
         mkDerivation {
           pname = "data-lens-light";
           version = "0.1.2.2";
           sha256 = "72d3e6a73bde4a32eccd2024eb58ca96da962d4b659d76baed4ab37f28dcb36e";
           libraryHaskellDepends = [ base mtl template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/data-lens-light";
           description = "Simple lenses, minimum dependencies";
           license = stdenv.lib.licenses.mit;
         }) {};
      "data-memocombinators" = callPackage
        ({ mkDerivation, array, base, data-inttrie, stdenv }:
         mkDerivation {
           pname = "data-memocombinators";
           version = "0.5.1";
           sha256 = "b4341d2024b84a43f92edc39f6d6766bf4f0f00a40fd834b9f6f8e987b606ed7";
           libraryHaskellDepends = [ array base data-inttrie ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/data-memocombinators";
           description = "Combinators for building memo tables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-msgpack" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
         , data-msgpack-types, groom, stdenv, text
         }:
         mkDerivation {
           pname = "data-msgpack";
           version = "0.0.12";
           sha256 = "5c9f8b04fbc30368e0a085de2c33e08cb0601fc9e95f767c38435d5a0ce1f487";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring data-binary-ieee754 data-msgpack-types text
           ];
           executableHaskellDepends = [ base bytestring groom ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://msgpack.org/";
           description = "A Haskell implementation of MessagePack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-msgpack-types" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, hashable
         , QuickCheck, stdenv, text, unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "data-msgpack-types";
           version = "0.0.2";
           sha256 = "54fdda1fa485c9f86f1f0f2aa8cc71d111b2f36504b7fb9c0a2de95c0b1287a5";
           libraryHaskellDepends = [
             base bytestring containers deepseq hashable QuickCheck text
             unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://msgpack.org/";
           description = "A Haskell implementation of MessagePack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-or" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-or";
           version = "1.0.0.5";
           sha256 = "9defb64f1c7210460a940beb7f32ba1c79f363fbf3a5bd126feb876930c6e672";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "A data type for non-exclusive disjunction";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-ordlist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-ordlist";
           version = "0.4.7.0";
           sha256 = "6f6c1e7a9a9155ad78ca78cb9abd6f7e2e1c78b3e549b179dc0874e6428f490d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Set and bag operations on ordered lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-ref" = callPackage
        ({ mkDerivation, base, data-accessor, stdenv, stm, transformers }:
         mkDerivation {
           pname = "data-ref";
           version = "0.0.2";
           sha256 = "7b14399e9d8df50ed7ee3b10ea2ea4b7fdd8922896da000b171eac742ffb0f77";
           libraryHaskellDepends = [ base data-accessor stm transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Mutable_variable";
           description = "Unify STRef and IORef in plain Haskell 98";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-reify" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "data-reify";
           version = "0.6.1";
           sha256 = "61350a1e96cb1276c2b6b8b13fa1bade5d4e63c702509a3f5e90bbc19ad9b202";
           revision = "1";
           editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://ku-fpg.github.io/software/data-reify/";
           description = "Reify a recursive data structure into an explicit graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-serializer" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, data-endian
         , parsers, semigroups, split, stdenv
         }:
         mkDerivation {
           pname = "data-serializer";
           version = "0.3.4.1";
           sha256 = "d33e4c43079ca47871220d1f04def858f5f18a475cd26a14f3b5631ff6fca6d5";
           libraryHaskellDepends = [
             base binary bytestring cereal data-endian parsers semigroups split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-serializer";
           description = "Common API for serialization libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-textual" = callPackage
        ({ mkDerivation, base, bytestring, parsers, stdenv, text
         , text-latin1, text-printer
         }:
         mkDerivation {
           pname = "data-textual";
           version = "0.3.0.3";
           sha256 = "4b9ee8ccd03f24203dd9307bf9aa67180ff0f07b45c3a01e33d8185ff275ec9a";
           libraryHaskellDepends = [
             base bytestring parsers text text-latin1 text-printer
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-textual";
           description = "Human-friendly textual representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-tree-print" = callPackage
        ({ mkDerivation, base, pretty, stdenv, syb }:
         mkDerivation {
           pname = "data-tree-print";
           version = "0.1.0.2";
           sha256 = "c3ef24d803946a3caf0ff0e51f0c0b9f49055d7dc790518ad518d568d5195002";
           revision = "1";
           editedCabalFile = "1r6dnvc7d50q5p9fdqqwfvi7kwn7r89319plj7v284sjai9b6ld4";
           libraryHaskellDepends = [ base pretty syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/data-tree-print";
           description = "Print Data instances as a nested tree";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "datadog" = callPackage
        ({ mkDerivation, aeson, auto-update, base, buffer-builder
         , bytestring, containers, dlist, http-client, http-client-tls
         , http-types, lens, lifted-base, monad-control, network, old-locale
         , stdenv, text, time, transformers-base, unliftio
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "datadog";
           version = "0.2.4.0";
           sha256 = "c462b472ac18872fff6ffdd9cbb88195fe48c0f6873ac3590ccfec9c17df6a18";
           libraryHaskellDepends = [
             aeson auto-update base buffer-builder bytestring containers dlist
             http-client http-client-tls http-types lens lifted-base
             monad-control network old-locale text time transformers-base
             unliftio unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iand675/datadog";
           description = "Datadog client for Haskell. Supports both the HTTP API and StatsD.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "datasets" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, cassava
         , deepseq, directory, exceptions, file-embed, filepath, hashable
         , JuicyPixels, microlens, mtl, mwc-random, parallel, req
         , safe-exceptions, stdenv, streaming, streaming-attoparsec
         , streaming-bytestring, streaming-cassava, streaming-commons
         , stringsearch, tar, text, time, transformers, vector, zlib
         }:
         mkDerivation {
           pname = "datasets";
           version = "0.4.0";
           sha256 = "209a777cead05f14cea60debf08efd680553a20319606ca755a9e2031fa0d5c5";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring cassava deepseq directory
             exceptions file-embed filepath hashable JuicyPixels microlens mtl
             mwc-random parallel req safe-exceptions streaming
             streaming-attoparsec streaming-bytestring streaming-cassava
             streaming-commons stringsearch tar text time transformers vector
             zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DataHaskell/dh-core";
           description = "Classical data sets for statistics and machine learning";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dataurl" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "dataurl";
           version = "0.1.0.0";
           sha256 = "b1e72b48dbe72520f0b43b06ae75cb025e9750213982583f527e16b605660fb2";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/dataurl#readme";
           description = "Handle data-urls";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dbcleaner" = callPackage
        ({ mkDerivation, base, postgresql-simple, stdenv, text }:
         mkDerivation {
           pname = "dbcleaner";
           version = "0.1.3";
           sha256 = "0817b0e1698d8d48ac58d631f51dc6e34663f4e97af7bac3fd03e31349830f35";
           libraryHaskellDepends = [ base postgresql-simple text ];
           doHaddock = false;
           doCheck = false;
           description = "Clean database tables automatically around hspec tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dbus" = callPackage
        ({ mkDerivation, base, bytestring, cereal, conduit, containers
         , deepseq, exceptions, filepath, lens, network, parsec, random
         , split, stdenv, template-haskell, text, th-lift, transformers
         , unix, vector, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "dbus";
           version = "1.2.7";
           sha256 = "858ba04ff943757c3863cef97deed1f84cfa04ba634d24ee79c558973895f37a";
           libraryHaskellDepends = [
             base bytestring cereal conduit containers deepseq exceptions
             filepath lens network parsec random split template-haskell text
             th-lift transformers unix vector xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rblaze/haskell-dbus#readme";
           description = "A client library for the D-Bus IPC system";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "debian-build" = callPackage
        ({ mkDerivation, base, directory, filepath, process, split, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "debian-build";
           version = "0.10.2.0";
           sha256 = "5dd8af7f38780b51ad0dd13d2710f950b3d385b39b7a5b02fd5eeccd4ae61afb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory filepath process split transformers
           ];
           executableHaskellDepends = [ base filepath transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://twitter.com/khibino/";
           description = "Debian package build sequence tools";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "debug" = callPackage
        ({ mkDerivation, aeson, base, bytestring, clock, containers
         , deepseq, directory, extra, filepath, ghc-prim, hashable, Hoed
         , libgraph, open-browser, prettyprinter
         , prettyprinter-compat-ansi-wl-pprint, stdenv, template-haskell
         , text, uniplate, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "debug";
           version = "0.1.1";
           sha256 = "330f44c6341833c5e0cccf08fa7674dd54f14a843a2b5703e25ce08ffed49248";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring clock containers deepseq directory extra
             ghc-prim hashable Hoed libgraph open-browser prettyprinter
             prettyprinter-compat-ansi-wl-pprint template-haskell text uniplate
             unordered-containers vector
           ];
           executableHaskellDepends = [ aeson base directory filepath yaml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/debug";
           description = "Simple trace-based debugger";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "debug-trace-var" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, unicode-show }:
         mkDerivation {
           pname = "debug-trace-var";
           version = "0.2.0";
           sha256 = "174f79d31d905c99adc880dd79899b3f335e1a7c552a7bcff8664abbffb6b489";
           libraryHaskellDepends = [ base template-haskell unicode-show ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/debug-trace-var#readme";
           description = "You do not have to write variable names twice in Debug.Trace";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dec" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dec";
           version = "0.0.3";
           sha256 = "d9b8701244e77354ba7800f290c05f705994e2cc3a6c09b6c02d9c212add0bf9";
           revision = "2";
           editedCabalFile = "1v5f5yby0cld1ziqqgkcx8b50qkpviplspm82a6wl7lw28cjm0hs";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/vec";
           description = "Decidable propositions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "decidable" = callPackage
        ({ mkDerivation, base, singletons, stdenv }:
         mkDerivation {
           pname = "decidable";
           version = "0.1.5.0";
           sha256 = "72f139dd300898388ec41d0ba128c24358adb3d915c2788db8b192be76e54fe7";
           libraryHaskellDepends = [ base singletons ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/decidable#readme";
           description = "Combinators for manipulating dependently-typed predicates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "declarative" = callPackage
        ({ mkDerivation, base, hasty-hamiltonian, kan-extensions, lens
         , mcmc-types, mighty-metropolis, mwc-probability, pipes, primitive
         , speedy-slice, stdenv, transformers
         }:
         mkDerivation {
           pname = "declarative";
           version = "0.5.2";
           sha256 = "1ea8cf5eb0283ed9d9a7e1d46e5386960587c1671f7ce568d6eaf1d1b8ba9a04";
           libraryHaskellDepends = [
             base hasty-hamiltonian kan-extensions lens mcmc-types
             mighty-metropolis mwc-probability pipes primitive speedy-slice
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/declarative";
           description = "DIY Markov Chains";
           license = stdenv.lib.licenses.mit;
         }) {};
      "deepseq-generics" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, stdenv }:
         mkDerivation {
           pname = "deepseq-generics";
           version = "0.2.0.0";
           sha256 = "b0b3ef5546c0768ef9194519a90c629f8f2ba0348487e620bb89d512187c7c9d";
           revision = "5";
           editedCabalFile = "1iqgza1larap5n4f1z7d7ag1s3b0zzlvgb91lrwwa5khgw2m7mrg";
           libraryHaskellDepends = [ base deepseq ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/deepseq-generics";
           description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "deferred-folds" = callPackage
        ({ mkDerivation, base, bytestring, containers, foldl, hashable
         , primitive, stdenv, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "deferred-folds";
           version = "0.9.10.1";
           sha256 = "1bea510e31d1d5a8ba2068db468922df3ac0f13966aa3ae70bb1f2130f639c96";
           libraryHaskellDepends = [
             base bytestring containers foldl hashable primitive transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/metrix-ai/deferred-folds";
           description = "Abstractions over deferred folds";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dejafu" = callPackage
        ({ mkDerivation, base, concurrency, containers, contravariant
         , deepseq, exceptions, leancheck, profunctors, random, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "dejafu";
           version = "2.1.0.1";
           sha256 = "0fda620212d6d010661aa6133a166cf63aa7bf174e4d0ca236a4f13e892b3523";
           libraryHaskellDepends = [
             base concurrency containers contravariant deepseq exceptions
             leancheck profunctors random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "A library for unit-testing concurrent programs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dense-linear-algebra" = callPackage
        ({ mkDerivation, base, deepseq, math-functions, primitive, stdenv
         , vector, vector-algorithms, vector-binary-instances
         , vector-th-unbox
         }:
         mkDerivation {
           pname = "dense-linear-algebra";
           version = "0.1.0.0";
           sha256 = "f7777a7931b40332ebbc716f64abb63697cbab0128e5c1228d47760c5597f2d4";
           libraryHaskellDepends = [
             base deepseq math-functions primitive vector vector-algorithms
             vector-binary-instances vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple and incomplete pure haskell implementation of linear algebra";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "dependent-map" = callPackage
        ({ mkDerivation, base, containers, dependent-sum, stdenv }:
         mkDerivation {
           pname = "dependent-map";
           version = "0.2.4.0";
           sha256 = "5db396bdb5d156434af920c074316c3b84b4d39ba8e1cd349c7bb6679cb28246";
           revision = "1";
           editedCabalFile = "0a5f35d1sgfq1cl1r5bgb5pwfjniiycxiif4ycxglaizp8g5rlr1";
           libraryHaskellDepends = [ base containers dependent-sum ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/dependent-map";
           description = "Dependent finite maps (partial dependent products)";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "dependent-sum" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dependent-sum";
           version = "0.4";
           sha256 = "a8deecb4153a1878173f8d0a18de0378ab068bc15e5035b9e4cb478e8e4e1a1e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/dependent-sum";
           description = "Dependent sum type";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "dependent-sum-template" = callPackage
        ({ mkDerivation, base, dependent-sum, stdenv, template-haskell
         , th-extras
         }:
         mkDerivation {
           pname = "dependent-sum-template";
           version = "0.0.0.6";
           sha256 = "994cb4891949cad1b9ca268052377c58c174f77a469cae44742ac83727be91ad";
           libraryHaskellDepends = [
             base dependent-sum template-haskell th-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "/dev/null";
           description = "Template Haskell code to generate instances of classes in dependent-sum package";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "deque" = callPackage
        ({ mkDerivation, base, hashable, mtl, stdenv, strict-list }:
         mkDerivation {
           pname = "deque";
           version = "0.4.3";
           sha256 = "b76a0e7d8a5f3b12ca8cf5a583f3e8e4333c7860f56b1e921a3fdfe959e557a5";
           libraryHaskellDepends = [ base hashable mtl strict-list ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/deque";
           description = "Double-ended queues";
           license = stdenv.lib.licenses.mit;
         }) {};
      "deriveJsonNoPrefix" = callPackage
        ({ mkDerivation, aeson, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "deriveJsonNoPrefix";
           version = "0.1.0.1";
           sha256 = "1ae39ca61cdb6df1630a3b5e532a139767b0fc1b5fb5c1cd66603bc4020a93ff";
           libraryHaskellDepends = [ aeson base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/igrep/deriveJsonNoPrefix";
           description = "Derive ToJSON/FromJSON instances in a more prefix-friendly manner";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "deriving-compat" = callPackage
        ({ mkDerivation, base, containers, ghc-boot-th, ghc-prim, stdenv
         , template-haskell, th-abstraction, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "deriving-compat";
           version = "0.5.8";
           sha256 = "39ddf88affc68dbed3b6835c270d75bee44a667237c50fc62f2371c0afe7f6b7";
           libraryHaskellDepends = [
             base containers ghc-boot-th ghc-prim template-haskell
             th-abstraction transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/deriving-compat";
           description = "Backports of GHC deriving extensions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "derulo" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "derulo";
           version = "1.0.7";
           sha256 = "c5f76fc694754c9ced4e9d4c1a79f65f0602996a3f9b76d9d32a0160dfd7045e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/derulo#readme";
           description = "Parse and render JSON simply";
           license = stdenv.lib.licenses.mit;
         }) {};
      "detour-via-sci" = callPackage
        ({ mkDerivation, aeson, base, cassava, newtype, scientific
         , siggy-chardust, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "detour-via-sci";
           version = "1.0.0";
           sha256 = "451e1194f7bf6a7dea02379679c790313cc20423271fd8e98f164c942e3d81e4";
           revision = "1";
           editedCabalFile = "00dj8vf9gg9ww37sir6mblf3xhcpam8qgfz5bfana23arhf2cixj";
           libraryHaskellDepends = [
             aeson base cassava newtype scientific siggy-chardust
             template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blockscope/flare-timing/tree/master/detour-via-sci#readme";
           description = "JSON and CSV encoding for rationals as decimal point numbers";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "dhall" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, ansi-terminal, base
         , bytestring, case-insensitive, cborg, cborg-json, containers
         , contravariant, cryptonite, Diff, directory, dotgen, exceptions
         , filepath, haskeline, http-client, http-client-tls, http-types
         , lens-family-core, megaparsec, memory, mtl, optparse-applicative
         , parsers, prettyprinter, prettyprinter-ansi-terminal, profunctors
         , repline, scientific, serialise, stdenv, template-haskell, text
         , transformers, transformers-compat, unordered-containers
         , uri-encode, vector
         }:
         mkDerivation {
           pname = "dhall";
           version = "1.24.0";
           sha256 = "67ff6ff2bcd3c3fed0a598f8038f62a18676a419f7f7773a07804a5cc89404d8";
           revision = "2";
           editedCabalFile = "10ki70113z1kgq35xaib7qwrpzjl93hq4qxm0qb62d3pvaf4wp15";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty ansi-terminal base bytestring case-insensitive
             cborg cborg-json containers contravariant cryptonite Diff directory
             dotgen exceptions filepath haskeline http-client http-client-tls
             http-types lens-family-core megaparsec memory mtl
             optparse-applicative parsers prettyprinter
             prettyprinter-ansi-terminal profunctors repline scientific
             serialise template-haskell text transformers transformers-compat
             unordered-containers uri-encode vector
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A configuration language guaranteed to terminate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall-bash" = callPackage
        ({ mkDerivation, base, bytestring, containers, dhall
         , neat-interpolation, optparse-generic, shell-escape, stdenv, text
         }:
         mkDerivation {
           pname = "dhall-bash";
           version = "1.0.21";
           sha256 = "2801d68cba9682a493b7ff54e3773aa262c59db7e37174fcd7a6faa033073b1b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers dhall neat-interpolation shell-escape
             text
           ];
           executableHaskellDepends = [
             base bytestring dhall optparse-generic text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Compile Dhall to Bash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall-json" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, containers
         , dhall, exceptions, lens, libyaml, optparse-applicative
         , scientific, stdenv, text, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "dhall-json";
           version = "1.3.0";
           sha256 = "f1cab9ae9a93559cb66c38626a1a4c968d60f12795ac0a9755994e053518d19c";
           revision = "1";
           editedCabalFile = "101xfp3zg9i7qyibknjpcdhha8sc024xmylphiwb509h3fjy3yks";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring containers dhall exceptions lens
             libyaml optparse-applicative scientific text unordered-containers
             vector yaml
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring dhall exceptions
             optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Convert between Dhall and JSON or YAML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "di-core" = callPackage
        ({ mkDerivation, base, containers, safe-exceptions, stdenv, stm
         , time
         }:
         mkDerivation {
           pname = "di-core";
           version = "1.0.4";
           sha256 = "55634d9afebfa94f5573471ec846f23fbc3716ae524ebee58f27a7f99b153273";
           libraryHaskellDepends = [
             base containers safe-exceptions stm time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/di";
           description = "Typeful hierarchical structured logging without monad towers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "di-monad" = callPackage
        ({ mkDerivation, base, containers, di-core, exceptions, mtl, pipes
         , stdenv, stm, transformers
         }:
         mkDerivation {
           pname = "di-monad";
           version = "1.3.1";
           sha256 = "f5ddeae5a199f6e83abdc989a2df8408e761a798646eb7ca5944f7a3383416a4";
           libraryHaskellDepends = [
             base containers di-core exceptions mtl pipes stm transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/di";
           description = "mtl flavoured typeful hierarchical structured logging for di-core";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams" = callPackage
        ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
         , diagrams-svg, stdenv
         }:
         mkDerivation {
           pname = "diagrams";
           version = "1.4";
           sha256 = "8608f6fa682b8c43b9fbe7c42c033c7a6de0680bd7383f6a81ea8bca37999139";
           libraryHaskellDepends = [
             diagrams-contrib diagrams-core diagrams-lib diagrams-svg
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Embedded domain-specific language for declarative vector graphics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-contrib" = callPackage
        ({ mkDerivation, base, circle-packing, colour, containers
         , cubicbezier, data-default, data-default-class, diagrams-core
         , diagrams-lib, diagrams-solve, force-layout, hashable, lens
         , linear, mfsolve, MonadRandom, monoid-extras, mtl, mtl-compat
         , parsec, random, semigroups, split, stdenv, text
         }:
         mkDerivation {
           pname = "diagrams-contrib";
           version = "1.4.4";
           sha256 = "35b08328677b4d49e8b54c46e42c6f8e8a308ef698995d3f45e03c4c4fbe7210";
           revision = "1";
           editedCabalFile = "01m59vs4lagsyqcs3p4472i5b28n2jsr7naj30azrm8s197frbsl";
           libraryHaskellDepends = [
             base circle-packing colour containers cubicbezier data-default
             data-default-class diagrams-core diagrams-lib diagrams-solve
             force-layout hashable lens linear mfsolve MonadRandom monoid-extras
             mtl mtl-compat parsec random semigroups split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Collection of user contributions to diagrams EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-core" = callPackage
        ({ mkDerivation, adjunctions, base, containers, distributive
         , dual-tree, lens, linear, monoid-extras, mtl, profunctors
         , semigroups, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "diagrams-core";
           version = "1.4.2";
           sha256 = "83d0074c3338829f8d52d43d3837ae918ceba5c1ae573b6077e40de1f720eb61";
           revision = "1";
           editedCabalFile = "0w8mpy0z8kmx4l7cg8sgc1hyixysjfqffdgmnxy5p04airjlbpj7";
           libraryHaskellDepends = [
             adjunctions base containers distributive dual-tree lens linear
             monoid-extras mtl profunctors semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Core libraries for diagrams EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-lib" = callPackage
        ({ mkDerivation, active, adjunctions, array, base, bytestring
         , cereal, colour, containers, data-default-class, diagrams-core
         , diagrams-solve, directory, distributive, dual-tree, exceptions
         , filepath, fingertree, fsnotify, hashable, intervals, JuicyPixels
         , lens, linear, monoid-extras, mtl, optparse-applicative, process
         , profunctors, semigroups, stdenv, tagged, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "diagrams-lib";
           version = "1.4.3";
           sha256 = "c6fb8dd62f8baacadab2d17b3c36e3bb0b3ae7920eeeeeea46e78eeba567193f";
           revision = "1";
           editedCabalFile = "0cqhqm2nz2ls00pfhx8hz6z6g17qhl380h24wp4d6l5msiw7gxq4";
           libraryHaskellDepends = [
             active adjunctions array base bytestring cereal colour containers
             data-default-class diagrams-core diagrams-solve directory
             distributive dual-tree exceptions filepath fingertree fsnotify
             hashable intervals JuicyPixels lens linear monoid-extras mtl
             optparse-applicative process profunctors semigroups tagged text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://diagrams.github.io";
           description = "Embedded domain-specific language for declarative graphics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-postscript" = callPackage
        ({ mkDerivation, base, containers, data-default-class
         , diagrams-core, diagrams-lib, dlist, hashable, lens, monoid-extras
         , mtl, semigroups, split, statestack, stdenv
         }:
         mkDerivation {
           pname = "diagrams-postscript";
           version = "1.4.1";
           sha256 = "a758191d99c30bd663dc0df2dedef13cd735a33c143e77906aa88baceb282c9c";
           revision = "2";
           editedCabalFile = "0s6z3kaj1dm5kifaydnd2nx97g5qbc6jjqy3wn4dwa9rm7w49753";
           libraryHaskellDepends = [
             base containers data-default-class diagrams-core diagrams-lib dlist
             hashable lens monoid-extras mtl semigroups split statestack
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Postscript backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-rasterific" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default-class
         , diagrams-core, diagrams-lib, file-embed, filepath, FontyFruity
         , hashable, JuicyPixels, lens, mtl, optparse-applicative
         , Rasterific, stdenv
         }:
         mkDerivation {
           pname = "diagrams-rasterific";
           version = "1.4.2";
           sha256 = "54b887e60216216ee63d2b089e4afd807e0d49246d7bb7b2d3c3a6f286d73998";
           revision = "1";
           editedCabalFile = "0q2nzcdv7j654bk8c5fjz3whiz1l6cdy21n6ah53f1s7rlsbiz0g";
           libraryHaskellDepends = [
             base bytestring containers data-default-class diagrams-core
             diagrams-lib file-embed filepath FontyFruity hashable JuicyPixels
             lens mtl optparse-applicative Rasterific
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Rasterific backend for diagrams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-solve" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "diagrams-solve";
           version = "0.1.1";
           sha256 = "a41f5f410b10f162b1e5c07bd4ca3305544870ff1314ae4f5824c83a31644f9d";
           revision = "5";
           editedCabalFile = "1yl8cs05fzqcz49p601am1ij66m9pa70yamhfxgcvya2pf8nimlf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Pure Haskell solver routines used by diagrams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-svg" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, colour
         , containers, diagrams-core, diagrams-lib, filepath, hashable
         , JuicyPixels, lens, monoid-extras, mtl, optparse-applicative
         , semigroups, split, stdenv, svg-builder, text
         }:
         mkDerivation {
           pname = "diagrams-svg";
           version = "1.4.3";
           sha256 = "68bebe2fefc13d6af9efb305d55d99310bd93224bc4a4e68b3f959073e335bfb";
           revision = "1";
           editedCabalFile = "092kl3hnqlji71nxychw9v1sddxaim6ha00g1afi1ph2zm4f6s7c";
           libraryHaskellDepends = [
             base base64-bytestring bytestring colour containers diagrams-core
             diagrams-lib filepath hashable JuicyPixels lens monoid-extras mtl
             optparse-applicative semigroups split svg-builder text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "SVG backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dictionary-sharing" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "dictionary-sharing";
           version = "0.1.0.0";
           sha256 = "8c3b5184d5d6056433d51a49c5402e4ab7b0260073d5342685b8e141d2be5a01";
           revision = "3";
           editedCabalFile = "1mn7jcc7h3b8f1pn9zigqp6mc2n0qb66lms5qnrx4zswdv5w9439";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Sharing/memoization of class members";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "digest" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "digest";
           version = "0.0.1.2";
           sha256 = "641717eb16392abf8965986a9e8dc21eebf1d97775bbb6923c7b7f8fee17fe11";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "digits" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "digits";
           version = "0.3.1";
           sha256 = "a8499c9745dcf8a4e6c48594f555e6c6276e8d91c457dcc562a370ccadcd6a2c";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Converts integers to lists of digits and back";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dimensional" = callPackage
        ({ mkDerivation, base, deepseq, exact-pi, ieee754, numtype-dk
         , semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "dimensional";
           version = "1.3";
           sha256 = "29a32551cfc4819daefa19a3f345923ac2265b2a8c528ce467777032423d9344";
           revision = "2";
           editedCabalFile = "10xkgwjb9kqa95jck3b9wa3sz6vcb2lkygfmcqqz6hz6j65l79r8";
           libraryHaskellDepends = [
             base deepseq exact-pi ieee754 numtype-dk semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/dimensional/";
           description = "Statically checked physical dimensions, using Type Families and Data Kinds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "direct-sqlite" = callPackage
        ({ mkDerivation, base, bytestring, semigroups, stdenv, text }:
         mkDerivation {
           pname = "direct-sqlite";
           version = "2.3.24";
           sha256 = "41d23bee2c48407300bd3a118802131b5c73a263ada5f624e64d7da82be3a675";
           revision = "1";
           editedCabalFile = "0cfl7h43q2qib1qq8sipgcxcm3i9d6cp1diwmxv8n7ygx7awz6w6";
           libraryHaskellDepends = [ base bytestring semigroups text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/IreneKnapp/direct-sqlite";
           description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "directory-tree" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "directory-tree";
           version = "0.12.1";
           sha256 = "e2084495b3a226cf54d949635c86fc14e89daa09d86cce39e3c3cf898ae6e517";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://brandon.si/code/directory-tree-module-released/";
           description = "A simple directory-like tree datatype, with useful IO functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "discount" = callPackage
        ({ mkDerivation, base, bytestring, markdown, stdenv, text }:
         mkDerivation {
           pname = "discount";
           version = "0.1.1";
           sha256 = "e99cb7fdd1896dd1e525616597f936c1305a657cea1ef82cc0b3dcfe5afa34e0";
           libraryHaskellDepends = [ base bytestring text ];
           librarySystemDepends = [ markdown ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lightquake/discount";
           description = "Haskell bindings to the discount Markdown library";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) markdown;};
      "disk-free-space" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "disk-free-space";
           version = "0.1.0.1";
           sha256 = "f17a4f9c3b41083ccbb6c11b2debdbc705f86097b7459ff0f46cc01d2692381f";
           revision = "3";
           editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/disk-free-space";
           description = "Retrieve information about disk space usage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-closure" = callPackage
        ({ mkDerivation, async, base, binary, bytestring, constraints
         , stdenv, syb, template-haskell
         }:
         mkDerivation {
           pname = "distributed-closure";
           version = "0.4.2.0";
           sha256 = "16d0b35bea1aa1d43d4935d1569b3f3894febd66a5834129b8699437d6a85750";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring constraints syb template-haskell
           ];
           executableHaskellDepends = [ async base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tweag/distributed-closure";
           description = "Serializable closures for distributed programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distribution-nixpkgs" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, containers
         , deepseq, language-nix, lens, pretty, process, split, stdenv
         }:
         mkDerivation {
           pname = "distribution-nixpkgs";
           version = "1.2";
           sha256 = "848875b16812d1729fd2a5f7f8cc6aa7db0bb7c179a5f60a362304001cbd4304";
           libraryHaskellDepends = [
             aeson base bytestring Cabal containers deepseq language-nix lens
             pretty process split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/distribution-nixpkgs#readme";
           description = "Types and functions to manipulate the Nixpkgs distribution";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distribution-opensuse" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , deepseq, Diff, extra, foldl, hashable, hsemail, mtl, parsec-class
         , pretty, stdenv, text, time, turtle
         }:
         mkDerivation {
           pname = "distribution-opensuse";
           version = "1.1.1";
           sha256 = "067f08a458aed98e4a67e80ffc42edf99393a861a0d0ecb1950d913d15a332b7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base binary bytestring containers deepseq Diff extra foldl
             hashable hsemail mtl parsec-class pretty text time turtle
           ];
           executableHaskellDepends = [ base containers text turtle ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/distribution-opensuse/";
           description = "Types, functions, and tools to manipulate the openSUSE distribution";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributive" = callPackage
        ({ mkDerivation, base, base-orphans, Cabal, cabal-doctest, stdenv
         , tagged, transformers
         }:
         mkDerivation {
           pname = "distributive";
           version = "0.6.1";
           sha256 = "7749b1d9b815e3ba558d1daebac9346610e352bb0dfe9720cc686eb2fef7caf2";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base base-orphans tagged transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/distributive/";
           description = "Distributive functors -- Dual to Traversable";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dl-fedora" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath
         , http-directory, http-types, optparse-applicative, regex-posix
         , simple-cmd, simple-cmd-args, stdenv, text, unix, xdg-userdirs
         }:
         mkDerivation {
           pname = "dl-fedora";
           version = "0.5";
           sha256 = "aaab2bc1e5ebb3ce8bc22bf928ef672302a320fb00f338660c276086b470cdfd";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring directory filepath http-directory http-types
             optparse-applicative regex-posix simple-cmd simple-cmd-args text
             unix xdg-userdirs
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/dl-fedora";
           description = "Fedora image download tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "dlist" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "dlist";
           version = "0.8.0.7";
           sha256 = "a3c06a200f9756329b09d415e7733b7204dda76ce07783e6457d0ab9ffbcba2c";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/spl/dlist";
           description = "Difference lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dlist-instances" = callPackage
        ({ mkDerivation, base, dlist, semigroups, stdenv }:
         mkDerivation {
           pname = "dlist-instances";
           version = "0.1.1.1";
           sha256 = "d14a10c06f52fb412b2c1066d729f5534aa43204221e7ba7d81d935c44ce4f5b";
           libraryHaskellDepends = [ base dlist semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gregwebs/dlist-instances";
           description = "Difference lists instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dlist-nonempty" = callPackage
        ({ mkDerivation, base, base-compat, deepseq, dlist, semigroupoids
         , stdenv
         }:
         mkDerivation {
           pname = "dlist-nonempty";
           version = "0.1.1";
           sha256 = "40e8a64c979ca07b4f67a38878d1d13c1127fe2d1ad6b2b4daff0ee2dbd54b33";
           revision = "8";
           editedCabalFile = "134fcrv7lmbhzmgp07vp3fdjbbjrkkracvjf6ma5k2fwcw0wfkff";
           libraryHaskellDepends = [
             base base-compat deepseq dlist semigroupoids
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/dlist-nonempty";
           description = "Non-empty difference lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dns" = callPackage
        ({ mkDerivation, array, async, attoparsec, auto-update, base
         , base16-bytestring, base64-bytestring, bytestring, containers
         , cryptonite, hourglass, iproute, mtl, network, psqueues, stdenv
         }:
         mkDerivation {
           pname = "dns";
           version = "4.0.1";
           sha256 = "20cdb4519f19becd5ba321c5acfe03fd3c16b298a78404530b65f10ddb4a68cb";
           libraryHaskellDepends = [
             array async attoparsec auto-update base base16-bytestring
             base64-bytestring bytestring containers cryptonite hourglass
             iproute mtl network psqueues
           ];
           doHaddock = false;
           doCheck = false;
           testTarget = "spec";
           description = "DNS library in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "do-list" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "do-list";
           version = "1.0.1";
           sha256 = "b377193461b0ad7a81f9e66bcf10f8838b6f1e39f4a5de3b2e2f45c749c5b694";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tserduke/do-list#readme";
           description = "Do notation for free";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "do-notation" = callPackage
        ({ mkDerivation, base, indexed, stdenv }:
         mkDerivation {
           pname = "do-notation";
           version = "0.1.0.2";
           sha256 = "c9f3783d4b8ede05bf64a9dc7c594306b40fb05a68ae7f4c21dafec52fbc7bf5";
           libraryHaskellDepends = [ base indexed ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isovector/do-notation#readme";
           description = "Generalize do-notation to work on monads and indexed monads simultaneously";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dockerfile" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dockerfile";
           version = "0.2.0";
           sha256 = "97a1992559bf510a7b17e5678fd29e3b5c4a9059a0483e4ab36ef8ec723fb5aa";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/creichert/dockerfile#readme";
           description = "A Haskell DSL for generating Dockerfiles";
           license = stdenv.lib.licenses.mit;
         }) {};
      "docopt" = callPackage
        ({ mkDerivation, base, containers, parsec, stdenv, template-haskell
         , th-lift
         }:
         mkDerivation {
           pname = "docopt";
           version = "0.7.0.5";
           sha256 = "15790808a4896bbf0748c1c0f3ab63c07aea4621d95b93a39886813f829d05ee";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers parsec template-haskell th-lift
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/docopt/docopt.hs";
           description = "A command-line interface parser that will make you smile";
           license = stdenv.lib.licenses.mit;
         }) {};
      "doctemplates" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , containers, parsec, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "doctemplates";
           version = "0.2.2.1";
           sha256 = "6b0cfb565fc7fa90d71ac56b83aedecf670678e6f1441278877fbf399e9bccbf";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring containers parsec
             scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/doctemplates#readme";
           description = "Pandoc-style document templates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "doctest" = callPackage
        ({ mkDerivation, base, base-compat, code-page, deepseq, directory
         , filepath, ghc, ghc-paths, process, stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "doctest";
           version = "0.16.2";
           sha256 = "4fa5419bebf65094149f02bac9c67ffb81480d883ff0efac167d95f89d646452";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat code-page deepseq directory filepath ghc ghc-paths
             process syb transformers
           ];
           executableHaskellDepends = [
             base base-compat code-page deepseq directory filepath ghc ghc-paths
             process syb transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/doctest#readme";
           description = "Test interactive Haskell examples";
           license = stdenv.lib.licenses.mit;
         }) {};
      "doctest-discover" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, doctest
         , filepath, stdenv
         }:
         mkDerivation {
           pname = "doctest-discover";
           version = "0.2.0.0";
           sha256 = "a953aa50837e52efc766a77e382c2be2acbc887fa6dadbc54b756f59d6c49ec8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring directory doctest filepath
           ];
           executableHaskellDepends = [
             aeson base bytestring directory doctest filepath
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/karun012/doctest-discover";
           description = "Easy way to run doctests via cabal";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "doctest-driver-gen" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "doctest-driver-gen";
           version = "0.3.0.2";
           sha256 = "5840c26d699339188e75ee0807778d1f011ea075f37a2a1c975ea1daae4b78f6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Hexirp/doctest-driver-gen#readme";
           description = "Generate driver file for doctest's cabal integration";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "doldol" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "doldol";
           version = "0.4.1.2";
           sha256 = "6553dcb9fded77f0f0655264a4b071e503690a467b46921679556cef5da43e65";
           revision = "1";
           editedCabalFile = "0xwbdrfzd6z3nwkgnav2drisw2sn464ggkz8fid58cym9hbfpl47";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/QuietJoon/doldol/";
           description = "Flag packer & handler for flaggable data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dom-parser" = callPackage
        ({ mkDerivation, base, case-insensitive, containers, lens, mtl
         , scientific, semigroups, stdenv, text, transformers, xml-conduit
         , xml-lens
         }:
         mkDerivation {
           pname = "dom-parser";
           version = "3.1.0";
           sha256 = "d7e15cae0b27d708389160517b1616343da1911baf95f2c97e213732a0262ac3";
           libraryHaskellDepends = [
             base case-insensitive containers lens mtl scientific semigroups
             text transformers xml-conduit xml-lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeable/dom-parser";
           description = "Simple monadic DOM parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dotenv" = callPackage
        ({ mkDerivation, base, base-compat, containers, directory
         , exceptions, megaparsec, optparse-applicative, process, stdenv
         , text, transformers, yaml
         }:
         mkDerivation {
           pname = "dotenv";
           version = "0.8.0.4";
           sha256 = "444a40b7a27425d50ea11803fe42712437f86797a25fd6c29f7ff6fa4352b815";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base-compat containers directory exceptions megaparsec process
             text transformers yaml
           ];
           executableHaskellDepends = [
             base base-compat megaparsec optparse-applicative process text
             transformers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/dotenv-hs";
           description = "Loads environment variables from dotenv files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dotgen" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "dotgen";
           version = "0.4.2";
           sha256 = "cf0de20a435d74aeb9a32b8bcb3ebfa1b6659ac3f26edefe2df9e1aaf1481891";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/dotgen";
           description = "A simple interface for building .dot graph files.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dotnet-timespan" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dotnet-timespan";
           version = "0.0.1.0";
           sha256 = "d8ca8dffbc916ff5139d6f0df4a22c947ab5f996c376f1ab8c2e120789209ac3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/YoEight/dotnet-timespan";
           description = ".NET TimeSpan";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "double-conversion" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv, text }:
         mkDerivation {
           pname = "double-conversion";
           version = "2.0.2.0";
           sha256 = "44cde172395401169e844d6791b6eb0ef2c2e55a08de8dda96551cfe029ba26b";
           libraryHaskellDepends = [ base bytestring ghc-prim text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/double-conversion";
           description = "Fast conversion between double precision floating point and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "download" = callPackage
        ({ mkDerivation, base, bytestring, feed, stdenv, tagsoup, xml }:
         mkDerivation {
           pname = "download";
           version = "0.3.2.7";
           sha256 = "7154571d2c55c14b7a2d36a924ee10fd56511b70fe856dddbfbd15f04f0be6e1";
           libraryHaskellDepends = [ base bytestring feed tagsoup xml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/download";
           description = "High-level file download based on URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "drinkery" = callPackage
        ({ mkDerivation, base, exceptions, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "drinkery";
           version = "0.4";
           sha256 = "3860b076f71e05179c7adfc988baf90cf85d0206cfd6a0945e5b354827d8b5b0";
           libraryHaskellDepends = [ base exceptions mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/drinkery#readme";
           description = "Boozy streaming library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dsp" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv }:
         mkDerivation {
           pname = "dsp";
           version = "0.2.5";
           sha256 = "8532af3176819369ae0863170daa7c83de931fff7aff19d362e70ed701356ad2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ array base containers random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/DSP";
           description = "Haskell Digital Signal Processing";
           license = "GPL";
         }) {};
      "dual" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dual";
           version = "0.1.1.1";
           sha256 = "4504b29c4c758457cb6accc00ad4ef4a3f940125ade67301a3549091b9dfc765";
           revision = "1";
           editedCabalFile = "1cm80lc3p8bpzj0crxccx2fp33p171gz4j56r9fc5g5kza390nrb";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Dual category";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dual-tree" = callPackage
        ({ mkDerivation, base, monoid-extras, newtype-generics, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "dual-tree";
           version = "0.2.2.1";
           sha256 = "fdebb501680f50a9fc9fa27da5a484a7f5d07ca5b9bb18e72d1fb8069c756d9e";
           libraryHaskellDepends = [
             base monoid-extras newtype-generics semigroups
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rose trees with cached and accumulating monoidal annotations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dublincore-xml-conduit" = callPackage
        ({ mkDerivation, base, conduit, conduit-combinators
         , safe-exceptions, stdenv, text, time, timerep, uri-bytestring
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "dublincore-xml-conduit";
           version = "0.1.0.2";
           sha256 = "d47a8dcb21d1866f0229168d11d1da136da3028a2f4252bee61d219988f45f9e";
           revision = "1";
           editedCabalFile = "1rljgmi4jb6yhigfy394jb64q5f5qx7i1g68pw6zgq9ziz91p321";
           libraryHaskellDepends = [
             base conduit conduit-combinators safe-exceptions text time timerep
             uri-bytestring xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/dublincore-xml-conduit";
           description = "XML streaming parser/renderer for the Dublin Core standard elements";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "dunai" = callPackage
        ({ mkDerivation, base, MonadRandom, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "dunai";
           version = "0.5.1";
           sha256 = "27a5ba03273afe4e5d3e947fb65e2d70e2f82cb929316b0c3175d1f2cf95731d";
           libraryHaskellDepends = [
             base MonadRandom transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ivanperez-keera/dunai";
           description = "Generalised reactive framework supporting classic, arrowized and monadic FRP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dunai-core" = callPackage
        ({ mkDerivation, base, MonadRandom, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "dunai-core";
           version = "0.5.1.0";
           sha256 = "ffaf15694944fe046ba2dd385be2edad7a7bd2b9d766804770af85636a3001dd";
           libraryHaskellDepends = [
             base MonadRandom transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/turion/dunai-core";
           description = "Generalised reactive framework supporting classic, arrowized and monadic FRP. (Core library fork.)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "duration" = callPackage
        ({ mkDerivation, base, parsec, stdenv, template-haskell, time }:
         mkDerivation {
           pname = "duration";
           version = "0.1.0.0";
           sha256 = "a0b154c270be1d9c42a92fdf8198ab1030bf09a119157df33a2a43694fb212a3";
           libraryHaskellDepends = [ base parsec template-haskell time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ryota-ka/duration#readme";
           description = "A tiny compile-time time utility library inspired by zeit/ms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dvorak" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "dvorak";
           version = "0.1.0.0";
           sha256 = "afc8ba89415a01039ccdc719b875826b6b12befb4a6a97bcd7544f22eaffb6cf";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kvanberendonck/codec-dvorak";
           description = "Dvorak encoding for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dynamic-state" = callPackage
        ({ mkDerivation, base, binary, bytestring, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "dynamic-state";
           version = "0.3.1";
           sha256 = "c4d50bdf03e7b2af05ee2b78fdd5dd5d16e72ef5edf78cada60bf4cdc6a23537";
           libraryHaskellDepends = [
             base binary bytestring hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Optionally serializable dynamic state keyed by type";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "dyre" = callPackage
        ({ mkDerivation, base, binary, directory, executable-path, filepath
         , ghc-paths, io-storage, process, stdenv, time, unix, xdg-basedir
         }:
         mkDerivation {
           pname = "dyre";
           version = "0.8.12";
           sha256 = "e224305cc6b38b4143f49489931c2ea94b326915206d34eddf5b2ee2b5a71682";
           libraryHaskellDepends = [
             base binary directory executable-path filepath ghc-paths io-storage
             process time unix xdg-basedir
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/dyre";
           description = "Dynamic reconfiguration in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eap" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptonite, memory, mtl
         , pretty-hex, stdenv
         }:
         mkDerivation {
           pname = "eap";
           version = "0.9.0.2";
           sha256 = "0ccf6246c1e28d43aea25d1e2e0ca22edcc3bfb21fcf7924410dee7abb3efd2d";
           revision = "1";
           editedCabalFile = "1lsy7pl39s02f45l7g9alw49xwh7m8m4bm3ydcz11rh9xdgcb9jv";
           libraryHaskellDepends = [
             base binary bytestring cryptonite memory mtl pretty-hex
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/codemonkeylabs/eap#readme";
           description = "Extensible Authentication Protocol (EAP)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "easy-file" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, time, unix }:
         mkDerivation {
           pname = "easy-file";
           version = "0.2.2";
           sha256 = "52f52e72ba48d60935932401c233a72bf45c582871238aecc5a18021ce67b47e";
           libraryHaskellDepends = [ base directory filepath time unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/kazu-yamamoto/easy-file";
           description = "Cross-platform File handling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "easytest" = callPackage
        ({ mkDerivation, async, base, call-stack, containers, mtl, random
         , stdenv, stm, text, transformers
         }:
         mkDerivation {
           pname = "easytest";
           version = "0.2.1";
           sha256 = "1155c3da78460eae48762e041c033d0f64f7644fa94479be2fa1194e3f57be3d";
           libraryHaskellDepends = [
             async base call-stack containers mtl random stm text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joelburget/easytest";
           description = "Simple, expressive testing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "echo" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "echo";
           version = "0.1.3";
           sha256 = "704f07310f8272d170f8ab7fb2a2c13f15d8501ef8310801e36964c8eff485ef";
           revision = "1";
           editedCabalFile = "0br8wfiybcw5hand4imiw0i5hacdmrax1dv8g95f35gazffbx42l";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/echo";
           description = "A cross-platform, cross-console way to handle echoing terminal input";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ecstasy" = callPackage
        ({ mkDerivation, base, containers, kan-extensions, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "ecstasy";
           version = "0.2.1.0";
           sha256 = "915942d3b8c3d61b98e5b2e825387d48cf3c2d17acdb2d377cb516c26c0fcbc3";
           libraryHaskellDepends = [
             base containers kan-extensions mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/isovector/ecstasy/";
           description = "A GHC.Generics based entity component system.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ed25519" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "ed25519";
           version = "0.0.5.0";
           sha256 = "d8a5958ebfa9309790efade64275dc5c441b568645c45ceed1b0c6ff36d6156d";
           revision = "2";
           editedCabalFile = "1cq6h3jqkb1kvd9fjfhsllg5gq78sdiyf2gy9862xhlbv6wil19f";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://thoughtpolice.github.com/hs-ed25519";
           description = "Ed25519 cryptographic signatures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "edit-distance" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv }:
         mkDerivation {
           pname = "edit-distance";
           version = "0.2.2.1";
           sha256 = "3e8885ee2f56ad4da940f043ae8f981ee2fe336b5e8e4ba3f7436cff4f526c4a";
           revision = "1";
           editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
           libraryHaskellDepends = [ array base containers random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phadej/edit-distance";
           description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "edit-distance-vector" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "edit-distance-vector";
           version = "1.0.0.4";
           sha256 = "b7dfddd86d315ef1b0c86415f321efc04b4a1b47a7b13edafc73a6e81b620f1f";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thsutton/edit-distance-vector";
           description = "Calculate edit distances and edit scripts between vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "editor-open" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , directory, process, resourcet, stdenv, temporary, transformers
         , unix
         }:
         mkDerivation {
           pname = "editor-open";
           version = "0.6.0.0";
           sha256 = "2fc5d19bce2d477935202a5a4522671529d0352a0ee28be1307f8ab391065265";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra directory process resourcet
             temporary transformers unix
           ];
           executableHaskellDepends = [
             base bytestring conduit conduit-extra resourcet
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pharpend/editor-open";
           description = "Open the user's $VISUAL or $EDITOR for text input";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "either" = callPackage
        ({ mkDerivation, base, bifunctors, mtl, profunctors, semigroupoids
         , stdenv
         }:
         mkDerivation {
           pname = "either";
           version = "5.0.1.1";
           sha256 = "0243d51d6a02ecb541e4854a588a9b6219a4690ebcbdb79387dd14ad519cdf27";
           revision = "1";
           editedCabalFile = "03bgnq55lc6f1nx4p662gidfsyyfm3xm4fi84h77wnsppxrpa5j1";
           libraryHaskellDepends = [
             base bifunctors mtl profunctors semigroupoids
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/either/";
           description = "Combinators for working with sums";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "either-both" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "either-both";
           version = "0.1.1.1";
           sha256 = "6ea467bbcb62d2aded238d3b078fc6fdce44a2137b6be40b209562be3978a6b2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Either or both";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg" = callPackage
        ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
         , filepath, network, snap-core, snap-server, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "ekg";
           version = "0.4.0.15";
           sha256 = "482ae3be495cfe4f03332ad1c79ce8b5ad4f9c8eec824980c664808ae32c6dcc";
           revision = "7";
           editedCabalFile = "1p6mq14si3bqgw4b1frdfj5cbqpz3p399q8wipk6z95yyg129f6i";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring ekg-core ekg-json filepath network snap-core
             snap-server text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg";
           description = "Remote monitoring of processes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-core" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ekg-core";
           version = "0.1.1.6";
           sha256 = "66a8dd79ad27659052168f08dd41fabb8593e364de00fb857ef5cc943acd5742";
           libraryHaskellDepends = [
             base containers ghc-prim text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-core";
           description = "Tracking of system metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-json" = callPackage
        ({ mkDerivation, aeson, base, ekg-core, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ekg-json";
           version = "0.1.0.6";
           sha256 = "1e6a80aa0a28bbf41c9c6364cbb5731160d14fa54145f27a82d0b3467a04dd47";
           revision = "5";
           editedCabalFile = "0qc3fdycamm97lhhvwgvl8kvj169qrwr5ds4vkvyclpv0s90ijva";
           libraryHaskellDepends = [
             aeson base ekg-core text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-json";
           description = "JSON encoding of ekg metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-statsd" = callPackage
        ({ mkDerivation, base, bytestring, ekg-core, network, stdenv, text
         , time, unordered-containers
         }:
         mkDerivation {
           pname = "ekg-statsd";
           version = "0.2.4.0";
           sha256 = "5e74bf63a1cd347c939d4eb7beb9181556b7bd033a60e5f6f4df0505e98a7adb";
           revision = "4";
           editedCabalFile = "0mrar804w2m57zg9bd0qkp4vbkzmgi46478v6z7qcz7qpd8vml9d";
           libraryHaskellDepends = [
             base bytestring ekg-core network text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-statsd";
           description = "Push metrics to statsd";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elerea" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "elerea";
           version = "2.9.0";
           sha256 = "901221660b32597803b20fe2e78bb6f1f60f064d04671fb3f0baa05c87446681";
           libraryHaskellDepends = [
             base containers transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "A minimalistic FRP library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elf" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "elf";
           version = "0.30";
           sha256 = "97b0a2cfeff33dcc0640fbd878643e3f87bc88e2da02982f2698728735beee99";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wangbj/elf";
           description = "An Elf parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eliminators" = callPackage
        ({ mkDerivation, base, extra, singleton-nats, singletons, stdenv
         , template-haskell, th-abstraction, th-desugar
         }:
         mkDerivation {
           pname = "eliminators";
           version = "0.5.1";
           sha256 = "8166f2697acebd23ebf27416f489f5bf731ae081fe49fd34834a9b7194760f4f";
           libraryHaskellDepends = [
             base extra singleton-nats singletons template-haskell
             th-abstraction th-desugar
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/eliminators";
           description = "Dependently typed elimination functions using singletons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elm-bridge" = callPackage
        ({ mkDerivation, aeson, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "elm-bridge";
           version = "0.5.2";
           sha256 = "77b3c29628d26dbfd77bb2a950fae203c661bbb5087dc566d0b52e99296144d3";
           libraryHaskellDepends = [ aeson base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/elm-bridge";
           description = "Derive Elm types and Json code from Haskell types, using aeson's options";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elm-core-sources" = callPackage
        ({ mkDerivation, base, bytestring, containers, file-embed, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "elm-core-sources";
           version = "1.0.0";
           sha256 = "a403505d50cd6ff0d21243db55c6decc6dde14b88a6a393e2b6243f09f6620fb";
           libraryHaskellDepends = [
             base bytestring containers file-embed template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/JoeyEremondi/elm-build-lib";
           description = "Source files for the Elm runtime and standard libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elm-export" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , formatting, mtl, stdenv, text, time, wl-pprint-text
         }:
         mkDerivation {
           pname = "elm-export";
           version = "0.6.0.1";
           sha256 = "bf9862015918c72b54b421efcd9d858969dcd94ef0a3d0cb92d9bc0c4363f9d5";
           libraryHaskellDepends = [
             base bytestring containers directory formatting mtl text time
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/krisajenkins/elm-export";
           description = "A library to generate Elm types from Haskell source";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "elm2nix" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, async, base, binary
         , bytestring, containers, data-default, directory, filepath, here
         , mtl, optparse-applicative, process, req, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "elm2nix";
           version = "0.1.2";
           sha256 = "4d5afdda31461335df64991d627dc0af76e8d5db6b54d54fff35ab6866c87db9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base binary bytestring containers data-default
             directory filepath here mtl process req text transformers
             unordered-containers
           ];
           executableHaskellDepends = [
             ansi-wl-pprint base directory here optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/domenkozar/elm2nix#readme";
           description = "Turn your Elm project into buildable Nix project";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "emacs-module" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, exceptions
         , monad-control, mtl, prettyprinter, resourcet
         , safe-exceptions-checked, stdenv, template-haskell, text
         , transformers-base, vector, void
         }:
         mkDerivation {
           pname = "emacs-module";
           version = "0.1.1";
           sha256 = "1ee0fd9cde2e218d604c5d1670f24194575f975510936510fe9fc2f6e066d9d4";
           libraryHaskellDepends = [
             base bytestring deepseq exceptions monad-control mtl prettyprinter
             resourcet safe-exceptions-checked template-haskell text
             transformers-base vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sergv/emacs-module";
           description = "Utilities to write Emacs dynamic modules";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "email-validate" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "email-validate";
           version = "2.3.2.12";
           sha256 = "0e7b2ab28bd4d072d06c6d20a4ab55b2950b4facc0f0b3200ba10f15a563232b";
           libraryHaskellDepends = [
             attoparsec base bytestring template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Porges/email-validate-hs";
           description = "Email address validation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "emd" = callPackage
        ({ mkDerivation, base, binary, containers, data-default-class
         , deepseq, finite-typelits, ghc-typelits-knownnat
         , ghc-typelits-natnormalise, stdenv, transformers
         , typelits-witnesses, vector, vector-sized
         }:
         mkDerivation {
           pname = "emd";
           version = "0.1.5.1";
           sha256 = "6e95300ee32c729e825cbb6e3f07a383455ea63f566ce7f3c04d0493b837311a";
           libraryHaskellDepends = [
             base binary containers data-default-class deepseq finite-typelits
             ghc-typelits-knownnat ghc-typelits-natnormalise transformers
             typelits-witnesses vector vector-sized
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/emd#readme";
           description = "Empirical Mode Decomposition and Hilbert-Huang Transform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enclosed-exceptions" = callPackage
        ({ mkDerivation, base, deepseq, lifted-base, monad-control, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "enclosed-exceptions";
           version = "1.0.3";
           sha256 = "af6d93f113ac92b89a32af1fed52f445f492afcc0be93980cbadc5698f94f0b9";
           libraryHaskellDepends = [
             base deepseq lifted-base monad-control transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jcristovao/enclosed-exceptions";
           description = "Catching all exceptions from within an enclosed computation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "entropy" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath
         , process, stdenv, unix
         }:
         mkDerivation {
           pname = "entropy";
           version = "0.4.1.5";
           sha256 = "5502aaf0415979dcfe64d3da407db46085f98a81d5b369fb040fc51b2244ee6b";
           setupHaskellDepends = [ base Cabal directory filepath process ];
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/entropy";
           description = "A platform independent entropy source";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enum-subset-generate" = callPackage
        ({ mkDerivation, base, microlens, stdenv, template-haskell }:
         mkDerivation {
           pname = "enum-subset-generate";
           version = "0.1.0.0";
           sha256 = "dd07c2089495ee5b07bdb371bc10004341edb58cbc287d4862ee96b797b14581";
           libraryHaskellDepends = [ base microlens template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/0xd34df00d/enum-subset-generate#readme";
           description = "Generate an ADT being a subset of another ADT, and the corresponding mappings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enum-text" = callPackage
        ({ mkDerivation, array, base, bytestring, fmt, hashable, possibly
         , stdenv, text, time, unordered-containers
         }:
         mkDerivation {
           pname = "enum-text";
           version = "0.5.1.0";
           sha256 = "cecd016ebe1a382297c5330bdf177df191db02cb5b011c1e6557febb7a85886c";
           libraryHaskellDepends = [
             array base bytestring fmt hashable possibly text time
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/enum-text#readme";
           description = "A text rendering and parsing toolkit for enumerated types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enum-text-rio" = callPackage
        ({ mkDerivation, base, bytestring, enum-text, fmt, rio, stdenv
         , text
         }:
         mkDerivation {
           pname = "enum-text-rio";
           version = "1.2.0.0";
           sha256 = "ca66153f0109c3e4be9b10a5a1d80aa4433b401c228e122a8577c554430ce933";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring enum-text fmt rio text ];
           executableHaskellDepends = [
             base bytestring enum-text fmt rio text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/enum-text-rio#readme";
           description = "Making fmt available with rio";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enummapset" = callPackage
        ({ mkDerivation, base, containers, deepseq, semigroups, stdenv }:
         mkDerivation {
           pname = "enummapset";
           version = "0.6.0.2";
           sha256 = "3b344af1b375cd904ab4cbe687a1a336840c6de3e66b4c2a26f73a96d5cfe610";
           libraryHaskellDepends = [ base containers deepseq semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Mikolaj/enummapset";
           description = "IntMap and IntSet with Enum keys/elements";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enumset" = callPackage
        ({ mkDerivation, base, data-accessor, semigroups, stdenv
         , storable-record
         }:
         mkDerivation {
           pname = "enumset";
           version = "0.0.5";
           sha256 = "31629409abbdcc40131b59bdb10e6cbbafc69e815f45b2a06b9eb35a0fb53435";
           libraryHaskellDepends = [
             base data-accessor semigroups storable-record
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sets of enumeration values represented by machine words";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "envelope" = callPackage
        ({ mkDerivation, aeson, base, http-api-data, mtl, stdenv, text }:
         mkDerivation {
           pname = "envelope";
           version = "0.2.2.0";
           sha256 = "cf4d6fe3f906e859ec3c16684a8dafb349e77f0fa4f21b7090ca33e707867ef9";
           libraryHaskellDepends = [ aeson base http-api-data mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/envelope#readme";
           description = "Defines generic 'Envelope' type to wrap reponses from a JSON API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "envy" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, stdenv, text
         , time, transformers
         }:
         mkDerivation {
           pname = "envy";
           version = "2.0.0.0";
           sha256 = "1f3c9e305490202deadd8a05b7da0e2690eb2c7806511e3c45f796be677a7950";
           libraryHaskellDepends = [
             base bytestring containers mtl text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "An environmentally friendly way to deal with environment variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "epub-metadata" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , hxt, mtl, regex-compat-tdfa, stdenv, utf8-string, zip-archive
         }:
         mkDerivation {
           pname = "epub-metadata";
           version = "4.5";
           sha256 = "19ae3914df5936908c8d7264ae5f1e310262fa06bd7e4390838892840e4c0349";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory filepath hxt mtl
             regex-compat-tdfa utf8-string zip-archive
           ];
           executableHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/dino/epub-metadata";
           description = "Library for parsing epub document metadata";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eq" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "eq";
           version = "4.2";
           sha256 = "4160703a06af1c7518b8ff3244a04013fc7c04a012637dd26be31308e23970e8";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/eq/";
           description = "Leibnizian equality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "equal-files" = callPackage
        ({ mkDerivation, base, bytestring, explicit-exception, filemanip
         , stdenv, transformers, utility-ht
         }:
         mkDerivation {
           pname = "equal-files";
           version = "0.0.5.3";
           sha256 = "e5b785c286c557c57dba7107d913b220781aa2549ba4b7685da494b20a0172aa";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring explicit-exception filemanip transformers
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/equal-files/";
           description = "Shell command for finding equal files";
           license = "GPL";
         }) {};
      "erf" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "erf";
           version = "2.0.0.0";
           sha256 = "24f0b79c7e1d25cb2cd44c2258d7a464bf6db8079775b50b60b54a254616b337";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "The error function, erf, and related functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "error-util" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "error-util";
           version = "0.0.1.2";
           sha256 = "df1916a2de007697b7b1a9f83eacab4588d8dc472fd0f21395dce83b085e4e06";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pmlodawski/error-util";
           description = "Set of utils and operators for error handling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "errors" = callPackage
        ({ mkDerivation, base, exceptions, safe, stdenv, text, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "errors";
           version = "2.3.0";
           sha256 = "6772e5689f07e82077ffe3339bc672934d83d83a97a7d4f1349de1302cb71f75";
           libraryHaskellDepends = [
             base exceptions safe text transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simplified error-handling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "errors-ext" = callPackage
        ({ mkDerivation, base, errors, exceptions, monad-control, mtl
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "errors-ext";
           version = "0.4.2";
           sha256 = "406e65338046d6c1d6994072b529272fab4ad7abbdb2c3b63576788fd8dd9618";
           libraryHaskellDepends = [
             base errors exceptions monad-control mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/A1-Triard/errors-ext#readme";
           description = "`bracket`-like functions for `ExceptT` over `IO` monad";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "ersatz" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, Cabal
         , cabal-doctest, containers, data-default, fail, lens, mtl, parsec
         , process, semigroups, stdenv, temporary, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "ersatz";
           version = "0.4.8";
           sha256 = "0cedf3498227323be9c3042af6de00f64ce35c12cddae1008ab96f053f72adbd";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             array attoparsec base bytestring containers data-default lens mtl
             process semigroups temporary transformers unordered-containers
           ];
           executableHaskellDepends = [
             array base containers fail lens mtl parsec semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ersatz";
           description = "A monad for expressing SAT or QSAT problems using observable sharing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "esqueleto" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, conduit
         , monad-logger, persistent, resourcet, stdenv, tagged, text, time
         , transformers, unliftio, unordered-containers
         }:
         mkDerivation {
           pname = "esqueleto";
           version = "3.0.0";
           sha256 = "fe277659f4bed01ca768fcd791d4b92a1aeaf012be4d17a115ce77015102eca0";
           libraryHaskellDepends = [
             base blaze-html bytestring conduit monad-logger persistent
             resourcet tagged text time transformers unliftio
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bitemyapp/esqueleto";
           description = "Type-safe EDSL for SQL queries on persistent backends";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "etc" = callPackage
        ({ mkDerivation, aeson, base, rio, stdenv, template-haskell, text
         , typed-process, unliftio
         }:
         mkDerivation {
           pname = "etc";
           version = "0.4.1.0";
           sha256 = "61b4d5f29a1fc66df082623e5fc9269bdbb49d28ebf4cbb740c71319257a27c8";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base rio template-haskell text typed-process unliftio
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/roman/Haskell-etc";
           description = "Declarative configuration spec for Haskell projects";
           license = stdenv.lib.licenses.mit;
         }) {};
      "event-list" = callPackage
        ({ mkDerivation, base, non-negative, QuickCheck, semigroups, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "event-list";
           version = "0.1.2";
           sha256 = "624e30b876e0acdaea895efbb2000bbbec2d5be0743ecac9805655ae634af89c";
           libraryHaskellDepends = [
             base non-negative QuickCheck semigroups transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/event-list/";
           description = "Event lists with relative or absolute time stamps";
           license = "GPL";
         }) {};
      "eventful-core" = callPackage
        ({ mkDerivation, aeson, base, containers, contravariant
         , http-api-data, path-pieces, stdenv, sum-type-boilerplate
         , template-haskell, text, transformers, uuid
         }:
         mkDerivation {
           pname = "eventful-core";
           version = "0.2.0";
           sha256 = "e0f55e7498d8e48232ce2d5194c69f635beaeb322cb64753766076d7b35c9019";
           libraryHaskellDepends = [
             aeson base containers contravariant http-api-data path-pieces
             sum-type-boilerplate template-haskell text transformers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Core module for eventful";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-memory" = callPackage
        ({ mkDerivation, base, containers, eventful-core, mtl, safe, stdenv
         , stm
         }:
         mkDerivation {
           pname = "eventful-memory";
           version = "0.2.0";
           sha256 = "6a7c3e0a12e3c4e572927929020ad92075933e5d3c66ea61ff615a3ac217adb9";
           libraryHaskellDepends = [
             base containers eventful-core mtl safe stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "In-memory implementations for eventful";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-sql-common" = callPackage
        ({ mkDerivation, aeson, base, bytestring, eventful-core, mtl
         , persistent, persistent-template, stdenv, text, uuid
         }:
         mkDerivation {
           pname = "eventful-sql-common";
           version = "0.2.0";
           sha256 = "a46ea18cbbb5bd04b3a6846273e8161b7e4208660d0abf5a401192b07636aebc";
           revision = "1";
           editedCabalFile = "1w2qq0p4304zsjkwmqx79azpq5v0ajz5grg740vwkca8qvdvdq91";
           libraryHaskellDepends = [
             aeson base bytestring eventful-core mtl persistent
             persistent-template text uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Common library for SQL event stores";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-sqlite" = callPackage
        ({ mkDerivation, aeson, base, bytestring, eventful-core
         , eventful-sql-common, mtl, persistent, stdenv, text, uuid
         }:
         mkDerivation {
           pname = "eventful-sqlite";
           version = "0.2.0";
           sha256 = "c0bbea0ebd1f0a4891a74b190f499caf85ac026f49b9401fc76f181b0041dfef";
           libraryHaskellDepends = [
             aeson base bytestring eventful-core eventful-sql-common mtl
             persistent text uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "SQLite implementations for eventful";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-test-helpers" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, eventful-core, extra
         , hspec, monad-logger, stdenv, text
         }:
         mkDerivation {
           pname = "eventful-test-helpers";
           version = "0.2.0";
           sha256 = "a99f9d0cde3926add542c4fc59e079da7d71f2b40e2251b7d79777585c4ebfe0";
           libraryHaskellDepends = [
             aeson aeson-casing base eventful-core extra hspec monad-logger text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Common module used for eventful tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventstore" = callPackage
        ({ mkDerivation, aeson, array, base, bifunctors, bytestring, cereal
         , clock, connection, containers, dns, dotnet-timespan, ekg-core
         , exceptions, fast-logger, hashable, http-client, interpolate
         , lifted-async, lifted-base, monad-control, monad-logger
         , mono-traversable, mtl, protobuf, random, safe, safe-exceptions
         , semigroups, stdenv, stm, stm-chans, streaming, text, time
         , transformers-base, unordered-containers, uuid, vector
         }:
         mkDerivation {
           pname = "eventstore";
           version = "1.3.3";
           sha256 = "b70bba26d51f17422d242c010a710f73bf2fa2a6420ba4cb913c38f1b83fc675";
           libraryHaskellDepends = [
             aeson array base bifunctors bytestring cereal clock connection
             containers dns dotnet-timespan ekg-core exceptions fast-logger
             hashable http-client interpolate lifted-async lifted-base
             monad-control monad-logger mono-traversable mtl protobuf random
             safe safe-exceptions semigroups stm stm-chans streaming text time
             transformers-base unordered-containers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoEight/eventstore";
           description = "EventStore TCP Client";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "x86_64-darwin" "x86_64-linux" ];
         }) {};
      "every" = callPackage
        ({ mkDerivation, async, base, stdenv, stm }:
         mkDerivation {
           pname = "every";
           version = "0.0.1";
           sha256 = "5d0ff0e4cefb094c44b55defa283146b16b925722a2eb244a5ef4364737980e5";
           libraryHaskellDepends = [ async base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/every#readme";
           description = "Run a process every so often";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exact-combinatorics" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "exact-combinatorics";
           version = "0.2.0.9";
           sha256 = "725785ac22c252b0753aefffd8eb591f8a4184cec08a5d50bca1d57c5345c9ab";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://wrengr.org/";
           description = "Efficient exact computation of combinatoric functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exact-pi" = callPackage
        ({ mkDerivation, base, numtype-dk, stdenv }:
         mkDerivation {
           pname = "exact-pi";
           version = "0.5.0.1";
           sha256 = "5d8156ec8b044a36c2ac789b85bf65116be24304868fff472d033977ebcc1860";
           revision = "1";
           editedCabalFile = "1l55d7x61i2d5rlh7sh2nhn0af9cyp92gzdmqqnnjzg55d347qsm";
           libraryHaskellDepends = [ base numtype-dk ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmcclean/exact-pi/";
           description = "Exact rational multiples of pi (and integer powers of pi)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "exception-mtl" = callPackage
        ({ mkDerivation, base, exception-transformers, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "exception-mtl";
           version = "0.4.0.1";
           sha256 = "ec13bcbae6cdde218a7118a2bd3058493af09a330b86e28469a278c9b2cea134";
           libraryHaskellDepends = [
             base exception-transformers mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Exception monad transformer instances for mtl classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exception-transformers" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "exception-transformers";
           version = "0.4.0.8";
           sha256 = "39eb6848e73a5ef97e8eae26ee84f0412dcf8dedbacb2b232bfeec4941e33b1d";
           libraryHaskellDepends = [
             base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Type classes and monads for unchecked extensible exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exceptional" = callPackage
        ({ mkDerivation, base, exceptions, stdenv }:
         mkDerivation {
           pname = "exceptional";
           version = "0.3.0.0";
           sha256 = "da866ed28ea14d245cc065271f4ddd6da0a91b83e8d83daddcd1ef0623e99f06";
           libraryHaskellDepends = [ base exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/";
           description = "Essentially the Maybe type with error messages";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "exceptions" = callPackage
        ({ mkDerivation, base, mtl, stdenv, stm, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "exceptions";
           version = "0.10.4";
           sha256 = "4d0bfb4355cffcd67d300811df9d5fe44ea3594ed63750795bfc1f797abd84cf";
           revision = "1";
           editedCabalFile = "0b5m01nmaqzvvm1d07b3dnmcn47pmy943lydb2m7ibhilqkfya8p";
           libraryHaskellDepends = [
             base mtl stm template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/exceptions/";
           description = "Extensible optionally-pure exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "executable-hash" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cryptohash, directory
         , executable-path, file-embed, filepath, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "executable-hash";
           version = "0.2.0.4";
           sha256 = "34eaf5662d90d3b7841f66b322ac5bc54900b0e3cb06792852b08b3c05a42ba4";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [
             base bytestring Cabal cryptohash directory file-embed filepath
             template-haskell
           ];
           libraryHaskellDepends = [
             base bytestring cryptohash directory executable-path file-embed
             template-haskell
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fpco/executable-hash";
           description = "Provides the SHA1 hash of the program executable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "executable-path" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, unix }:
         mkDerivation {
           pname = "executable-path";
           version = "0.0.3.1";
           sha256 = "9cc742b6d40a487b3af38dca6852ca3b50a0db94d42fe819576c84beb5adbc6f";
           libraryHaskellDepends = [ base directory filepath unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~bkomuves/";
           description = "Finding out the full path of the executable";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "exit-codes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "exit-codes";
           version = "1.0.0";
           sha256 = "4aa2499a18b0453a9f921bb3262aefe24c8fa98ef9633ab284d8cf6f52a49e01";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/JustusAdam/exit-codes";
           description = "Exit codes as defined by BSD";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exomizer" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, stdenv }:
         mkDerivation {
           pname = "exomizer";
           version = "1.0.0";
           sha256 = "94c24d436d12666d16cb7171c83cedec449b992dc3aeaaa6decdc0faf8e2cfd2";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alexkazik/exomizer#readme";
           description = "Compression and decompression in the exomizer format";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "exp-pairs" = callPackage
        ({ mkDerivation, base, containers, deepseq, ghc-prim, prettyprinter
         , stdenv
         }:
         mkDerivation {
           pname = "exp-pairs";
           version = "0.2.0.0";
           sha256 = "57471bfd498570247c03863ec4532ff06c20198efe7a7fe4484478d7139ac967";
           revision = "1";
           editedCabalFile = "1fkllbgsygzm1lw3g3a9l8fg8ap74bx0x7ja8yx3lbrjjsaqh8pa";
           libraryHaskellDepends = [
             base containers deepseq ghc-prim prettyprinter
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/exp-pairs";
           description = "Linear programming over exponent pairs";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "expiring-cache-map" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "expiring-cache-map";
           version = "0.0.6.1";
           sha256 = "0e3bc294978b46ee59bf0b4a7e7a5bd7ed5da7bc261ffebdb0cb1b60353c64b9";
           libraryHaskellDepends = [
             base containers hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/elblake/expiring-cache-map";
           description = "General purpose simple caching";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "explicit-exception" = callPackage
        ({ mkDerivation, base, deepseq, semigroups, stdenv, transformers }:
         mkDerivation {
           pname = "explicit-exception";
           version = "0.1.10";
           sha256 = "00d467d6f75751db37adfbc5ab238db3d92f16ca642f872f912aed8e7f00f8bc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base deepseq semigroups transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Exception";
           description = "Exceptions which are explicit in the type signature";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extensible-exceptions" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "extensible-exceptions";
           version = "0.1.1.4";
           sha256 = "6ce5e8801760385a408dab71b53550f87629e661b260bdc2cd41c6a439b6e388";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extra" = callPackage
        ({ mkDerivation, base, clock, directory, filepath, process
         , semigroups, stdenv, time, unix
         }:
         mkDerivation {
           pname = "extra";
           version = "1.6.18";
           sha256 = "9e81788ea870cc94e0cd809f3258aec0a361981783f59b122aeea20801256d4b";
           libraryHaskellDepends = [
             base clock directory filepath process semigroups time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/extra#readme";
           description = "Extra functions I use";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extractable-singleton" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "extractable-singleton";
           version = "0.0.1";
           sha256 = "e8da1928d98c57ef3d1bab7deb1378f51fa496721495777233663dd0b1b2c0ad";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/extractable-singleton#readme";
           description = "A functor, where the \"stored\" value is isomorphic to Identity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extrapolate" = callPackage
        ({ mkDerivation, base, leancheck, speculate, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "extrapolate";
           version = "0.3.3";
           sha256 = "22fff22a2c5b36a6545b27495c0eba63e8e3f72baccb3f9d687967c6532381d5";
           libraryHaskellDepends = [
             base leancheck speculate template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/extrapolate#readme";
           description = "generalize counter-examples of test properties";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fail" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "fail";
           version = "4.9.0.0";
           sha256 = "6d5cdb1a5c539425a9665f740e364722e1d9d6ae37fbc55f30fe3dbbbb91d4a2";
           doHaddock = false;
           doCheck = false;
           homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
           description = "Forward-compatible MonadFail class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "failable" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "failable";
           version = "1.2.4.0";
           sha256 = "8fd367b3408e6f2be38a4a9c9136c76ace2acea1910c65d6bf8e77c5bdccceed";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A 'Failable' error monad class to unify failure across monads that can fail";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fakedata" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , exceptions, filepath, random, stdenv, template-haskell, text
         , time, vector, yaml
         }:
         mkDerivation {
           pname = "fakedata";
           version = "0.2.2";
           sha256 = "390f057f6dd583e874cf98d1d69ddb712058a7037ae5b1a881360ed13ad4fa85";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers directory exceptions filepath random
             template-haskell text time vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/fakedata#readme";
           description = "Library for producing fake data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "farmhash" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "farmhash";
           version = "0.1.0.5";
           sha256 = "0e685a5445f7bce88682d209bccb47d03f06065a627475df44a8e2af8bc20fa1";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/farmhash";
           description = "Fast hash functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fast-builder" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "fast-builder";
           version = "0.1.2.0";
           sha256 = "371fe3787fd1dbdf9749eb7d9f00b8b805f166b28a1ee006c504336a49d843a9";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/takano-akio/fast-builder";
           description = "Fast ByteString Builder";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "fast-digits" = callPackage
        ({ mkDerivation, base, integer-gmp, stdenv }:
         mkDerivation {
           pname = "fast-digits";
           version = "0.2.1.0";
           sha256 = "ec84576e479202de8257c7c499b66e91bcf18444f7683475d74b575e166dd83b";
           libraryHaskellDepends = [ base integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/fast-digits";
           description = "The fast library for integer-to-digits conversion";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "fast-logger" = callPackage
        ({ mkDerivation, array, auto-update, base, bytestring, directory
         , easy-file, filepath, stdenv, text, unix-compat, unix-time
         }:
         mkDerivation {
           pname = "fast-logger";
           version = "2.4.17";
           sha256 = "b36370e5f40a8e738c53c13870c51087b65ca88885865045163af43d5958bd0a";
           revision = "1";
           editedCabalFile = "1yv4f6pbrgqqhc0z3chhjrzz1gs7idrmcbvmbl8pfyn547ci6brb";
           libraryHaskellDepends = [
             array auto-update base bytestring directory easy-file filepath text
             unix-compat unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kazu-yamamoto/logger";
           description = "A fast logging system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fast-math" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fast-math";
           version = "1.0.2";
           sha256 = "45101ddc8b86402e866ec029bcfbc2662779e578e43b40acd971a9f411e2be95";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Non IEEE-754 compliant compile-time floating-point optimisations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fb" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , conduit-extra, cryptonite, data-default, http-client
         , http-conduit, http-types, memory, monad-logger, resourcet, stdenv
         , text, time, transformers, transformers-base, unliftio
         , unliftio-core, unordered-containers
         }:
         mkDerivation {
           pname = "fb";
           version = "2.0.0";
           sha256 = "9c596a412d958ea1214ceca2ff85e06358f1cca992c8aab609c695db5764a67c";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit conduit-extra cryptonite
             data-default http-client http-conduit http-types memory
             monad-logger resourcet text time transformers transformers-base
             unliftio unliftio-core unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/fb";
           description = "Bindings to Facebook's API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fclabels" = callPackage
        ({ mkDerivation, base, base-orphans, mtl, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "fclabels";
           version = "2.0.4";
           sha256 = "c269e0bbe395a7ea27acaf51061dbbfcd452c824ed761c404c5df848d94e45cf";
           libraryHaskellDepends = [
             base base-orphans mtl template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sebastiaanvisser/fclabels";
           description = "First class accessor labels implemented as lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "feature-flags" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "feature-flags";
           version = "0.1.0.1";
           sha256 = "0e4cf7db6791b0875975dfa001d71bf31797b2edbfd2424f6b6202ace7935ad3";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iand675/feature-flags";
           description = "A simple library for dynamically enabling and disabling functionality";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fedora-dists" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fedora-dists";
           version = "1.0.1";
           sha256 = "942ea841f4ec99e79f0934da7eb29741560e68afa36cd7297c65b8e0c69dfe80";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/fedora-dists";
           description = "Library for Fedora distribution versions";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "feed" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, old-locale
         , old-time, safe, stdenv, text, time, time-locale-compat
         , utf8-string, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "feed";
           version = "1.2.0.1";
           sha256 = "8093d7b262860abf1a2884b8f92162ff03f9d8c84cbf8aa837926af26ce39400";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base-compat bytestring old-locale old-time safe text time
             time-locale-compat utf8-string xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bergmark/feed";
           description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fft" = callPackage
        ({ mkDerivation, array, base, carray, fftw, fftwFloat, ix-shapable
         , stdenv, storable-complex, syb, transformers
         }:
         mkDerivation {
           pname = "fft";
           version = "0.1.8.6";
           sha256 = "2ed8d8301903283c9a62eda1f1cf49db0c471c4c128fbfdef562d598401e5b42";
           libraryHaskellDepends = [
             array base carray ix-shapable storable-complex syb transformers
           ];
           libraryPkgconfigDepends = [ fftw fftwFloat ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to the FFTW library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
      "fgl" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "fgl";
           version = "5.7.0.2";
           sha256 = "945a9acf5883c9f20a23d02d345227d1c617e8449db5c18f40c50b69246ff88f";
           libraryHaskellDepends = [
             array base containers deepseq transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Martin Erwig's Functional Graph Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fib" = callPackage
        ({ mkDerivation, base-noprelude, integer-gmp, semirings, stdenv }:
         mkDerivation {
           pname = "fib";
           version = "0.1";
           sha256 = "93fe144cf51833eac154801e1a01e90c7b3281d1250e1e1af97ca404ccb9f7a6";
           revision = "1";
           editedCabalFile = "1pi7hhil698v9yk17ncw7raw0sf20yj679jvs2d0p7q8ypl9b1lh";
           libraryHaskellDepends = [ base-noprelude integer-gmp semirings ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chessai/fib";
           description = "fibonacci algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-embed" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "file-embed";
           version = "0.0.11.1";
           sha256 = "a113e7fe528be8204f40d3e9e00d595234e49def6caa133136e8254b659189d6";
           libraryHaskellDepends = [
             base bytestring directory filepath template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/file-embed";
           description = "Use Template Haskell to embed file contents directly";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-embed-lzma" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, directory, filepath
         , lzma, stdenv, template-haskell, text, th-lift-instances
         , transformers
         }:
         mkDerivation {
           pname = "file-embed-lzma";
           version = "0";
           sha256 = "e86cf44f747cf403898158e9fdf9342871e293097a29679fcf587aed497f0c77";
           revision = "5";
           editedCabalFile = "1rkya7m491b3asfhpygwz97gzfh46f9h1bi6b4isbslpj50k2h6l";
           libraryHaskellDepends = [
             base base-compat bytestring directory filepath lzma
             template-haskell text th-lift-instances transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/file-embed-lzma";
           description = "Use Template Haskell to embed (LZMA compressed) data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-modules" = callPackage
        ({ mkDerivation, async, base, directory, filepath, haskell-src-exts
         , MissingH, regex-compat, regex-pcre, stdenv
         }:
         mkDerivation {
           pname = "file-modules";
           version = "0.1.2.4";
           sha256 = "ffea2dbd51f77ed76f8559d8519674a1210611a35e2dbea72dfb41d7d5f0f235";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base directory filepath haskell-src-exts MissingH
             regex-compat regex-pcre
           ];
           executableHaskellDepends = [
             async base directory filepath haskell-src-exts MissingH
             regex-compat regex-pcre
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/stack-run-auto";
           description = "Takes a Haskell source-code file and outputs its modules";
           license = stdenv.lib.licenses.mit;
         }) {};
      "filecache" = callPackage
        ({ mkDerivation, base, containers, directory, exceptions, filepath
         , fsnotify, mtl, stdenv, stm, strict-base-types, time
         }:
         mkDerivation {
           pname = "filecache";
           version = "0.4.1";
           sha256 = "c502a8b43cf08694c8d2657dc282306d811cdd91f284614a6a9945267c93cb9d";
           libraryHaskellDepends = [
             base containers directory exceptions filepath fsnotify mtl stm
             strict-base-types time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lpuppet.banquise.net/";
           description = "A cache system associating values to files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "filelock" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "filelock";
           version = "0.1.1.4";
           sha256 = "d97e29095b0d8b652bc02e52d79bb415e75285c651bcaacb108db883f72536a1";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/takano-akio/filelock";
           description = "Portable interface to file locking (flock / LockFileEx)";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "filemanip" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, mtl, stdenv
         , unix-compat
         }:
         mkDerivation {
           pname = "filemanip";
           version = "0.3.6.3";
           sha256 = "8836da17baaaf02ca080c9990ece4e0b0c8d6a128f458f8b64fd07b225ca9846";
           libraryHaskellDepends = [
             base bytestring directory filepath mtl unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/filemanip";
           description = "Expressive file and directory manipulation for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "filepattern" = callPackage
        ({ mkDerivation, base, directory, extra, filepath, stdenv }:
         mkDerivation {
           pname = "filepattern";
           version = "0.1.1";
           sha256 = "f7fc5bdcfef0d43a793a3c64e7c0fd3b1d35eea97a37f0e69d6612ab255c9b4b";
           libraryHaskellDepends = [ base directory extra filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/filepattern#readme";
           description = "File path glob-like matching";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fileplow" = callPackage
        ({ mkDerivation, base, binary-search, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "fileplow";
           version = "0.1.0.0";
           sha256 = "9ddc7db62c97fa4413ff2435c96aac9f6f716e2f6bc7a71aa4db25c3871bee04";
           libraryHaskellDepends = [ base binary-search bytestring vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/fileplow#readme";
           description = "Library to process and search large files or a collection of files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "filter-logger" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, ansi-terminal, base
         , bytestring, data-default, fast-logger, http-types, scotty
         , semigroups, stdenv, time, wai, wai-extra, wai-logger
         }:
         mkDerivation {
           pname = "filter-logger";
           version = "0.6.0.0";
           sha256 = "7884124056950a7f7ff393ebb7d1622695f9b66f898c60aeb8bc991c73642f21";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty ansi-terminal base bytestring data-default
             fast-logger http-types semigroups time wai wai-extra wai-logger
           ];
           executableHaskellDepends = [ aeson base bytestring scotty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/filter-logger#readme";
           description = "Filterable request logging wai middleware. Change how data is logged and when.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "filtrable" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "filtrable";
           version = "0.1.3.0";
           sha256 = "80364ec6b28b8e5c68df44d6e7f03389bd2c19eeca7a9d79d487db1ec0fa2aee";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/strake/filtrable.hs";
           description = "Class of filtrable containers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fin" = callPackage
        ({ mkDerivation, base, dec, deepseq, hashable, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "fin";
           version = "0.1.1";
           sha256 = "31e3174c0220ed6ca07c02982105279d01309e71791534355c612e1a45478c7f";
           revision = "2";
           editedCabalFile = "1x446k44pci81dakzd98vrj6amj10xkb05k7g2qwk0ir1hdj5sfz";
           libraryHaskellDepends = [ base dec deepseq hashable QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/vec";
           description = "Nat and Fin: peano naturals and finite numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fingertree" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fingertree";
           version = "0.1.4.2";
           sha256 = "95a948341570bad5a9b2468c388c0eb2c20c57e10dd8fbfc994c7b8764b36a7f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Generic finger-tree structure, with example instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "finite-typelits" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "finite-typelits";
           version = "0.1.4.2";
           sha256 = "d207a46c911b69ecc1f7c50d9d65ea1aca6c6efacec6342bc3294ed1bc4bd747";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mniip/finite-typelits";
           description = "A type inhabited by finitely many values, indexed by type-level naturals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "first-class-families" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "first-class-families";
           version = "0.5.0.0";
           sha256 = "f272bc4f90b0df9ecdc6b26279d5d106472fbff5dca1f8472af31bd915e1530f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/first-class-families#readme";
           description = "First class type families";
           license = stdenv.lib.licenses.mit;
         }) {};
      "first-class-patterns" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "first-class-patterns";
           version = "0.3.2.5";
           sha256 = "7a4bcfe2c9907d7964d2a29816ea37aac64b0506fdebd34241d0dd735cb308ae";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/first-class-patterns";
           description = "First class patterns and pattern matching, using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fitspec" = callPackage
        ({ mkDerivation, base, cmdargs, leancheck, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "fitspec";
           version = "0.4.7";
           sha256 = "b8dc00aad234b30d1d383075062c0756bb7d412a5bf4b766f2aad0d7ac30716a";
           libraryHaskellDepends = [
             base cmdargs leancheck template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/fitspec#readme";
           description = "refining property sets for testing Haskell programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fixed";
           version = "0.3";
           sha256 = "9218ebd3af3f07335db8dcd148b3ce40acf984734c244cce5959f57402d48282";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/fixed";
           description = "Signed 15.16 precision fixed point arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-length" = callPackage
        ({ mkDerivation, base, non-empty, stdenv, storable-record, tfp
         , utility-ht
         }:
         mkDerivation {
           pname = "fixed-length";
           version = "0.2.1";
           sha256 = "a151b68802538e8f98d05f582bd23fad94c869e1ad1f5506579524f5d2764b49";
           libraryHaskellDepends = [
             base non-empty storable-record tfp utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/fixed-length/";
           description = "Lists with statically known length based on non-empty package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-vector" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv }:
         mkDerivation {
           pname = "fixed-vector";
           version = "1.2.0.0";
           sha256 = "dc67e4f139f07018be73a5f2e44ddfb3e8dab8b884a66a93c7676b2a9f3604a5";
           libraryHaskellDepends = [ base deepseq primitive ];
           doHaddock = false;
           doCheck = false;
           description = "Generic vectors with statically known size";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-vector-hetero" = callPackage
        ({ mkDerivation, base, deepseq, fixed-vector, primitive, stdenv }:
         mkDerivation {
           pname = "fixed-vector-hetero";
           version = "0.5.0.0";
           sha256 = "a3f25968b260c953c6ad4ec75ba5211238b2bb07185fe1f33fb98301a4ee8690";
           libraryHaskellDepends = [ base deepseq fixed-vector primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
           description = "Generic heterogeneous vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flac" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , exceptions, filepath, FLAC, mtl, stdenv, text, transformers
         , vector, wave
         }:
         mkDerivation {
           pname = "flac";
           version = "0.2.0";
           sha256 = "6c8ca5fbe7ac4c6d9475678fc3bcc3b132a75fea870a3591d646cc79add5f50f";
           revision = "1";
           editedCabalFile = "1phwdnya8bgw24a80vbw0m4pm7r67grnc6si8683jz620snnsm48";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers directory exceptions filepath mtl text
             transformers vector wave
           ];
           librarySystemDepends = [ FLAC ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/flac";
           description = "Complete high-level binding to libFLAC";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) FLAC;};
      "flac-picture" = callPackage
        ({ mkDerivation, base, bytestring, flac, JuicyPixels, stdenv }:
         mkDerivation {
           pname = "flac-picture";
           version = "0.1.2";
           sha256 = "15689d14d382588697ec0da88a0025c2b156061c060979deaec0d75ecc37030a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring flac JuicyPixels ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/flac-picture";
           description = "Support for writing picture to FLAC metadata blocks with JuicyPixels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flags-applicative" = callPackage
        ({ mkDerivation, base, casing, containers, mtl, network, stdenv
         , text
         }:
         mkDerivation {
           pname = "flags-applicative";
           version = "0.1.0.2";
           sha256 = "ee69b8dad942e4528e6d4cecda1b4885ae0c9b595009414fb1d6535f1b7c5ea4";
           libraryHaskellDepends = [
             base casing containers mtl network text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtth/flags-applicative";
           description = "Applicative flag parsing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flat-mcmc" = callPackage
        ({ mkDerivation, base, formatting, mcmc-types, monad-par
         , monad-par-extras, mwc-probability, pipes, primitive, stdenv, text
         , transformers, vector
         }:
         mkDerivation {
           pname = "flat-mcmc";
           version = "1.5.1";
           sha256 = "eb4e05c1e9dccf217f37617afa765e7a838fe153714b6be1d4f8fc6a3a4421ba";
           libraryHaskellDepends = [
             base formatting mcmc-types monad-par monad-par-extras
             mwc-probability pipes primitive text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtobin/flat-mcmc";
           description = "Painless general-purpose sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "flay" = callPackage
        ({ mkDerivation, base, constraints, stdenv, transformers }:
         mkDerivation {
           pname = "flay";
           version = "0.4";
           sha256 = "01ff3e642eab48807e4369fd8c1336e22d7abdcf4374cd1322b1fe259c9413ef";
           libraryHaskellDepends = [ base constraints transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/flay";
           description = "Work generically on your datatype without knowing its shape nor its contents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flexible-defaults" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell
         , th-extras, transformers
         }:
         mkDerivation {
           pname = "flexible-defaults";
           version = "0.0.3";
           sha256 = "6586f6fce40e64f95e6d3de6d0730f9fe6668825d0dfd81336842fa8c62a630b";
           libraryHaskellDepends = [
             base containers template-haskell th-extras transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/flexible-defaults";
           description = "Generate default function implementations for complex type classes";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "floatshow" = callPackage
        ({ mkDerivation, array, base, integer-gmp, stdenv }:
         mkDerivation {
           pname = "floatshow";
           version = "0.2.4";
           sha256 = "0c4e9494df46120942b2078db53c16200b46eff603fca5ab85775a541f975dff";
           libraryHaskellDepends = [ array base integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dafis/floatshow";
           description = "Alternative faster String representations for Double and Float, String representations for more general numeric types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flow" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "flow";
           version = "1.0.19";
           sha256 = "2942c34bdb0f70bf647ab367e87ea404d8a17a9eeaf5c4357ceff2639dd7ee02";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/flow#readme";
           description = "Write more understandable Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fmlist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fmlist";
           version = "0.9.3";
           sha256 = "8e5fd44df2a7d9f950168d4a47c3389a719431976a52450323bd2dff458536f1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sjoerdvisscher/fmlist";
           description = "FoldMap lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fmt" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, call-stack
         , containers, formatting, microlens, stdenv, text, time
         , time-locale-compat
         }:
         mkDerivation {
           pname = "fmt";
           version = "0.6.1.2";
           sha256 = "78ed7bddb25c0bc4355ca2be2be3c4d8af796bce7e76e20f04b6aebbcbab8ab9";
           libraryHaskellDepends = [
             base base64-bytestring bytestring call-stack containers formatting
             microlens text time time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/fmt";
           description = "A new formatting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fmt-for-rio" = callPackage
        ({ mkDerivation, base, enum-text-rio, stdenv }:
         mkDerivation {
           pname = "fmt-for-rio";
           version = "1.0.0.0";
           sha256 = "5971c6505880eb0310254f72e6ee0424e2f16c4c8490a72ddf8512c81e0bae43";
           libraryHaskellDepends = [ base enum-text-rio ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/fmt-for-rio#readme";
           description = "Adaptor for getting fmt to work with rio";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fn" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, directory
         , filepath, http-types, resourcet, stdenv, text
         , unordered-containers, wai, wai-extra
         }:
         mkDerivation {
           pname = "fn";
           version = "0.3.0.2";
           sha256 = "1e34b017aa13f60464ec06dfbae970c3c0f01f2160f5001a4e84c8179de7ae5f";
           libraryHaskellDepends = [
             base blaze-builder bytestring directory filepath http-types
             resourcet text unordered-containers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/positiondev/fn#readme";
           description = "A functional web framework";
           license = stdenv.lib.licenses.isc;
         }) {};
      "focus" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "focus";
           version = "1.0.1.3";
           sha256 = "bdb56955fdd0fe0f97e2292d121bdc7d679c37f7a87aed9195ab4c73fc7720bc";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/focus";
           description = "A general abstraction for manipulating elements of container data structures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "focuslist" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, containers, lens
         , mono-traversable, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "focuslist";
           version = "0.1.0.2";
           sha256 = "78527aad6212617d4c8c3183c02750693d5bd30be1a26f1caff7db434b31481b";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base containers lens mono-traversable QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/focuslist";
           description = "Lists with a focused element";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fold-debounce" = callPackage
        ({ mkDerivation, base, data-default-class, stdenv, stm, stm-delay
         , time
         }:
         mkDerivation {
           pname = "fold-debounce";
           version = "0.2.0.9";
           sha256 = "98931e65001dd5d7be5a767837e74e6fc7a5ec16cbdd09408fa7e97a17995b0c";
           libraryHaskellDepends = [
             base data-default-class stm stm-delay time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/fold-debounce";
           description = "Fold multiple events that happen in a given period of time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fold-debounce-conduit" = callPackage
        ({ mkDerivation, base, conduit, fold-debounce, resourcet, stdenv
         , stm, transformers, transformers-base
         }:
         mkDerivation {
           pname = "fold-debounce-conduit";
           version = "0.2.0.4";
           sha256 = "d201526442e17f2338e39eab36e423ac27e9a92c47b2b26c26ae5a8964611656";
           libraryHaskellDepends = [
             base conduit fold-debounce resourcet stm transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/fold-debounce-conduit";
           description = "Regulate input traffic from conduit Source with Control.FoldDebounce";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foldable1" = callPackage
        ({ mkDerivation, base, stdenv, transformers, util }:
         mkDerivation {
           pname = "foldable1";
           version = "0.1.0.0";
           sha256 = "85d684e5caab9e0c87dd04d016432f4a9effb5c8c62354aedcf85c96c1e3e90a";
           libraryHaskellDepends = [ base transformers util ];
           doHaddock = false;
           doCheck = false;
           description = "Foldable types with at least 1 element";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foldl" = callPackage
        ({ mkDerivation, base, bytestring, comonad, containers
         , contravariant, hashable, mwc-random, primitive, profunctors
         , semigroupoids, semigroups, stdenv, text, transformers
         , unordered-containers, vector, vector-builder
         }:
         mkDerivation {
           pname = "foldl";
           version = "1.4.6";
           sha256 = "2a14aae99eb30344c983b8a07e0c2e5999d097042951e9349eb32d0f388a04aa";
           libraryHaskellDepends = [
             base bytestring comonad containers contravariant hashable
             mwc-random primitive profunctors semigroupoids semigroups text
             transformers unordered-containers vector vector-builder
           ];
           doHaddock = false;
           doCheck = false;
           description = "Composable, streaming, and efficient left folds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "folds" = callPackage
        ({ mkDerivation, adjunctions, base, bifunctors, Cabal
         , cabal-doctest, comonad, constraints, contravariant, data-reify
         , distributive, lens, mtl, pointed, profunctors, reflection
         , semigroupoids, stdenv, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "folds";
           version = "0.7.5";
           sha256 = "39e0c7511d7c24585e9a376cffe8ea84eb7486689d8ac6234ca59ed0dfeb489d";
           configureFlags = [ "-f-test-hlint" ];
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             adjunctions base bifunctors comonad constraints contravariant
             data-reify distributive lens mtl pointed profunctors reflection
             semigroupoids transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/folds";
           description = "Beautiful Folding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "follow-file" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-path, base, bytestring
         , conduit, conduit-combinators, directory, exceptions, hinotify
         , monad-control, mtl, path, stdenv, text, unix, utf8-string
         }:
         mkDerivation {
           pname = "follow-file";
           version = "0.0.3";
           sha256 = "232de19ab42130273aac870e5b8d13e55996af670b28c12a192fcb664fe0bb5b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec attoparsec-path base bytestring conduit directory
             exceptions hinotify monad-control mtl path text unix utf8-string
           ];
           executableHaskellDepends = [
             attoparsec attoparsec-path base bytestring conduit
             conduit-combinators directory exceptions hinotify monad-control mtl
             path text unix utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/follow-file#readme";
           description = "Be notified when a file gets appended, solely with what was added. Warning - only works on linux and for files that are strictly appended, like log files.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "force-layout" = callPackage
        ({ mkDerivation, base, containers, data-default-class, lens, linear
         , stdenv
         }:
         mkDerivation {
           pname = "force-layout";
           version = "0.4.0.6";
           sha256 = "f7729855b1b14e0b255325faaca9f4834004e02bd21def6a865d2c55c734259d";
           revision = "6";
           editedCabalFile = "0vhb3ysfi483zfp351ywjc6cg1ihz44wq137zbrkrkigxa3qhg8f";
           libraryHaskellDepends = [
             base containers data-default-class lens linear
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple force-directed layout";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foreign-store" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "foreign-store";
           version = "0.2";
           sha256 = "06718a214d068eaa494cc82376f23b2059a141b01048cd7efcf2176a6c3383dc";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/foreign-store";
           description = "Store a stable pointer in a foreign context to be retrieved later";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "forkable-monad" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "forkable-monad";
           version = "0.2.0.3";
           sha256 = "571e33effa5baaef4e2dc910010e2b02c01d8b8e06f051e96906f288f71ad462";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/System-Indystress/ForkableMonad#readme";
           description = "An implementation of forkIO for monad stacks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "forma" = callPackage
        ({ mkDerivation, aeson, base, containers, mtl, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "forma";
           version = "1.1.3";
           sha256 = "0c6c4f31688802ca44e477022c9d05f426109e3fc8cc4a98e07339b7e2c7a25d";
           libraryHaskellDepends = [
             aeson base containers mtl text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/forma";
           description = "Parse and validate forms in JSON format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "format-numbers" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "format-numbers";
           version = "0.1.0.0";
           sha256 = "0ca4561b55c888552f7bf0eb68e97b62acedcb0d5e5e1cc4afd94402d01231a6";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/format-numbers#readme";
           description = "Various number formatting functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "formatting" = callPackage
        ({ mkDerivation, array, base, bytestring, clock, ghc-prim
         , integer-gmp, old-locale, scientific, semigroups, stdenv, text
         , time, transformers
         }:
         mkDerivation {
           pname = "formatting";
           version = "6.3.7";
           sha256 = "0cdb4fc2c33612db08cd07926ac4fbea6b9f3c31955ed7d212ae04586f585c1a";
           libraryHaskellDepends = [
             array base bytestring clock ghc-prim integer-gmp old-locale
             scientific semigroups text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foundation" = callPackage
        ({ mkDerivation, base, basement, ghc-prim, stdenv }:
         mkDerivation {
           pname = "foundation";
           version = "0.0.25";
           sha256 = "c158550f8429be8614e832aa0b5018b29a4e5a8429118bdca5f6d7e74fe9d360";
           revision = "1";
           editedCabalFile = "1ps5sk50sf4b5hd87k3jqykqrwcw2wzyp50rcy6pghd61h83cjg2";
           libraryHaskellDepends = [ base basement ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-foundation/foundation";
           description = "Alternative prelude with batteries and no dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "free" = callPackage
        ({ mkDerivation, base, comonad, containers, distributive
         , exceptions, mtl, profunctors, semigroupoids, stdenv
         , template-haskell, transformers, transformers-base
         }:
         mkDerivation {
           pname = "free";
           version = "5.1.3";
           sha256 = "2c70d66e3a1ad52ce4b22d5510ffc6d7b3db950bd7f43bc61801cfe7b24c2e2d";
           libraryHaskellDepends = [
             base comonad containers distributive exceptions mtl profunctors
             semigroupoids template-haskell transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/free/";
           description = "Monads for free";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "free-vl" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "free-vl";
           version = "0.1.4";
           sha256 = "57f63ed35b42fc54fefb3cc183d0655e0d6c4a28d5371dba00fc9c9d3fa602bf";
           revision = "1";
           editedCabalFile = "1711k76b6w7gfqvc8z9jnylj4hhk3rvx7ap31y1mmq4g2a4s82qm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aaronlevin/free-vl";
           description = "van Laarhoven encoded Free Monad with Extensible Effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "freenect" = callPackage
        ({ mkDerivation, base, freenect, freenect_sync, libfreenect, stdenv
         , vector
         }:
         mkDerivation {
           pname = "freenect";
           version = "1.2.1";
           sha256 = "fca7aa958ec04396334b101679f8603850d7c6629770d5206d774e115cd70759";
           libraryHaskellDepends = [ base vector ];
           librarySystemDepends = [ freenect freenect_sync ];
           libraryPkgconfigDepends = [ libfreenect ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/freenect";
           description = "Interface to the Kinect device";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) freenect; inherit (pkgs) freenect_sync; 
inherit (pkgs) libfreenect;};
      "freer-simple" = callPackage
        ({ mkDerivation, base, natural-transformation, stdenv
         , template-haskell, transformers-base
         }:
         mkDerivation {
           pname = "freer-simple";
           version = "1.2.1.1";
           sha256 = "27cc3eaebef74268421c25d87c088003f7d8f175dd8b39818e66f62e4ecc0b6f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base natural-transformation template-haskell transformers-base
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lexi-lambda/freer-simple#readme";
           description = "Implementation of a friendly effect system for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "freetype2" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "freetype2";
           version = "0.1.2";
           sha256 = "517e80298890e903b03134d7840d3d1a517bfdad53127ed57c2fdd18cbfae302";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell binding for FreeType 2 library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "friendly-time" = callPackage
        ({ mkDerivation, base, old-locale, stdenv, time }:
         mkDerivation {
           pname = "friendly-time";
           version = "0.4.1";
           sha256 = "9af3443227c3f271f5d11ed8c3c15c77a59de3ab82d87d93ac1f8455a54393c8";
           revision = "1";
           editedCabalFile = "096nfaqxavi6xblqh4q5dxks824liz75b4rm2la2hlkkn5mhqdgs";
           libraryHaskellDepends = [ base old-locale time ];
           doHaddock = false;
           doCheck = false;
           description = "Print time information in friendly ways";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "frisby" = callPackage
        ({ mkDerivation, array, base, containers, mtl, semigroups, stdenv
         }:
         mkDerivation {
           pname = "frisby";
           version = "0.2.2";
           sha256 = "c1b318dbf54d56e1012955cc47a1633af5fd77facc128c725353718c0663b6d5";
           libraryHaskellDepends = [ array base containers mtl semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repetae.net/computer/frisby/";
           description = "Linear time composable parser for PEG grammars";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "from-sum" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "from-sum";
           version = "0.2.3.0";
           sha256 = "015582194287e21259db9c60b92d4c896a88e9f6e92356def001e15aa3f5bae5";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/from-sum";
           description = "Combinators for working with Maybe and Either";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "frontmatter" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv, yaml }:
         mkDerivation {
           pname = "frontmatter";
           version = "0.1.0.2";
           sha256 = "66eb97b0d5097397f0238b9af764a8c6ea2bb9a4a16cd1214051719fc313b99d";
           libraryHaskellDepends = [ attoparsec base bytestring yaml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-frontmatter";
           description = "Parses frontmatter as used in Jekyll markdown files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fsnotify" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, directory
         , filepath, hinotify, shelly, stdenv, text, time, unix, unix-compat
         }:
         mkDerivation {
           pname = "fsnotify";
           version = "0.3.0.1";
           sha256 = "ded2165f72a2b4971f941cb83ef7f58b200e3e04159be78da55ba6c5d35f6da5";
           revision = "1";
           editedCabalFile = "1pa9pa0kflkqlb4dysagy0aihn452hmf6wwlsr7fp4ygg86m7fsq";
           libraryHaskellDepends = [
             async base bytestring containers directory filepath hinotify shelly
             text time unix unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-fswatch/hfsnotify";
           description = "Cross platform library for file change notification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fsnotify-conduit" = callPackage
        ({ mkDerivation, base, conduit, directory, filepath, fsnotify
         , resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "fsnotify-conduit";
           version = "0.1.1.1";
           sha256 = "03990f311f7d66a6996b88722602b6058fbae7ad33e74073875ef0466ef001ce";
           libraryHaskellDepends = [
             base conduit directory filepath fsnotify resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/fsnotify-conduit#readme";
           description = "Get filesystem notifications as a stream of events";
           license = stdenv.lib.licenses.mit;
         }) {};
      "funcmp" = callPackage
        ({ mkDerivation, base, filepath, pretty, process, stdenv }:
         mkDerivation {
           pname = "funcmp";
           version = "1.9";
           sha256 = "08b2b982fc301af160ae5f2ab5d01e850b4ed177963fb19b4d4b2a28e7bdaab4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base filepath pretty process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/funcmp";
           description = "Functional MetaPost is a Haskell frontend to the MetaPost language";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "function-builder" = callPackage
        ({ mkDerivation, base, stdenv, tagged }:
         mkDerivation {
           pname = "function-builder";
           version = "0.3.0.1";
           sha256 = "932d61d4622f84effcb67def19531f0baab34aa3adaff0417a6840a580f5eedf";
           libraryHaskellDepends = [ base tagged ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/function-builder#readme";
           description = "Create poly variadic functions for monoidal results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "functor-classes-compat" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "functor-classes-compat";
           version = "1";
           sha256 = "ef11f94f44a74d6657ee61dcd2cfbc6d0889d233a2fb4caae6a29d9c59a1366f";
           revision = "6";
           editedCabalFile = "0r0h3hp182w9ndhr5lrvhzl1vyj2f3vvh32fpdnbxb8xkkhx55sa";
           configureFlags = [ "-fcontainers" ];
           libraryHaskellDepends = [
             base containers hashable unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/functor-classes-compat#readme";
           description = "Data.Functor.Classes instances for core packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "functor-combinators" = callPackage
        ({ mkDerivation, base, bifunctors, comonad, constraints, containers
         , deriving-compat, free, kan-extensions, mmorph, mtl
         , natural-transformation, nonempty-containers, pointed, profunctors
         , semigroupoids, stdenv, tagged, these, transformers
         , trivial-constraint, vinyl
         }:
         mkDerivation {
           pname = "functor-combinators";
           version = "0.1.1.1";
           sha256 = "0c249834f094c64d0cd2e657f666f65ece575fa50c11907e48f1af6629ee41af";
           libraryHaskellDepends = [
             base bifunctors comonad constraints containers deriving-compat free
             kan-extensions mmorph mtl natural-transformation
             nonempty-containers pointed profunctors semigroupoids tagged these
             transformers trivial-constraint vinyl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/functor-combinators#readme";
           description = "Tools for functor combinator-based program design";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fused-effects" = callPackage
        ({ mkDerivation, base, deepseq, MonadRandom, random, stdenv
         , transformers, unliftio-core
         }:
         mkDerivation {
           pname = "fused-effects";
           version = "0.5.0.1";
           sha256 = "c524b6bcb87792f6abfb8366e0021eb0b6d4a84eae1f49f1a761f0243a19de68";
           libraryHaskellDepends = [
             base deepseq MonadRandom random transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fused-effects/fused-effects";
           description = "A fast, flexible, fused effect system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fuzzcheck" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, QuickCheck
         , random, stdenv, transformers
         }:
         mkDerivation {
           pname = "fuzzcheck";
           version = "0.1.1";
           sha256 = "ecd664796e9cf5c608ca904897dd9ec18b471a86fcfb4216328382b28023d961";
           libraryHaskellDepends = [
             base lifted-base monad-control QuickCheck random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/fuzzcheck";
           description = "A simple checker for stress testing monadic code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fuzzy-dates" = callPackage
        ({ mkDerivation, base, hourglass, hspec, lens, parsec, stdenv }:
         mkDerivation {
           pname = "fuzzy-dates";
           version = "0.1.1.1";
           sha256 = "e33406933fbb45172f5ee9b10194397333effecc3ce5f1495521bc903faf56c1";
           libraryHaskellDepends = [ base hourglass hspec lens parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ReedOei/fuzzy-dates#readme";
           description = "Libary for parsing dates in strings in varied formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fuzzyset" = callPackage
        ({ mkDerivation, base, base-unicode-symbols, data-default, lens
         , stdenv, text, text-metrics, unordered-containers, vector
         }:
         mkDerivation {
           pname = "fuzzyset";
           version = "0.1.1";
           sha256 = "98e885b42b637bf38f6763691f19d786769707fae4b109fa043e38c2c6ed43e4";
           libraryHaskellDepends = [
             base base-unicode-symbols data-default lens text text-metrics
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/laserpants/fuzzyset-haskell";
           description = "Fuzzy set for approximate string matching";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "galois-field" = callPackage
        ({ mkDerivation, base, integer-gmp, MonadRandom, protolude, stdenv
         , tasty-quickcheck, wl-pprint-text
         }:
         mkDerivation {
           pname = "galois-field";
           version = "0.3.0";
           sha256 = "679f44c927db469c617e3f026c3defdb2126eb6b904c5c5bf7d74de3f2199630";
           libraryHaskellDepends = [
             base integer-gmp MonadRandom protolude tasty-quickcheck
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/galois-field#readme";
           description = "Galois field library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gauge" = callPackage
        ({ mkDerivation, base, basement, deepseq, directory, process
         , stdenv, vector
         }:
         mkDerivation {
           pname = "gauge";
           version = "0.2.5";
           sha256 = "d520fd677890c1bf2b1601331d003f976d85420811c3db4a72cff4d3bdb7f5a7";
           libraryHaskellDepends = [
             base basement deepseq directory process vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-gauge";
           description = "small framework for performance measurement and analysis";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "gc";
           version = "0.0.3";
           sha256 = "f0f2b7a1acd7a0dcb2b26bf3af056bf56bcbea21f9568c04bfad619e35031433";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/gc/";
           description = "Poor Richard's Memory Manager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gd" = callPackage
        ({ mkDerivation, base, bytestring, expat, fontconfig, freetype, gd
         , libjpeg, libpng, stdenv, zlib
         }:
         mkDerivation {
           pname = "gd";
           version = "3000.7.3";
           sha256 = "14aecb600d9a058b1905dfdef3d51a1eb11fb92f804fbaaa041103a0bfd97fb6";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [
             expat fontconfig freetype gd libjpeg libpng zlib
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Haskell binding to a subset of the GD graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) expat; inherit (pkgs) fontconfig; 
inherit (pkgs) freetype; inherit (pkgs) gd; 
inherit (pkgs) libjpeg; inherit (pkgs) libpng; inherit (pkgs) zlib;};
      "gdp" = callPackage
        ({ mkDerivation, base, lawful, stdenv }:
         mkDerivation {
           pname = "gdp";
           version = "0.0.3.0";
           sha256 = "a0f70f3eb52d0c666ef2c6a68130d1e8db21c545fc9a7cd3a839dd538a347d5e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base lawful ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matt-noonan/gdp#readme";
           description = "Reason about invariants and preconditions with ghosts of departed proofs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "general-games" = callPackage
        ({ mkDerivation, base, monad-loops, MonadRandom, random
         , random-shuffle, stdenv
         }:
         mkDerivation {
           pname = "general-games";
           version = "1.1.1";
           sha256 = "8b8e9e3546738b55a74589cf76ebe46c3a2f2fd346a853f9dbbf8bd0563350c0";
           libraryHaskellDepends = [
             base monad-loops MonadRandom random random-shuffle
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cgorski/general-games";
           description = "Library supporting simulation of a number of games";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generic-arbitrary" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "generic-arbitrary";
           version = "0.1.0";
           sha256 = "69f30a54e7a3d0a45288778e22e6d0d03cfc3b525dfe0a663cd4f559a619bcc6";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Generic implementation for QuickCheck's Arbitrary";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generic-data" = callPackage
        ({ mkDerivation, base, base-orphans, contravariant
         , show-combinators, stdenv
         }:
         mkDerivation {
           pname = "generic-data";
           version = "0.7.0.0";
           sha256 = "48c59d9c238596d764ab0391d3fce4dbbee64207460c902e7c771541fa47cd94";
           libraryHaskellDepends = [
             base base-orphans contravariant show-combinators
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/generic-data#readme";
           description = "Deriving instances with GHC.Generics and related utilities";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generic-data-surgery" = callPackage
        ({ mkDerivation, base, first-class-families, generic-data, stdenv
         }:
         mkDerivation {
           pname = "generic-data-surgery";
           version = "0.2.0.0";
           sha256 = "1a97b635e7d8dee9be41cd6ceac691583f63dfbb4127236a8aa7165661ebf60a";
           libraryHaskellDepends = [ base first-class-families generic-data ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/generic-data-surgery#readme";
           description = "Surgery for generic data types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generic-deriving" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell, th-abstraction
         }:
         mkDerivation {
           pname = "generic-deriving";
           version = "1.12.4";
           sha256 = "4401c13d38938338fb152bbc1049c5e1f880199afc2015421d5496811b4eaf6d";
           revision = "1";
           editedCabalFile = "16z0748pw4j28ib6vg5yzjm8wrarqkclr7l597q5zjxabjdn1ygj";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell th-abstraction
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dreixel/generic-deriving";
           description = "Generic programming library for generalised deriving";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-lens" = callPackage
        ({ mkDerivation, base, profunctors, stdenv, tagged }:
         mkDerivation {
           pname = "generic-lens";
           version = "1.1.0.0";
           sha256 = "ecf2946dbf7c84cb80febdd6c0574668ba7213644662cc1157f392f9767936bb";
           libraryHaskellDepends = [ base profunctors tagged ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kcsongor/generic-lens";
           description = "Generically derive traversals, lenses and prisms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-random" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "generic-random";
           version = "1.2.0.0";
           sha256 = "9b1e00d2f06b582695a34cfdb2d8b62b32f64152c6ed43f5c2d776e6e9aa148c";
           revision = "1";
           editedCabalFile = "1d0hx41r7yq2a86ydnfh2fv540ah8cz05l071s2z4wxcjw0ymyn4";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lysxia/generic-random";
           description = "Generic random generators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generics-eot" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "generics-eot";
           version = "0.4.0.1";
           sha256 = "9be6de962c003365752b6fcb181ca9f443b68223c69c728c7991f5408d86df68";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://generics-eot.readthedocs.io/";
           description = "A library for generic programming that aims to be easy to understand";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generics-mrsop" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, template-haskell }:
         mkDerivation {
           pname = "generics-mrsop";
           version = "2.1.0";
           sha256 = "cf664f63e2eaae7d5cd3e8852705206ca85c6ee311d8f1abfcd8199ff9e5dffa";
           libraryHaskellDepends = [ base containers mtl template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Generic Programming with Mutually Recursive Sums of Products";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generics-sop" = callPackage
        ({ mkDerivation, base, ghc-prim, sop-core, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "generics-sop";
           version = "0.4.0.1";
           sha256 = "dc99fa6c597b7ce256bdbdfc89fc615f26013e25256dd7e813f05b7845b61398";
           libraryHaskellDepends = [
             base ghc-prim sop-core template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generic Programming using True Sums of Products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generics-sop-lens" = callPackage
        ({ mkDerivation, base, generics-sop, lens, stdenv }:
         mkDerivation {
           pname = "generics-sop-lens";
           version = "0.2";
           sha256 = "4a30bcdf195082aa2ba6d6d4cd4d4d6378f49c09b522fad686fd0658beeda332";
           revision = "1";
           editedCabalFile = "1ghgh91wd764firxc2s083jzr38w51fg0ry2b7s1wn71mnvzb893";
           libraryHaskellDepends = [ base generics-sop lens ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/generics-sop-lens#readme";
           description = "Lenses for types in generics-sop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "genvalidity" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, validity }:
         mkDerivation {
           pname = "genvalidity";
           version = "0.8.0.0";
           sha256 = "2ac9a8a10321fd5c9ec3e52a9dda38451e25b7373acfc76c8bd57b0713566870";
           libraryHaskellDepends = [ base QuickCheck validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Testing utilities for the validity library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-aeson" = callPackage
        ({ mkDerivation, aeson, base, genvalidity, genvalidity-scientific
         , genvalidity-text, genvalidity-unordered-containers
         , genvalidity-vector, QuickCheck, stdenv, validity, validity-aeson
         }:
         mkDerivation {
           pname = "genvalidity-aeson";
           version = "0.3.0.0";
           sha256 = "5090c6fc63c1a059c98bf77f09df8578ecf9c9b43a63d0538e3f8ab1d33c1651";
           libraryHaskellDepends = [
             aeson base genvalidity genvalidity-scientific genvalidity-text
             genvalidity-unordered-containers genvalidity-vector QuickCheck
             validity validity-aeson
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, genvalidity, QuickCheck, stdenv
         , validity, validity-bytestring
         }:
         mkDerivation {
           pname = "genvalidity-bytestring";
           version = "0.5.0.0";
           sha256 = "aa828fed8bfb38bb7a621e51f3540c6a0597ac92073cc60e321338da129e8f51";
           libraryHaskellDepends = [
             base bytestring genvalidity QuickCheck validity validity-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for ByteString";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-containers" = callPackage
        ({ mkDerivation, base, containers, genvalidity, QuickCheck, stdenv
         , validity, validity-containers
         }:
         mkDerivation {
           pname = "genvalidity-containers";
           version = "0.6.0.0";
           sha256 = "3810e28fe21bf19623d4f5c8505d7ba46afcfb600ec63945e1e0de6d7c7588e2";
           libraryHaskellDepends = [
             base containers genvalidity QuickCheck validity validity-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec" = callPackage
        ({ mkDerivation, base, genvalidity, genvalidity-property, hspec
         , hspec-core, QuickCheck, stdenv, transformers, validity
         }:
         mkDerivation {
           pname = "genvalidity-hspec";
           version = "0.7.0.0";
           sha256 = "ef6909bb397e7ace6f74656dba3636281a216350c8a8de2cd3b7e2993bd3e032";
           libraryHaskellDepends = [
             base genvalidity genvalidity-property hspec hspec-core QuickCheck
             transformers validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard spec's for GenValidity instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-aeson" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, genvalidity
         , genvalidity-hspec, hspec, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "genvalidity-hspec-aeson";
           version = "0.3.1.0";
           sha256 = "2bcd3edb84fde5e6e72dd794352805e38cfa8814704ce4d95b018b2834ae362a";
           libraryHaskellDepends = [
             aeson base bytestring deepseq genvalidity genvalidity-hspec hspec
             QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://cs-syd.eu";
           description = "Standard spec's for aeson-related instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-binary" = callPackage
        ({ mkDerivation, base, binary, deepseq, genvalidity
         , genvalidity-hspec, hspec, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "genvalidity-hspec-binary";
           version = "0.2.0.3";
           sha256 = "b99ba22694a36af01f6617463a38a35f305e55c46c52ee727302f2e1585ea9aa";
           libraryHaskellDepends = [
             base binary deepseq genvalidity genvalidity-hspec hspec QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard spec's for binary-related Instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-cereal" = callPackage
        ({ mkDerivation, base, cereal, deepseq, genvalidity
         , genvalidity-hspec, hspec, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "genvalidity-hspec-cereal";
           version = "0.2.0.3";
           sha256 = "947ec34b6befa40f12eb16ad1d37aba97c5daf91efcbb25c564e8ae2ac887185";
           libraryHaskellDepends = [
             base cereal deepseq genvalidity genvalidity-hspec hspec QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://cs-syd.eu";
           description = "Standard spec's for cereal-related instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-hashable" = callPackage
        ({ mkDerivation, base, genvalidity, genvalidity-hspec
         , genvalidity-property, hashable, hspec, QuickCheck, stdenv
         , validity
         }:
         mkDerivation {
           pname = "genvalidity-hspec-hashable";
           version = "0.2.0.4";
           sha256 = "36f8df481831d05752148ff7558651ff976432f2fab5b8dc9aa4485d1909cdef";
           libraryHaskellDepends = [
             base genvalidity genvalidity-hspec genvalidity-property hashable
             hspec QuickCheck validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard spec's for Hashable instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-optics" = callPackage
        ({ mkDerivation, base, genvalidity, genvalidity-hspec, hspec
         , microlens, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "genvalidity-hspec-optics";
           version = "0.1.1.1";
           sha256 = "0a92cb7d1f98dc17634434f715473cc19596864146eee6256eaf86576c943788";
           libraryHaskellDepends = [
             base genvalidity genvalidity-hspec hspec microlens QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://cs-syd.eu";
           description = "Standard spec's for optics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-path" = callPackage
        ({ mkDerivation, base, genvalidity, path, QuickCheck, stdenv
         , validity-path
         }:
         mkDerivation {
           pname = "genvalidity-path";
           version = "0.3.0.3";
           sha256 = "84a4110d2d545a93ee6f1cfbcded1ef02c10791bd52ca3d3df4df672f2847483";
           libraryHaskellDepends = [
             base genvalidity path QuickCheck validity-path
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for Path";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-property" = callPackage
        ({ mkDerivation, base, genvalidity, hspec, QuickCheck, stdenv
         , validity
         }:
         mkDerivation {
           pname = "genvalidity-property";
           version = "0.4.0.0";
           sha256 = "49077837b40bbb8cbd2f45b731db1859db0ff186bccf9d49e14608613af35e7d";
           libraryHaskellDepends = [
             base genvalidity hspec QuickCheck validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard properties for functions on `Validity` types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-scientific" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, scientific, stdenv
         , validity, validity-scientific
         }:
         mkDerivation {
           pname = "genvalidity-scientific";
           version = "0.2.1.0";
           sha256 = "af11d48c53455eb250e68c6cb4f6e8159ddc16fb635879fc2973d57d8bd5903d";
           libraryHaskellDepends = [
             base genvalidity QuickCheck scientific validity validity-scientific
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for Scientific";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-text" = callPackage
        ({ mkDerivation, array, base, genvalidity, QuickCheck, stdenv, text
         , validity, validity-text
         }:
         mkDerivation {
           pname = "genvalidity-text";
           version = "0.6.0.0";
           sha256 = "4a8a0f3ab2616d6ef3d319b3114ee8549e2194a6d92a4be69e646ee16a25c804";
           libraryHaskellDepends = [
             array base genvalidity QuickCheck text validity validity-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for Text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-time" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, stdenv, time
         , validity-time
         }:
         mkDerivation {
           pname = "genvalidity-time";
           version = "0.2.1.1";
           sha256 = "c555c206edddbd70355b295ccf9ff053463c137735c4aebcc340091f6d6b7874";
           libraryHaskellDepends = [
             base genvalidity QuickCheck time validity-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-unordered-containers" = callPackage
        ({ mkDerivation, base, genvalidity, hashable, QuickCheck, stdenv
         , unordered-containers, validity, validity-unordered-containers
         }:
         mkDerivation {
           pname = "genvalidity-unordered-containers";
           version = "0.3.0.0";
           sha256 = "30a7b8e14e7f0e97d7881929e2a508fa2bafd8c6f850c069437117a456259636";
           libraryHaskellDepends = [
             base genvalidity hashable QuickCheck unordered-containers validity
             validity-unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for unordered-containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-uuid" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, stdenv, uuid
         , validity, validity-uuid
         }:
         mkDerivation {
           pname = "genvalidity-uuid";
           version = "0.1.0.2";
           sha256 = "d1354bdfc0a75a1f228cfed22cd0edb0cc13a925e4b2514a634d56eb5b53f412";
           libraryHaskellDepends = [
             base genvalidity QuickCheck uuid validity validity-uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for UUID";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-vector" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, stdenv, validity
         , validity-vector, vector
         }:
         mkDerivation {
           pname = "genvalidity-vector";
           version = "0.3.0.0";
           sha256 = "70f06305a7b90708287285c2e6cfb7d1ef27499287952d946f1918071d531b87";
           libraryHaskellDepends = [
             base genvalidity QuickCheck validity validity-vector vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for vector";
           license = stdenv.lib.licenses.mit;
         }) {};
      "geojson" = callPackage
        ({ mkDerivation, aeson, base, containers, deepseq, lens, scientific
         , semigroups, stdenv, text, transformers, validation, vector
         }:
         mkDerivation {
           pname = "geojson";
           version = "4.0.1";
           sha256 = "32fb795e89d8bb5cf4baecd4dff09019961e70aa8fe2eb60ef9e847c8a341380";
           libraryHaskellDepends = [
             aeson base containers deepseq lens scientific semigroups text
             transformers validation vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/indicatrix/hs-geojson";
           description = "A thin GeoJSON Layer above the aeson library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "getopt-generics" = callPackage
        ({ mkDerivation, base, base-compat, base-orphans, generics-sop
         , stdenv, tagged
         }:
         mkDerivation {
           pname = "getopt-generics";
           version = "0.13.0.4";
           sha256 = "f9458ffc13a8767ca8026a2c9dfc294ce2b5ca94148d5286e368bc1c2c9b5fe7";
           libraryHaskellDepends = [
             base base-compat base-orphans generics-sop tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/getopt-generics#readme";
           description = "Create command line interfaces with ease";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-compact" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "ghc-compact";
           version = "0.1.0.0";
           sha256 = "50bc40e5e5b3a17b267250136af0c04027a9d9eb699e9fee8a5a321bae424e0f";
           revision = "3";
           editedCabalFile = "09l51r0nk7vj6a9crz7q5sv4962mnq18xb6zkxfl6cnm28v85nsk";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "In memory storage of deeply evaluated data structure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-core" = callPackage
        ({ mkDerivation, base, colorize-haskell, directory, filepath
         , pcre-light, process, stdenv
         }:
         mkDerivation {
           pname = "ghc-core";
           version = "0.5.6";
           sha256 = "ec34f3e5892be7c2b52945875cd330397eca3904ae1d9574559855817b8b7e85";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base colorize-haskell directory filepath pcre-light process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/shachaf/ghc-core";
           description = "Display GHC's core and assembly output in a pager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-exactprint" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , free, ghc, ghc-boot, ghc-paths, mtl, stdenv, syb
         }:
         mkDerivation {
           pname = "ghc-exactprint";
           version = "0.6.1";
           sha256 = "146e5beb3ef23ae761126eb34abd31dfe73f0ec0c8bbfbe050a7b0142bbed88a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory filepath free ghc ghc-boot
             ghc-paths mtl syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "ExactPrint for GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-lib" = callPackage
        ({ mkDerivation, alex, array, base, binary, bytestring, containers
         , deepseq, directory, filepath, ghc-lib-parser, ghc-prim, happy
         , haskeline, hpc, pretty, process, stdenv, time, transformers, unix
         }:
         mkDerivation {
           pname = "ghc-lib";
           version = "8.8.0.20190424";
           sha256 = "959bf09429f267a97c5acb21c535bdea2a689999c6d63125613dd6a598cac10d";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             ghc-lib-parser ghc-prim hpc pretty process time transformers unix
           ];
           libraryToolDepends = [ alex happy ];
           executableHaskellDepends = [
             array base bytestring containers deepseq directory filepath
             ghc-prim haskeline process time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/digital-asset/ghc-lib";
           description = "The GHC API, decoupled from GHC versions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-lib-parser" = callPackage
        ({ mkDerivation, alex, array, base, binary, bytestring, containers
         , deepseq, directory, filepath, ghc-prim, happy, hpc, pretty
         , process, stdenv, time, transformers, unix
         }:
         mkDerivation {
           pname = "ghc-lib-parser";
           version = "8.8.0.20190424";
           sha256 = "206c2e90f9f60aee3c39f392c37d3346d12062dd2a53bebc5e23e44b5282fa89";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             ghc-prim hpc pretty process time transformers unix
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/digital-asset/ghc-lib";
           description = "The GHC API, decoupled from GHC versions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-parser" = callPackage
        ({ mkDerivation, base, cpphs, ghc, happy, stdenv }:
         mkDerivation {
           pname = "ghc-parser";
           version = "0.2.1.0";
           sha256 = "a9f17e5cb24131f7ce8df3fbdfb9b11e1dde5a469b0a1e05f34f25a4ffc8cf7c";
           libraryHaskellDepends = [ base ghc ];
           libraryToolDepends = [ cpphs happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gibiansky/IHaskell";
           description = "Haskell source parser from GHC";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghc-paths" = callPackage
        ({ mkDerivation, base, Cabal, directory, stdenv }:
         mkDerivation {
           pname = "ghc-paths";
           version = "0.1.0.12";
           sha256 = "6ecbe676d073cb07989c61ce4c5709c4e67cbefdd2d55a4095f9388b6fe2c484";
           revision = "1";
           editedCabalFile = "1gb4hn87a78j1c2y1adi81y03irzkaxywscjkphfajsxc7f0ydw5";
           setupHaskellDepends = [ base Cabal directory ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Knowledge of GHC's installation directories";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-prof" = callPackage
        ({ mkDerivation, attoparsec, base, containers, scientific, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "ghc-prof";
           version = "1.4.1.6";
           sha256 = "24a8929d6b3342484e7159997498136c6262454a2b225b3d57fbdd4e8899d7e7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base containers scientific text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/ghc-prof";
           description = "Library for parsing GHC time and allocation profiling reports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-syntax-highlighter" = callPackage
        ({ mkDerivation, base, ghc, ghc-boot, stdenv, text }:
         mkDerivation {
           pname = "ghc-syntax-highlighter";
           version = "0.0.4.1";
           sha256 = "4f6e6ac0c3f127ad3c57ee68d430d5afd9348eb308783d6a304119abc5779a3e";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ghc ghc-boot text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/ghc-syntax-highlighter";
           description = "Syntax highlighter for Haskell using lexer of GHC itself";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-tcplugins-extra" = callPackage
        ({ mkDerivation, base, ghc, stdenv }:
         mkDerivation {
           pname = "ghc-tcplugins-extra";
           version = "0.3.2";
           sha256 = "75685cfdaabadf66f590e2d7408aafa5fc495c7fcd01b69bcc76440f97e4108f";
           libraryHaskellDepends = [ base ghc ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
           description = "Utilities for writing GHC type-checker plugins";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-extra" = callPackage
        ({ mkDerivation, base, containers, ghc, ghc-prim
         , ghc-tcplugins-extra, ghc-typelits-knownnat
         , ghc-typelits-natnormalise, integer-gmp, stdenv, transformers
         }:
         mkDerivation {
           pname = "ghc-typelits-extra";
           version = "0.3.2";
           sha256 = "1be290e6fa67c0c83af1fe54e57b9f7264cd57d67923e9396dc01c42e31b8b6b";
           libraryHaskellDepends = [
             base containers ghc ghc-prim ghc-tcplugins-extra
             ghc-typelits-knownnat ghc-typelits-natnormalise integer-gmp
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "Additional type-level operations on GHC.TypeLits.Nat";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-knownnat" = callPackage
        ({ mkDerivation, base, ghc, ghc-tcplugins-extra
         , ghc-typelits-natnormalise, stdenv, template-haskell, transformers
         }:
         mkDerivation {
           pname = "ghc-typelits-knownnat";
           version = "0.6";
           sha256 = "4b529b27b226cc3df47d95cb8f0a145ed0c25486dec4f99be8dcd700ddc7f237";
           libraryHaskellDepends = [
             base ghc ghc-tcplugins-extra ghc-typelits-natnormalise
             template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://clash-lang.org/";
           description = "Derive KnownNat constraints from other KnownNat constraints";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-natnormalise" = callPackage
        ({ mkDerivation, base, ghc, ghc-tcplugins-extra, integer-gmp
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "ghc-typelits-natnormalise";
           version = "0.6.2";
           sha256 = "801ceb41442dfa992fad04c64f2989d1d701bcfe0874a55aa8d250e63c1a4311";
           libraryHaskellDepends = [
             base ghc ghc-tcplugins-extra integer-gmp transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghci-hexcalc" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "ghci-hexcalc";
           version = "0.1.1.0";
           sha256 = "701ee465d6f1d4b815782954fb68bd058b257b38773b07e89f2ee01c38ea53ce";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/takenobu-hs/ghci-hexcalc";
           description = "GHCi as a Hex Calculator interactive";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghcid" = callPackage
        ({ mkDerivation, ansi-terminal, base, cmdargs, containers
         , directory, extra, filepath, fsnotify, process, stdenv
         , terminal-size, time, unix
         }:
         mkDerivation {
           pname = "ghcid";
           version = "0.7.7";
           sha256 = "6a5068c1edfff34b36de14fbe2be8d67c6960010979d276aea561a17743432e3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base cmdargs directory extra filepath process time
           ];
           executableHaskellDepends = [
             ansi-terminal base cmdargs containers directory extra filepath
             fsnotify process terminal-size time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/ghcid#readme";
           description = "GHCi based bare bones IDE";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghcjs-codemirror" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ghcjs-codemirror";
           version = "0.0.0.2";
           sha256 = "6cbb2c649f6d4a874eb7486a2dd33db2ed0f138f1f8289a6447460d39b4b2097";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ghcjs/CodeMirror";
           description = "Installs CodeMirror JavaScript files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghost-buster" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ghost-buster";
           version = "0.1.1.0";
           sha256 = "02d0930ee77838e7f5a04ebc0a74f62b15218b8ace4a5b88510d9a6b56dbf6d6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lazersmoke/ghost-buster#readme";
           description = "Existential type utilites";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gi-atk" = callPackage
        ({ mkDerivation, atk, base, bytestring, Cabal, containers, gi-glib
         , gi-gobject, haskell-gi, haskell-gi-base, haskell-gi-overloading
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-atk";
           version = "2.0.21";
           sha256 = "539f1d2f57eb947166b6608a5b7ef2cdd51ca92549a594ffcb4beb4205faec5a";
           setupHaskellDepends = [ base Cabal gi-glib gi-gobject haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ atk ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Atk bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) atk;};
      "gi-cairo" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cairo, containers
         , haskell-gi, haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-cairo";
           version = "1.0.23";
           sha256 = "d022c96f87f22658dfa33fe1299597047f13dd7e387e149cc4c5fd6b284d87f8";
           setupHaskellDepends = [ base Cabal haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ cairo ];
           doHaddock = false;
           doCheck = false;
           preCompileBuildDriver = ''
             PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
             setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
           '';
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Cairo bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) cairo;};
      "gi-gdk" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-cairo
         , gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject, gi-pango, gtk3
         , haskell-gi, haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-gdk";
           version = "3.0.22";
           sha256 = "f9d180574e0ab161d58202dc270a230001a7d84414dd5f10c3c58631679cd828";
           setupHaskellDepends = [
             base Cabal gi-cairo gi-gdkpixbuf gi-gio gi-glib gi-gobject gi-pango
             haskell-gi
           ];
           libraryHaskellDepends = [
             base bytestring containers gi-cairo gi-gdkpixbuf gi-gio gi-glib
             gi-gobject gi-pango haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ gtk3 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Gdk bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) gtk3;};
      "gi-gdkpixbuf" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gdk_pixbuf
         , gi-gio, gi-glib, gi-gobject, haskell-gi, haskell-gi-base
         , haskell-gi-overloading, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gdkpixbuf";
           version = "2.0.23";
           sha256 = "d72a32e6dba9943a38a1a76012dc7c7dc1f7a31b69061dc7a143d3d570cff04a";
           setupHaskellDepends = [
             base Cabal gi-gio gi-glib gi-gobject haskell-gi
           ];
           libraryHaskellDepends = [
             base bytestring containers gi-gio gi-glib gi-gobject haskell-gi
             haskell-gi-base haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ gdk_pixbuf ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GdkPixbuf bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) gdk_pixbuf;};
      "gi-gio" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-glib
         , gi-gobject, glib, haskell-gi, haskell-gi-base
         , haskell-gi-overloading, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gio";
           version = "2.0.25";
           sha256 = "dfe2428664f1a050c94c96bb382c1d147bdef1fea000e7b960c9a83280a68270";
           setupHaskellDepends = [ base Cabal gi-glib gi-gobject haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Gio bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-glib" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, glib
         , haskell-gi, haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-glib";
           version = "2.0.23";
           sha256 = "fd8c6b67461896397b390d427607ed2d90840e166b46de2a8aa8488a4ae951f3";
           setupHaskellDepends = [ base Cabal haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GLib bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-gobject" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-glib, glib
         , haskell-gi, haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-gobject";
           version = "2.0.22";
           sha256 = "e69da869c38f6b0f7210ec5f2f4706ee0c55340e5ab45e7cf1b48d7480513130";
           setupHaskellDepends = [ base Cabal gi-glib haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers gi-glib haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GObject bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-gtk" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-atk
         , gi-cairo, gi-gdk, gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject
         , gi-pango, gtk3, haskell-gi, haskell-gi-base
         , haskell-gi-overloading, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gtk";
           version = "3.0.32";
           sha256 = "14d5723b39a9c6f0f8048fed6c9e400b8a13d59e7a19df860bdae758314d3b36";
           setupHaskellDepends = [
             base Cabal gi-atk gi-cairo gi-gdk gi-gdkpixbuf gi-gio gi-glib
             gi-gobject gi-pango haskell-gi
           ];
           libraryHaskellDepends = [
             base bytestring containers gi-atk gi-cairo gi-gdk gi-gdkpixbuf
             gi-gio gi-glib gi-gobject gi-pango haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ gtk3 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Gtk bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) gtk3;};
      "gi-gtk-hs" = callPackage
        ({ mkDerivation, base, base-compat, containers, gi-gdk
         , gi-gdkpixbuf, gi-glib, gi-gobject, gi-gtk, haskell-gi-base, mtl
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gtk-hs";
           version = "0.3.8.0";
           sha256 = "b4c4fc2936a24be471243460f4b3359096ddc989d84018566ff14a47049efe32";
           libraryHaskellDepends = [
             base base-compat containers gi-gdk gi-gdkpixbuf gi-glib gi-gobject
             gi-gtk haskell-gi-base mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/gi-gtk-hs";
           description = "A wrapper for gi-gtk, adding a few more idiomatic API parts on top";
           license = stdenv.lib.licenses.lgpl21;
         }) {};
      "gi-gtksource" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-atk
         , gi-cairo, gi-gdk, gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject
         , gi-gtk, gi-pango, gtksourceview3, haskell-gi, haskell-gi-base
         , haskell-gi-overloading, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gtksource";
           version = "3.0.22";
           sha256 = "50328370c24e7b01b71d93b7ddbc204d3bf447e7739ed1afea25fbd7a4736321";
           setupHaskellDepends = [
             base Cabal gi-atk gi-cairo gi-gdk gi-gdkpixbuf gi-gio gi-glib
             gi-gobject gi-gtk gi-pango haskell-gi
           ];
           libraryHaskellDepends = [
             base bytestring containers gi-atk gi-cairo gi-gdk gi-gdkpixbuf
             gi-gio gi-glib gi-gobject gi-gtk gi-pango haskell-gi
             haskell-gi-base haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ gtksourceview3 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GtkSource bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) gtksourceview3;};
      "gi-javascriptcore" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-glib
         , gi-gobject, haskell-gi, haskell-gi-base, haskell-gi-overloading
         , stdenv, text, transformers, webkitgtk
         }:
         mkDerivation {
           pname = "gi-javascriptcore";
           version = "4.0.21";
           sha256 = "047053e7ae936754709a25d6124238066b733dd927aa66214e3962edada2827e";
           setupHaskellDepends = [ base Cabal gi-glib gi-gobject haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ webkitgtk ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "JavaScriptCore bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) webkitgtk;};
      "gi-pango" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cairo, containers
         , gi-glib, gi-gobject, haskell-gi, haskell-gi-base
         , haskell-gi-overloading, pango, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-pango";
           version = "1.0.22";
           sha256 = "c27914a7dbfebe6e8a04280382b16e093df1bcefdc30b889b89e9da8f808bf25";
           setupHaskellDepends = [ base Cabal gi-glib gi-gobject haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ cairo pango ];
           doHaddock = false;
           doCheck = false;
           preCompileBuildDriver = ''
             PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
             setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
           '';
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Pango bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) cairo; inherit (pkgs) pango;};
      "gi-vte" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-atk
         , gi-gdk, gi-gio, gi-glib, gi-gobject, gi-gtk, gi-pango, haskell-gi
         , haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers, vte_291
         }:
         mkDerivation {
           pname = "gi-vte";
           version = "2.91.25";
           sha256 = "6c48a4a082df589f5d52f6dfa55490fcb094babb4263a70dbeef9fdcd6c2d340";
           setupHaskellDepends = [
             base Cabal gi-atk gi-gdk gi-gio gi-glib gi-gobject gi-gtk gi-pango
             haskell-gi
           ];
           libraryHaskellDepends = [
             base bytestring containers gi-atk gi-gdk gi-gio gi-glib gi-gobject
             gi-gtk gi-pango haskell-gi haskell-gi-base haskell-gi-overloading
             text transformers
           ];
           libraryPkgconfigDepends = [ vte_291 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Vte bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {vte_291 = pkgs.vte;};
      "ginger" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring
         , data-default, filepath, http-types, mtl, optparse-applicative
         , parsec, process, regex-tdfa, safe, scientific, stdenv, text, time
         , transformers, unordered-containers, utf8-string, vector, yaml
         }:
         mkDerivation {
           pname = "ginger";
           version = "0.9.1.0";
           sha256 = "1f93716bab208d50070186440162c28059eae3ab80222150848479dee7c29a62";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring data-default filepath http-types
             mtl parsec regex-tdfa safe scientific text time transformers
             unordered-containers utf8-string vector
           ];
           executableHaskellDepends = [
             aeson base bytestring data-default optparse-applicative process
             text transformers unordered-containers utf8-string yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://ginger.tobiasdammers.nl/";
           description = "An implementation of the Jinja2 template language in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gingersnap" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, http-types
         , postgresql-simple, resource-pool, snap-core, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "gingersnap";
           version = "0.3.1.0";
           sha256 = "01509dbfc31e865128d2ef13efc56502f9a716f7b30f0890a0616612aed08c82";
           libraryHaskellDepends = [
             aeson base bytestring deepseq http-types postgresql-simple
             resource-pool snap-core text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Consistent and safe JSON APIs with snap-core and (by default) postgresql-simple";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "githash" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, process
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "githash";
           version = "0.1.3.3";
           sha256 = "598231964e161440335b1ba4d31d4b8195e0b78d834d3bbaf4be86faadd0b0a7";
           libraryHaskellDepends = [
             base bytestring directory filepath process template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/githash#readme";
           description = "Compile git revision info into Haskell projects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "github-release" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, http-types, mime-types, optparse-generic, stdenv
         , text, unordered-containers, uri-templater
         }:
         mkDerivation {
           pname = "github-release";
           version = "1.2.5";
           sha256 = "d9c9e315f34cde7e313555acf7f2706b7e39f5f327d51788b2bec52e35c295c6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-types
             mime-types optparse-generic text unordered-containers uri-templater
           ];
           executableHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-types
             mime-types optparse-generic text unordered-containers uri-templater
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/github-release#readme";
           description = "Upload files to GitHub releases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "github-types" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text, time }:
         mkDerivation {
           pname = "github-types";
           version = "0.2.1";
           sha256 = "cce4ea461b3ea7c92d130181244cfe7f29c10aecc7e7a980ee6722b6d6af7867";
           libraryHaskellDepends = [ aeson base text time ];
           doHaddock = false;
           doCheck = false;
           description = "Type definitions for objects used by the GitHub v3 API";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "github-webhooks" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , cryptonite, deepseq, deepseq-generics, memory, stdenv, text, time
         , vector
         }:
         mkDerivation {
           pname = "github-webhooks";
           version = "0.10.1";
           sha256 = "ddc410e81a607b1b758d5e0e94ba707bb85631b184fd50120507c2be9f2f54c2";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring cryptonite deepseq
             deepseq-generics memory text time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/onrock-eng/github-webhooks#readme";
           description = "Aeson instances for GitHub Webhook payloads";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitrev" = callPackage
        ({ mkDerivation, base, base-compat, directory, filepath, process
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "gitrev";
           version = "1.3.1";
           sha256 = "a89964db24f56727b0e7b10c98fe7c116d721d8c46f52d6e77088669aaa38332";
           libraryHaskellDepends = [
             base base-compat directory filepath process template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/gitrev";
           description = "Compile git revision info into Haskell projects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gl" = callPackage
        ({ mkDerivation, base, containers, fixed, half, libGL, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "gl";
           version = "0.9";
           sha256 = "318ef0aab5239d5253c387709dd935c43a0d614f9bb1e186db4a7a96d88b61cd";
           revision = "1";
           editedCabalFile = "19qyb9m2fy9qyirmhhayg51scas42n3i2rx7jcw6v3ra8c8r9rwr";
           libraryHaskellDepends = [
             base containers fixed half transformers
           ];
           librarySystemDepends = [ libGL ];
           doHaddock = false;
           doCheck = false;
           description = "Complete OpenGL raw bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL;};
      "glabrous" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
         , cereal, cereal-text, either, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "glabrous";
           version = "2.0.1";
           sha256 = "9c738bc148407b74c94947e3fa6c739b03669b3dd0f33829617df29efd390719";
           libraryHaskellDepends = [
             aeson aeson-pretty attoparsec base bytestring cereal cereal-text
             either text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/glabrous";
           description = "A template DSL library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "glaze" = callPackage
        ({ mkDerivation, base, lens, stdenv }:
         mkDerivation {
           pname = "glaze";
           version = "0.3.0.1";
           sha256 = "bbb184408bcf24e8c4f89a960cf7a69ab0c51e98bf84c5fa9901aae1702e22a1";
           libraryHaskellDepends = [ base lens ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/glaze#readme";
           description = "Framework for rendering things with metadata/headers and values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "glazier" = callPackage
        ({ mkDerivation, alternators, base, data-diverse, data-diverse-lens
         , dlist, lens, mtl, stdenv, transformers, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "glazier";
           version = "1.0.0.0";
           sha256 = "e9c56250e48b99bfe6280c58d1458c5d35203bf3676705355a4d0bd89c7b71a4";
           libraryHaskellDepends = [
             alternators base data-diverse data-diverse-lens dlist lens mtl
             transformers unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/glazier#readme";
           description = "Extensible effects using ContT, State and variants";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gloss" = callPackage
        ({ mkDerivation, base, bmp, bytestring, containers, ghc-prim
         , gloss-rendering, GLUT, OpenGL, stdenv
         }:
         mkDerivation {
           pname = "gloss";
           version = "1.13.1.1";
           sha256 = "9a5a797d2c664e0eea7066adcec1a841a4eb3d08688827f2f5ae2fb745e3b2ae";
           revision = "1";
           editedCabalFile = "1bcjm3issssqxd60jd2y6032y8plcs0sm3wbnha1f6fa3z46z9n0";
           libraryHaskellDepends = [
             base bmp bytestring containers ghc-prim gloss-rendering GLUT OpenGL
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://gloss.ouroborus.net";
           description = "Painless 2D vector graphics, animations and simulations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gloss-algorithms" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, gloss, stdenv }:
         mkDerivation {
           pname = "gloss-algorithms";
           version = "1.13.0.1";
           sha256 = "25391db76e21e70c912d818a5f28f1b647a801034b3960540264b1e8b766786d";
           revision = "1";
           editedCabalFile = "140zmk3br0nn98mjc6ri36nk8yl93n4v69zybzv2vc41yxgvnac5";
           libraryHaskellDepends = [ base containers ghc-prim gloss ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://gloss.ouroborus.net";
           description = "Data structures and algorithms for working with 2D graphics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gloss-examples" = callPackage
        ({ mkDerivation, base, bmp, bytestring, containers, ghc-prim, gloss
         , gloss-algorithms, gloss-raster, random, repa, repa-algorithms
         , repa-io, stdenv, vector
         }:
         mkDerivation {
           pname = "gloss-examples";
           version = "1.13.0.2";
           sha256 = "ab216c95cf26879154db0d7ee36def7a2d9b2cd6aaae4278e2b55621a51c54bc";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bmp bytestring containers ghc-prim gloss gloss-algorithms
             gloss-raster random repa repa-algorithms repa-io vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://gloss.ouroborus.net";
           description = "Examples using the gloss library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gloss-raster" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, gloss, gloss-rendering
         , repa, stdenv
         }:
         mkDerivation {
           pname = "gloss-raster";
           version = "1.13.1.1";
           sha256 = "69bda680168221dfbdb7f252307d8380b428523266de9efad0345612b70a2ba5";
           libraryHaskellDepends = [
             base containers ghc-prim gloss gloss-rendering repa
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://gloss.ouroborus.net";
           description = "Parallel rendering of raster images";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gloss-rendering" = callPackage
        ({ mkDerivation, base, bmp, bytestring, containers, GLUT, OpenGL
         , stdenv
         }:
         mkDerivation {
           pname = "gloss-rendering";
           version = "1.13.1.1";
           sha256 = "3db5001edf345ac2232d012d6f57df031674509fca18383e43ca37f7ffa97fde";
           revision = "1";
           editedCabalFile = "10x83cpxp6yrmamjg4kjm3pzlhh6zj2rdw686py0vcx0jrjy3qg7";
           libraryHaskellDepends = [
             base bmp bytestring containers GLUT OpenGL
           ];
           doHaddock = false;
           doCheck = false;
           description = "Gloss picture data types and rendering functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gnuplot" = callPackage
        ({ mkDerivation, array, base, containers, data-accessor
         , data-accessor-transformers, deepseq, filepath, process
         , semigroups, stdenv, temporary, time, transformers, utility-ht
         }:
         mkDerivation {
           pname = "gnuplot";
           version = "0.5.6.1";
           sha256 = "cb32149b2ad92c134094f2f79ee0cee88e4de995a6e4729347597a6d2949d8e5";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base containers data-accessor data-accessor-transformers
             deepseq filepath process semigroups temporary time transformers
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Gnuplot";
           description = "2D and 3D plots using gnuplot";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "google-isbn" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , http-conduit, stdenv, text
         }:
         mkDerivation {
           pname = "google-isbn";
           version = "1.0.3";
           sha256 = "3a4df734785c46d381cff3cb44a553b0f9d5ffb051279367a193d64928c2322f";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra http-conduit text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/apeyroux/google-isbn#readme";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "google-oauth2-jwt" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, HsOpenSSL
         , RSA, stdenv, text, unix-time
         }:
         mkDerivation {
           pname = "google-oauth2-jwt";
           version = "0.3.2";
           sha256 = "da1441eaafdda770d43bc62c4bef12f0f2682f490ca308596ea698758d4c4bda";
           libraryHaskellDepends = [
             base base64-bytestring bytestring HsOpenSSL RSA text unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/google-oauth2-jwt";
           description = "Get a signed JWT for Google Service Accounts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gpolyline" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "gpolyline";
           version = "0.1.0.1";
           sha256 = "28b3a644853ba6f0a7d6465d8d62646a10c995008a799ae67e728c8cf4a17a05";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fegu/gpolyline";
           description = "Pure module for encoding/decoding Google Polyline";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graph-core" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, mtl, safe
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "graph-core";
           version = "0.3.0.0";
           sha256 = "378f0baa40ebbb78e8c389f79e363eb573cdf182f799684d2f3d6ac51b10e854";
           libraryHaskellDepends = [
             base containers deepseq hashable mtl safe unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/factisresearch/graph-core";
           description = "Fast, memory efficient and persistent graph implementation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "graph-wrapper" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "graph-wrapper";
           version = "0.2.6.0";
           sha256 = "b89ed6f47a6d44b9466d090eabddc9d9ec4b2d7e4b52a61b26d0cf19dac95ba6";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/graph-wrapper";
           description = "A wrapper around the standard Data.Graph with a less awkward interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graphite" = callPackage
        ({ mkDerivation, base, bytestring, cassava, containers, deepseq
         , graphviz, hashable, process, QuickCheck, random, semigroups
         , stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "graphite";
           version = "0.10.0.1";
           sha256 = "7a8366a9113c5071f5c4863a6bf10462c4274281f5523fc80f2e5539de6d0aab";
           libraryHaskellDepends = [
             base bytestring cassava containers deepseq graphviz hashable
             process QuickCheck random semigroups text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alx741/graphite#readme";
           description = "Graphs and networks library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graphs" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers
         , transformers-compat, void
         }:
         mkDerivation {
           pname = "graphs";
           version = "0.7.1";
           sha256 = "acd37a7ba5dd02f24131ac8971a5f8639cc0e9db687e7d6790a84af4af0ce209";
           revision = "1";
           editedCabalFile = "1cjyxswlkachki6l4mcaffwpjajyx86jzipzlqjg7c080vwvb19g";
           libraryHaskellDepends = [
             array base containers transformers transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/graphs";
           description = "A simple monadic graph library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graphviz" = callPackage
        ({ mkDerivation, base, bytestring, colour, containers, directory
         , dlist, fgl, filepath, mtl, polyparse, process, stdenv, temporary
         , text, wl-pprint-text
         }:
         mkDerivation {
           pname = "graphviz";
           version = "2999.20.0.4";
           sha256 = "b90f84c3fa3538bd8594d91a1580531940ea732c32b7fdae150edc5c9436ee10";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring colour containers directory dlist fgl filepath mtl
             polyparse process temporary text wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/graphviz/";
           description = "Bindings to Graphviz for graph visualisation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gravatar" = callPackage
        ({ mkDerivation, base, bytestring, data-default, HTTP, pureMD5
         , stdenv, text
         }:
         mkDerivation {
           pname = "gravatar";
           version = "0.8.0";
           sha256 = "6f6000acaea47f3fc8711f5a2a62d5fbe96f5bb698fcb997f9f07ffe3102f4d7";
           libraryHaskellDepends = [
             base bytestring data-default HTTP pureMD5 text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generate Gravatar image URLs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "graylog" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, bytestring, network
         , random, scientific, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "graylog";
           version = "0.1.0.1";
           sha256 = "2d8173e61da8d02c39cb95e6ccea8a167c792f682a496aed5fe4edfd0e6a0082";
           libraryHaskellDepends = [
             aeson aeson-casing base bytestring network random scientific text
             time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/haskell-graylog";
           description = "Support for graylog output";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "greskell" = callPackage
        ({ mkDerivation, aeson, base, exceptions, greskell-core, semigroups
         , stdenv, text, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "greskell";
           version = "0.2.3.1";
           sha256 = "f4dd2527f377ca2478fc03a520f9f1614eedbf69961a1a7c4054d8528943cf2f";
           configureFlags = [ "-f-hint-test" ];
           libraryHaskellDepends = [
             aeson base exceptions greskell-core semigroups text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/greskell/";
           description = "Haskell binding for Gremlin graph query language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "greskell-core" = callPackage
        ({ mkDerivation, aeson, base, containers, hashable, scientific
         , semigroups, stdenv, text, unordered-containers, uuid, vector
         }:
         mkDerivation {
           pname = "greskell-core";
           version = "0.1.3.1";
           sha256 = "bcd22f9587b708e8d09a043784bcb9afcb94b6f840e5f5ecb3c60760f2efe64a";
           libraryHaskellDepends = [
             aeson base containers hashable scientific semigroups text
             unordered-containers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/greskell/";
           description = "Haskell binding for Gremlin graph query language - core data types and tools";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "greskell-websocket" = callPackage
        ({ mkDerivation, aeson, async, base, base64-bytestring, bytestring
         , greskell-core, hashtables, safe-exceptions, stdenv, stm, text
         , unordered-containers, uuid, vector, websockets
         }:
         mkDerivation {
           pname = "greskell-websocket";
           version = "0.1.2.1";
           sha256 = "fd92319d970ddf4c58772bb555659fe31ea5ccd9c9c7efab968d3362ece9e473";
           libraryHaskellDepends = [
             aeson async base base64-bytestring bytestring greskell-core
             hashtables safe-exceptions stm text unordered-containers uuid
             vector websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/greskell/";
           description = "Haskell client for Gremlin Server using WebSocket serializer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groom" = callPackage
        ({ mkDerivation, base, haskell-src-exts, stdenv }:
         mkDerivation {
           pname = "groom";
           version = "0.1.2.1";
           sha256 = "a6b4a4d3af1b26f63039f04bd4176493f8dd4f6a9ab281f0e33c0151c20de59d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base haskell-src-exts ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty printing for well-behaved Show instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, containers, monad-control, mtl
         , resourcet, safe-exceptions, scientific, stdenv, text, time
         , transformers, transformers-base, transformers-compat
         }:
         mkDerivation {
           pname = "groundhog";
           version = "0.10.0";
           sha256 = "38fb65889878a50fd16e2ad8a04f0a9e2c774794086fbe156361d797b1a893f1";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-builder bytestring
             containers monad-control mtl resourcet safe-exceptions scientific
             text time transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lykahb/groundhog";
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-inspector" = callPackage
        ({ mkDerivation, aeson-pretty, base, bytestring, cmdargs
         , containers, groundhog, groundhog-sqlite, groundhog-th, mtl
         , regex-compat, stdenv, syb, template-haskell, text, time
         , transformers
         }:
         mkDerivation {
           pname = "groundhog-inspector";
           version = "0.10.0";
           sha256 = "4215ad3d497d0e9b66f0a3430a1db68abecdc013ed1cec1976f761dc7cac9ad0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson-pretty base bytestring containers groundhog groundhog-th
             regex-compat syb template-haskell text time transformers
           ];
           executableHaskellDepends = [
             base bytestring cmdargs containers groundhog groundhog-sqlite
             groundhog-th mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lykahb/groundhog";
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-mysql" = callPackage
        ({ mkDerivation, base, bytestring, containers, groundhog
         , monad-control, monad-logger, mysql, mysql-simple, resource-pool
         , resourcet, stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "groundhog-mysql";
           version = "0.10";
           sha256 = "ddf26a56078d815c77b0d36230183fe8ab804c5dc12ed09c2332ae06a88ebec5";
           libraryHaskellDepends = [
             base bytestring containers groundhog monad-control monad-logger
             mysql mysql-simple resource-pool resourcet text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "MySQL backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-postgresql" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
         , containers, groundhog, monad-control, postgresql-libpq
         , postgresql-simple, resource-pool, resourcet, stdenv, text, time
         , transformers, vector
         }:
         mkDerivation {
           pname = "groundhog-postgresql";
           version = "0.10";
           sha256 = "8916f26dfe8b3a8523792ce44899fa7ee984c002100c10850819159551dc2fb6";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder bytestring containers groundhog
             monad-control postgresql-libpq postgresql-simple resource-pool
             resourcet text time transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "PostgreSQL backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-sqlite" = callPackage
        ({ mkDerivation, base, bytestring, containers, direct-sqlite
         , groundhog, monad-control, resource-pool, resourcet, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "groundhog-sqlite";
           version = "0.10.0";
           sha256 = "fdf0377924ac6214ced50a5670b2d4811801c1a20e480b22090a705582d6defc";
           libraryHaskellDepends = [
             base bytestring containers direct-sqlite groundhog monad-control
             resource-pool resourcet text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sqlite3 backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-th" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, groundhog
         , libyaml, stdenv, template-haskell, text, time
         , unordered-containers, yaml
         }:
         mkDerivation {
           pname = "groundhog-th";
           version = "0.10.2";
           sha256 = "f3532d16633e0a8592696a5e4f92064e44fbefba9b4a1f4a9ac6b4aef3ddfdae";
           libraryHaskellDepends = [
             aeson base bytestring containers groundhog libyaml template-haskell
             text time unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "group-by-date" = callPackage
        ({ mkDerivation, base, explicit-exception, filemanip, hsshellscript
         , pathtype, stdenv, time, transformers, unix-compat, utility-ht
         }:
         mkDerivation {
           pname = "group-by-date";
           version = "0.1.0.3";
           sha256 = "501a34dffc20c0f8e4086d66e61219ac1c885d889de1fba165d9aafeebf3e253";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base explicit-exception filemanip hsshellscript pathtype time
             transformers unix-compat utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/group-by-date/";
           description = "Shell command for grouping files by dates into folders";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "grouped-list" = callPackage
        ({ mkDerivation, base, binary, containers, deepseq, pointed, stdenv
         }:
         mkDerivation {
           pname = "grouped-list";
           version = "0.2.2.1";
           sha256 = "54fd5f1deb01541f47bd7de93d37a8e83bdf9e7686b288c01c5ba097dbcc48af";
           libraryHaskellDepends = [ base binary containers deepseq pointed ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/grouped-list/blob/master/README.md";
           description = "Grouped lists. Equal consecutive elements are grouped.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groups" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "groups";
           version = "0.4.1.0";
           sha256 = "dd4588b71dfff42b9a30cb40304912742b95db964b20f51951aff0eee7f3f33d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell 98 groups";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "guarded-allocation" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "guarded-allocation";
           version = "0.0.1";
           sha256 = "0cac10d1790817bdbc44ffe4ee8fcb649e350bb831987ee80739393917784695";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/guarded-allocation/";
           description = "Memory allocation with added stress tests and integrity checks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gym-http-api" = callPackage
        ({ mkDerivation, aeson, base, exceptions, http-client, servant
         , servant-client, servant-lucid, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "gym-http-api";
           version = "0.1.0.1";
           sha256 = "2c3fd9b261cd7bc3a004d41f582cd6c629956c78f7236eb91d615ca0c9b0c910";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base servant servant-client servant-lucid text
             unordered-containers
           ];
           executableHaskellDepends = [
             base exceptions http-client servant-client
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stites/gym-http-api#readme";
           description = "REST client to the gym-http-api project";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hOpenPGP" = callPackage
        ({ mkDerivation, aeson, asn1-encoding, attoparsec, base
         , base16-bytestring, bifunctors, binary, binary-conduit, bytestring
         , bzlib, conduit, conduit-extra, containers, crypto-cipher-types
         , cryptonite, errors, hashable, incremental-parser, ixset-typed
         , lens, memory, monad-loops, nettle, network-uri, newtype
         , openpgp-asciiarmor, prettyprinter, resourcet, semigroups, split
         , stdenv, text, time, time-locale-compat, transformers
         , unliftio-core, unordered-containers, zlib
         }:
         mkDerivation {
           pname = "hOpenPGP";
           version = "2.8.5";
           sha256 = "b28a0e09cd19e59b7d8c5027061c84420eb4e081c9cab204b31abd3ce4abacb4";
           libraryHaskellDepends = [
             aeson asn1-encoding attoparsec base base16-bytestring bifunctors
             binary binary-conduit bytestring bzlib conduit conduit-extra
             containers crypto-cipher-types cryptonite errors hashable
             incremental-parser ixset-typed lens memory monad-loops nettle
             network-uri newtype openpgp-asciiarmor prettyprinter resourcet
             semigroups split text time time-locale-compat transformers
             unliftio-core unordered-containers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://salsa.debian.org/clint/hOpenPGP";
           description = "native Haskell implementation of OpenPGP (RFC4880)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hackage-db" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, containers
         , directory, filepath, stdenv, tar, time, utf8-string
         }:
         mkDerivation {
           pname = "hackage-db";
           version = "2.0.1";
           sha256 = "f0aac1af6d8d29b7fc2ffd43efaf5a7a5b00f2ead8dacff180bc3714c591ef8d";
           revision = "2";
           editedCabalFile = "0qscq4d3xwvjhqi1fiky7g12iwbkwn9qrypwzg9lx4p3c5xlwlvn";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal containers directory filepath tar time
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hackage-db#readme";
           description = "Access Hackage's package database via Data.Map";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hackage-security" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, Cabal, containers, cryptohash-sha256, directory
         , ed25519, filepath, ghc-prim, mtl, network, network-uri, parsec
         , pretty, stdenv, tar, template-haskell, time, transformers, zlib
         }:
         mkDerivation {
           pname = "hackage-security";
           version = "0.5.3.0";
           sha256 = "db986e17e9265aa9e40901690815b890b97d53159eb24d0a6cafaa7c18577c21";
           revision = "6";
           editedCabalFile = "1xs2nkzlvkdz8g27yzfxbjdbdadfmgiydnlpn5dm77cg18r495ay";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring Cabal
             containers cryptohash-sha256 directory ed25519 filepath ghc-prim
             mtl network network-uri parsec pretty tar template-haskell time
             transformers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/hackage-security";
           description = "Hackage security library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haddock-library" = callPackage
        ({ mkDerivation, base, bytestring, containers, parsec, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "haddock-library";
           version = "1.7.0";
           sha256 = "e7c2794a7eb352824f098cafa07bc0506f2c3633808bfbf4c64aef0ba664d011";
           libraryHaskellDepends = [
             base bytestring containers parsec text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haddock/";
           description = "Library exposing some functionality of Haddock";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hadolint" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , filepath, gitrev, HsYAML, language-docker, megaparsec, mtl
         , optparse-applicative, ShellCheck, split, stdenv, text, void
         }:
         mkDerivation {
           pname = "hadolint";
           version = "1.17.3";
           sha256 = "b77878d106a8a07ae01fd78dcf092807250b7b0167a583071ac6206caa709e02";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers directory filepath HsYAML
             language-docker megaparsec mtl ShellCheck split text void
           ];
           executableHaskellDepends = [
             base containers gitrev language-docker megaparsec
             optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hadolint/hadolint";
           description = "Dockerfile Linter JavaScript API";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "half" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, template-haskell }:
         mkDerivation {
           pname = "half";
           version = "0.3";
           sha256 = "06b26fb062a55fa8f5df1cc2fddc47e5303f09977279f05f62d1950a51b72093";
           libraryHaskellDepends = [ base deepseq template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/half";
           description = "Half-precision floating-point";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hamilton" = callPackage
        ({ mkDerivation, ad, ansi-wl-pprint, base, containers
         , finite-typelits, ghc-typelits-knownnat, hmatrix, hmatrix-gsl
         , hmatrix-vector-sized, optparse-applicative, stdenv
         , typelits-witnesses, vector, vector-sized, vty
         }:
         mkDerivation {
           pname = "hamilton";
           version = "0.1.0.3";
           sha256 = "3c7623217c8e49cabc6620835e53609e7b7339f39a1523da2467076252addb1b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ad base hmatrix hmatrix-gsl hmatrix-vector-sized typelits-witnesses
             vector-sized
           ];
           executableHaskellDepends = [
             ansi-wl-pprint base containers finite-typelits
             ghc-typelits-knownnat hmatrix optparse-applicative vector
             vector-sized vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/hamilton#readme";
           description = "Physics on generalized coordinate systems using Hamiltonian Mechanics and AD";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hamtsolo" = callPackage
        ({ mkDerivation, async, attoparsec, attoparsec-binary, base, binary
         , bytestring, conduit, conduit-combinators, conduit-extra
         , exceptions, gitrev, optparse-applicative, resourcet, stdenv
         , stm-conduit, unix
         }:
         mkDerivation {
           pname = "hamtsolo";
           version = "1.0.3";
           sha256 = "d0deda06a582db978a417d8eed9e403c339a54c4bc9c2b6c6cdee8555dbb7035";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             async attoparsec attoparsec-binary base binary bytestring conduit
             conduit-combinators conduit-extra exceptions gitrev
             optparse-applicative resourcet stm-conduit unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfc/hamtsolo#readme";
           description = "Intel AMT serial-over-lan (SOL) client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hapistrano" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, async, base, filepath
         , formatting, gitrev, mtl, optparse-applicative, path, path-io
         , process, stdenv, stm, time, transformers, typed-process, yaml
         }:
         mkDerivation {
           pname = "hapistrano";
           version = "0.3.10.0";
           sha256 = "4aeaa3f487ae482ce54b1c45ac471601b328e241a42d2b229064998bd947894f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base filepath formatting gitrev mtl path
             process stm time transformers typed-process
           ];
           executableHaskellDepends = [
             aeson async base formatting gitrev optparse-applicative path
             path-io stm yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/hapistrano";
           description = "A deployment library for Haskell applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "happy" = callPackage
        ({ mkDerivation, array, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "happy";
           version = "1.19.12";
           sha256 = "fb9a23e41401711a3b288f93cf0a66db9f97da1ce32ec4fffea4b78a0daeb40f";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [ array base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.haskell.org/happy/";
           description = "Happy is a parser generator for Haskell";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "hasbolt" = callPackage
        ({ mkDerivation, base, binary, bytestring, connection, containers
         , data-binary-ieee754, data-default, mtl, network, stdenv, text
         }:
         mkDerivation {
           pname = "hasbolt";
           version = "0.1.4.1";
           sha256 = "abc0fd1f1ec618a0c702aa5455171e1268731310da52989f0e42546fa0734fdc";
           libraryHaskellDepends = [
             base binary bytestring connection containers data-binary-ieee754
             data-default mtl network text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/zmactep/hasbolt#readme";
           description = "Haskell driver for Neo4j 3+ (BOLT protocol)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashable" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, ghc-prim, integer-gmp
         , stdenv, text
         }:
         mkDerivation {
           pname = "hashable";
           version = "1.2.7.0";
           sha256 = "ecb5efc0586023f5a0dc861100621c1dbb4cbb2f0516829a16ebac39f0432abf";
           revision = "1";
           editedCabalFile = "197063dpl0wn67dp7a06yc2hxp81n24ykk7klbjx0fndm5n87dh3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring deepseq ghc-prim integer-gmp text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tibbe/hashable";
           description = "A class for types that can be converted to a hash value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashable-time" = callPackage
        ({ mkDerivation, base, hashable, stdenv, time }:
         mkDerivation {
           pname = "hashable-time";
           version = "0.2.0.2";
           sha256 = "fa61f7fbd493b5a54f2aeb10e0c1c4144111ecf34e74080d12c5738ce925fee0";
           revision = "3";
           editedCabalFile = "1dr7ak803ngrhpv43dy25jm18gfzn02gzd3hm31dzcjv3mxsmbrk";
           libraryHaskellDepends = [ base hashable time ];
           doHaddock = false;
           doCheck = false;
           description = "Hashable instances for Data.Time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashids" = callPackage
        ({ mkDerivation, base, bytestring, containers, split, stdenv }:
         mkDerivation {
           pname = "hashids";
           version = "1.0.2.4";
           sha256 = "27991fc8a6debe76a086af80f6b72a5d451e7f1466b79cb0df973b98a2f5f3cf";
           libraryHaskellDepends = [ base bytestring containers split ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hashids.org/";
           description = "Hashids generates short, unique, non-sequential ids from numbers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hashmap" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, stdenv }:
         mkDerivation {
           pname = "hashmap";
           version = "1.3.3";
           sha256 = "dc06b57cd1bcd656d4602df7705a3f11a54ae65f664e9be472d42a9bdcd64755";
           libraryHaskellDepends = [ base containers deepseq hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/foxik/hashmap";
           description = "Persistent containers Map and Set based on hashing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashtables" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, primitive, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hashtables";
           version = "1.2.3.4";
           sha256 = "125ce62701fba3f666609f5c75f452005aa5d32dff4eeee3f3903c30b2ed55e6";
           libraryHaskellDepends = [
             base ghc-prim hashable primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gregorycollins/hashtables";
           description = "Mutable hash tables in the ST monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskeline" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , process, stdenv, stm, terminfo, transformers, unix
         }:
         mkDerivation {
           pname = "haskeline";
           version = "0.7.5.0";
           sha256 = "d26508444914efcd6a0369f89c3ade57feae7732c73f5329b610c0c8f1c1dec6";
           revision = "1";
           editedCabalFile = "0i8fyhk7fvz2bxnh5xsmdw5rr7yywzc2wv115034q1g4sb018zrd";
           configureFlags = [ "-fterminfo" ];
           libraryHaskellDepends = [
             base bytestring containers directory filepath process stm terminfo
             transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/judah/haskeline";
           description = "A command-line interface for user input, written in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-gi" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, Cabal, containers
         , directory, filepath, glib, gobject-introspection, haskell-gi-base
         , mtl, pretty-show, process, regex-tdfa, safe, stdenv, text
         , transformers, xdg-basedir, xml-conduit
         }:
         mkDerivation {
           pname = "haskell-gi";
           version = "0.23.0";
           sha256 = "8ad81ef082c71f41c6c6e0afbd8779497da6ffb1e9e7c2b207efe0b56aa7a211";
           libraryHaskellDepends = [
             attoparsec base bytestring Cabal containers directory filepath
             haskell-gi-base mtl pretty-show process regex-tdfa safe text
             transformers xdg-basedir xml-conduit
           ];
           libraryPkgconfigDepends = [ glib gobject-introspection ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Generate Haskell bindings for GObject Introspection capable libraries";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib; inherit (pkgs) gobject-introspection;};
      "haskell-gi-base" = callPackage
        ({ mkDerivation, base, bytestring, containers, glib, stdenv, text
         }:
         mkDerivation {
           pname = "haskell-gi-base";
           version = "0.23.0";
           sha256 = "c07ebe7dea2a3c2b0a980f7b958529920caeaf5966280c1317c5fbba2f6942b8";
           libraryHaskellDepends = [ base bytestring containers text ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi-base";
           description = "Foundation for libraries generated by haskell-gi";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "haskell-gi-overloading" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "haskell-gi-overloading";
           version = "1.0";
           sha256 = "3ed797f8dd8d3535640b1ca99851bbc5968817c25a80fc499af42715d371682a";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Overloading support for haskell-gi";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-lexer" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "haskell-lexer";
           version = "1.0.2";
           sha256 = "d8cdf3122ee384ec440269108fd85ccf207a413015ceeffb2e9bf4313a6addf3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yav/haskell-lexer";
           description = "A fully compliant Haskell 98 lexer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-lsp" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, bytestring
         , containers, data-default, directory, filepath, hashable
         , haskell-lsp-types, hslogger, lens, mtl, network-uri
         , rope-utf16-splay, sorted-list, stdenv, stm, temporary, text, time
         , unordered-containers
         }:
         mkDerivation {
           pname = "haskell-lsp";
           version = "0.15.0.0";
           sha256 = "8fddcc317494a308a115abc8789581db301f3fd7906e356e3a49da4b1b042c84";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async attoparsec base bytestring containers data-default
             directory filepath hashable haskell-lsp-types hslogger lens mtl
             network-uri rope-utf16-splay sorted-list stm temporary text time
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alanz/haskell-lsp";
           description = "Haskell library for the Microsoft Language Server Protocol";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-lsp-types" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, deepseq
         , filepath, hashable, lens, network-uri, scientific, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "haskell-lsp-types";
           version = "0.15.0.0";
           sha256 = "6b21b7de49d02df51ab9a25a0cf514b47b76ac3c8e46f3079431b6f52e05c2cf";
           libraryHaskellDepends = [
             aeson base bytestring data-default deepseq filepath hashable lens
             network-uri scientific text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alanz/haskell-lsp";
           description = "Haskell library for the Microsoft Language Server Protocol, data types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-names" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , data-lens-light, filepath, haskell-src-exts, mtl, stdenv
         , transformers, traverse-with-class, uniplate
         }:
         mkDerivation {
           pname = "haskell-names";
           version = "0.9.7";
           sha256 = "b2b03fb559fed5904750e5678b05be51b9158195b552971e08f825456e9ba0a9";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring containers data-lens-light filepath
             haskell-src-exts mtl transformers traverse-with-class uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/haskell-suite/haskell-names";
           description = "Name resolution library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-spacegoo" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , mtl, pretty, pretty-show, stdenv, text, vector, vector-space
         }:
         mkDerivation {
           pname = "haskell-spacegoo";
           version = "0.2.0.1";
           sha256 = "1eb3faa9a7f6a5870337eeb0bb3ad915f58987dfe4643fe95c91cbb2738ddd3c";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra mtl pretty pretty-show
             text vector vector-space
           ];
           doHaddock = false;
           doCheck = false;
           description = "Client API for Rocket Scissor Spacegoo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-src" = callPackage
        ({ mkDerivation, array, base, happy, pretty, stdenv, syb }:
         mkDerivation {
           pname = "haskell-src";
           version = "1.0.3.0";
           sha256 = "b4b4941e8883da32c3f2b93f3ecdd5cff82ff9304cb91e89850b19095c908dbc";
           revision = "1";
           editedCabalFile = "1pnrvh9wzdkhvkkky4rlq1imycl9k76x9rvgq7cmfp8rf1iwqi5q";
           libraryHaskellDepends = [ array base pretty syb ];
           libraryToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           description = "Support for manipulating Haskell source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-exts" = callPackage
        ({ mkDerivation, array, base, ghc-prim, happy, pretty, stdenv }:
         mkDerivation {
           pname = "haskell-src-exts";
           version = "1.21.1";
           sha256 = "2ec911614325f1e5eef7e5bef15c08b8265931d69da3ce566af109d486453e60";
           libraryHaskellDepends = [ array base ghc-prim pretty ];
           libraryToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-suite/haskell-src-exts";
           description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-exts-util" = callPackage
        ({ mkDerivation, base, containers, data-default, haskell-src-exts
         , semigroups, stdenv, transformers, uniplate
         }:
         mkDerivation {
           pname = "haskell-src-exts-util";
           version = "0.2.5";
           sha256 = "c802f9ec4e05668e3eeb2cbb0a827f342854211315f9bb74c1e79253c589783b";
           libraryHaskellDepends = [
             base containers data-default haskell-src-exts semigroups
             transformers uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/haskell-src-exts-util";
           description = "Helper functions for working with haskell-src-exts trees";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-meta" = callPackage
        ({ mkDerivation, base, haskell-src-exts, pretty, stdenv, syb
         , template-haskell, th-orphans
         }:
         mkDerivation {
           pname = "haskell-src-meta";
           version = "0.8.3";
           sha256 = "49e5d23909aa0f8f88e10b1347608052c093f4fab2a79b9877d64221b1b2f69f";
           libraryHaskellDepends = [
             base haskell-src-exts pretty syb template-haskell th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parse source to template-haskell abstract syntax";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskey-btree" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, hashable
         , mtl, semigroups, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "haskey-btree";
           version = "0.3.0.1";
           sha256 = "35f54cf51b0cd66361b29e21ebcd0603ab2396028e58ab667ac709591491f387";
           libraryHaskellDepends = [
             base binary bytestring containers hashable mtl semigroups text
             transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-haskey/haskey-btree";
           description = "B+-tree implementation in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskintex" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , filepath, haskell-src-exts, HaTeX, hint, parsec, process, stdenv
         , text, transformers
         }:
         mkDerivation {
           pname = "haskintex";
           version = "0.8.0.0";
           sha256 = "9d4974112f33baf47124a56f87b96892a0a37c10587098f851c71256d15cddd8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers directory filepath
             haskell-src-exts HaTeX hint parsec process text transformers
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://daniel-diaz.github.io/projects/haskintex";
           description = "Haskell Evaluation inside of LaTeX code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskoin-core" = callPackage
        ({ mkDerivation, aeson, array, base, base16-bytestring, bytestring
         , cereal, conduit, containers, cryptonite, entropy, hashable, hspec
         , HUnit, memory, mtl, murmur3, network, QuickCheck, safe
         , scientific, secp256k1-haskell, split, stdenv, string-conversions
         , text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "haskoin-core";
           version = "0.9.8";
           sha256 = "f9a60e19d9c0b2a9319b2a0fb79297fdf0d28fdc7f3bd87cde0f849414a5bef4";
           libraryHaskellDepends = [
             aeson array base base16-bytestring bytestring cereal conduit
             containers cryptonite entropy hashable hspec HUnit memory mtl
             murmur3 network QuickCheck safe scientific secp256k1-haskell split
             string-conversions text time transformers unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskoin/haskoin#readme";
           description = "Bitcoin & Bitcoin Cash library for Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "hasql" = callPackage
        ({ mkDerivation, attoparsec, base, base-prelude, bytestring
         , bytestring-strict-builder, contravariant, contravariant-extras
         , dlist, hashable, hashtables, loch-th, mtl, placeholders
         , postgresql-binary, postgresql-libpq, profunctors, stdenv, text
         , text-builder, transformers, vector
         }:
         mkDerivation {
           pname = "hasql";
           version = "1.4.1";
           sha256 = "8c0b99bbea546dbc78619999c0509520a74922bc9b6c05dec03d4def978ed763";
           libraryHaskellDepends = [
             attoparsec base base-prelude bytestring bytestring-strict-builder
             contravariant contravariant-extras dlist hashable hashtables
             loch-th mtl placeholders postgresql-binary postgresql-libpq
             profunctors text text-builder transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/hasql";
           description = "An efficient PostgreSQL driver with a flexible mapping API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hasql-optparse-applicative" = callPackage
        ({ mkDerivation, base-prelude, hasql, hasql-pool
         , optparse-applicative, stdenv
         }:
         mkDerivation {
           pname = "hasql-optparse-applicative";
           version = "0.3.0.5";
           sha256 = "b8f7061c488f9b84cdcbc506c7429aa403a77f628a9b683605f8d33efa7aaf60";
           libraryHaskellDepends = [
             base-prelude hasql hasql-pool optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sannsyn/hasql-optparse-applicative";
           description = "\"optparse-applicative\" parsers for \"hasql\"";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hasql-pool" = callPackage
        ({ mkDerivation, base-prelude, hasql, resource-pool, stdenv, time
         }:
         mkDerivation {
           pname = "hasql-pool";
           version = "0.5.1";
           sha256 = "739860f61589261b120368c113fbe88360e5db8eafc2166fbaba2a70692cf429";
           libraryHaskellDepends = [ base-prelude hasql resource-pool time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/hasql-pool";
           description = "A pool of connections for Hasql";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hasql-transaction" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-tree-builder
         , contravariant, contravariant-extras, hasql, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "hasql-transaction";
           version = "0.7.2";
           sha256 = "65e97fff06a9f18b5f8496a7e5af893e31d248088bdd7d7d5c6d919175fca58d";
           libraryHaskellDepends = [
             base bytestring bytestring-tree-builder contravariant
             contravariant-extras hasql mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/hasql-transaction";
           description = "A composable abstraction over the retryable transactions for Hasql";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hasty-hamiltonian" = callPackage
        ({ mkDerivation, base, kan-extensions, lens, mcmc-types
         , mwc-probability, pipes, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "hasty-hamiltonian";
           version = "1.3.2";
           sha256 = "e6299d72e145cfabea798e2088284580fc65f01638e3562e1f01cf9df018cc9e";
           revision = "1";
           editedCabalFile = "1k883ziy63p3zmpyfzck5jw2143b6ijcsvwi704rp94pvh0vk02z";
           libraryHaskellDepends = [
             base kan-extensions lens mcmc-types mwc-probability pipes primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/hasty-hamiltonian";
           description = "Speedy traversal through parameter space";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haxl" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , deepseq, exceptions, filepath, ghc-prim, hashable, pretty, stdenv
         , stm, text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "haxl";
           version = "2.1.2.0";
           sha256 = "5e0230a9d480abf8e37d4981ddb9c01f07f2f59089703bac181a839c744e95d3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base binary bytestring containers deepseq exceptions filepath
             ghc-prim hashable pretty stm text time transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/facebook/Haxl";
           description = "A Haskell library for efficient, concurrent, and concise data access";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hbeanstalk" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , containers, network, stdenv
         }:
         mkDerivation {
           pname = "hbeanstalk";
           version = "0.2.4";
           sha256 = "feaf97fd18fedb3e5abf337e61c98a03108d917d9f87f885c8d02b6b838aac8f";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring containers network
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/scsibug/hbeanstalk/";
           description = "Client for the beanstalkd workqueue service";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hdaemonize" = callPackage
        ({ mkDerivation, base, bytestring, extensible-exceptions, filepath
         , hsyslog, mtl, stdenv, unix
         }:
         mkDerivation {
           pname = "hdaemonize";
           version = "0.5.6";
           sha256 = "ad6f302492a9c41e99ce62ca955a959b0cdca0ff328e66f31bfec5a99f7cee24";
           libraryHaskellDepends = [
             base bytestring extensible-exceptions filepath hsyslog mtl unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/unprolix/hdaemonize";
           description = "Library to handle the details of writing daemons for UNIX";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "heap";
           version = "1.0.4";
           sha256 = "a4c2489e1031e9e8d96dff61ac8c15e5fcd3541080d81e0e47e298b3aad3172a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Heaps in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heaps" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "heaps";
           version = "0.3.6.1";
           sha256 = "91d552f3c8992f745607de39239b950db78295b533eda43d083699872a4ee36d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/heaps/";
           description = "Asymptotically optimal Brodal/Okasaki heaps";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hebrew-time" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "hebrew-time";
           version = "0.1.2";
           sha256 = "4316e2ab829a7344900fe15966460bc553e3a60989a14c08ecadf00d2674462b";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/hebrew-time#readme";
           description = "Hebrew dates and prayer times";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hedgehog" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, bytestring
         , concurrent-output, containers, directory, erf, exceptions, fail
         , lifted-async, mmorph, monad-control, mtl, pretty-show, primitive
         , random, resourcet, semigroups, stdenv, stm, template-haskell
         , text, time, transformers, transformers-base, wl-pprint-annotated
         }:
         mkDerivation {
           pname = "hedgehog";
           version = "1.0.2";
           sha256 = "8e0cef556c2a9386d45b8d29e8051de99693d19b1d29323add108ecd5c69a880";
           revision = "3";
           editedCabalFile = "0y9glrf68jx8h8wsrrcdgxwmf0im1rh3g050mf0lk8iv0cdvdd2m";
           libraryHaskellDepends = [
             ansi-terminal async base bytestring concurrent-output containers
             directory erf exceptions fail lifted-async mmorph monad-control mtl
             pretty-show primitive random resourcet semigroups stm
             template-haskell text time transformers transformers-base
             wl-pprint-annotated
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://hedgehog.qa";
           description = "Release with confidence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hedgehog-corpus" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hedgehog-corpus";
           version = "0.1.0";
           sha256 = "c3569cd8316770115871acf334587350e887b046e35abc0d52a90dd0e6d719f2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcgilchrist/hedgehog-corpus";
           description = "hedgehog-corpus";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hedgehog-fn" = callPackage
        ({ mkDerivation, base, contravariant, hedgehog, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "hedgehog-fn";
           version = "1.0";
           sha256 = "170bc58d2e5a5bc15bc3e8a0a3ea71b11b8aab8b3bfd923b7f9394afe569b915";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base contravariant hedgehog transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/hedgehog-fn";
           description = "Function generation for `hedgehog`";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hedis" = callPackage
        ({ mkDerivation, async, base, bytestring, bytestring-lexing
         , deepseq, errors, HTTP, mtl, network, network-uri, resource-pool
         , scanner, stdenv, stm, text, time, tls, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "hedis";
           version = "0.12.11";
           sha256 = "9c7744ce404f06ad88f21f80332b6203caa4ebe595fc1fb6e0c986001eff03d9";
           libraryHaskellDepends = [
             async base bytestring bytestring-lexing deepseq errors HTTP mtl
             network network-uri resource-pool scanner stm text time tls
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/informatikr/hedis";
           description = "Client library for the Redis datastore: supports full command set, pipelining";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hedn" = callPackage
        ({ mkDerivation, base, containers, deepseq, deriving-compat
         , megaparsec, parser-combinators, prettyprinter, scientific, stdenv
         , template-haskell, text, time, uuid-types, vector
         }:
         mkDerivation {
           pname = "hedn";
           version = "0.2.0.1";
           sha256 = "326c54efc9a6bc92b2f7b5a6900442b8aff8cb9dac93c6f15bea1ff14c27d19b";
           revision = "1";
           editedCabalFile = "1wr3zv0bj1714y1ip40va34zysmypicd6qp0l50bg9wj2db0misz";
           libraryHaskellDepends = [
             base containers deepseq deriving-compat megaparsec
             parser-combinators prettyprinter scientific template-haskell text
             time uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "EDN parsing and encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "here" = callPackage
        ({ mkDerivation, base, haskell-src-meta, mtl, parsec, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "here";
           version = "1.2.13";
           sha256 = "406f9c27ba1e59cd662d078d81dcf2908840a77df15aed31d75dd017b7773c00";
           libraryHaskellDepends = [
             base haskell-src-meta mtl parsec template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmhedberg/here";
           description = "Here docs & interpolated strings via quasiquotation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heredoc" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "heredoc";
           version = "0.2.0.0";
           sha256 = "c90d9fc61cb8cd812be510845493b6a6eddcc4b772581fd40a9433ed8f130f40";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/heredoc";
           description = "multi-line string / here document using QuasiQuotes";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "heterocephalus" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, containers, dlist
         , mtl, parsec, shakespeare, stdenv, template-haskell, text
         , transformers
         }:
         mkDerivation {
           pname = "heterocephalus";
           version = "1.0.5.3";
           sha256 = "4723e03896cc91d524da36fe1b8c5b174b81120c323a3fad692f9ada4bd8794f";
           libraryHaskellDepends = [
             base blaze-html blaze-markup containers dlist mtl parsec
             shakespeare template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arowM/heterocephalus#readme";
           description = "A type-safe template engine for working with popular front end development tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hex" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "hex";
           version = "0.1.2";
           sha256 = "12ee1243edd80570a486521565fb0c9b5e39374f21a12f050636e71d55ec61ec";
           revision = "1";
           editedCabalFile = "0khmrdni6njr4wxgz15yz77l8ar4qm2jj6v0lvfnwqdms4s6i80y";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Convert strings into hexadecimal and back";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexml" = callPackage
        ({ mkDerivation, base, bytestring, extra, stdenv }:
         mkDerivation {
           pname = "hexml";
           version = "0.3.4";
           sha256 = "937401802ed6593aad8c5acf0ea963d0f1f4473bf72185702b12eb30e52bbe2a";
           libraryHaskellDepends = [ base bytestring extra ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/hexml#readme";
           description = "XML subset DOM parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexml-lens" = callPackage
        ({ mkDerivation, base, bytestring, contravariant, foundation, hexml
         , lens, profunctors, stdenv, text
         }:
         mkDerivation {
           pname = "hexml-lens";
           version = "0.2.1";
           sha256 = "baa34ef7206ff924b2559a83da8f8f07bf970e9993a171c956b8de7b70cc496b";
           libraryHaskellDepends = [
             base bytestring contravariant foundation hexml lens profunctors
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/hexml-lens#readme";
           description = "Lenses for the hexml package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexpat" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, expat, List
         , stdenv, text, transformers, utf8-string
         }:
         mkDerivation {
           pname = "hexpat";
           version = "0.20.13";
           sha256 = "46e1a0e651c1603c1f064c6ca8d4c66cb27e7a66974bfb45ecaa8f9ccc753fd1";
           libraryHaskellDepends = [
             base bytestring containers deepseq List text transformers
             utf8-string
           ];
           librarySystemDepends = [ expat ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Hexpat/";
           description = "XML parser/formatter based on expat";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) expat;};
      "hexstring" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, binary, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "hexstring";
           version = "0.11.1";
           sha256 = "40d8dbfe22f572ffdb73f28c448b228a75008e83cc3bf78e939add0c9d800914";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base16-bytestring binary bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a hex string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hformat" = callPackage
        ({ mkDerivation, ansi-terminal, base, base-unicode-symbols, stdenv
         , text
         }:
         mkDerivation {
           pname = "hformat";
           version = "0.3.3.1";
           sha256 = "302eda1d9ca71b73c5a5d31561d4ef3e7d4ff9ef1b86329aa019b5df20c5a773";
           libraryHaskellDepends = [
             ansi-terminal base base-unicode-symbols text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mvoidex/hformat";
           description = "Simple Haskell formatting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hfsevents" = callPackage
        ({ mkDerivation, base, bytestring, cereal, Cocoa, CoreServices, mtl
         , stdenv, text
         }:
         mkDerivation {
           pname = "hfsevents";
           version = "0.1.6";
           sha256 = "74c3f3f3a5e55fff320c352a2d481069ff915860a0ab970864c6a0e6b65d3f05";
           libraryHaskellDepends = [ base bytestring cereal mtl text ];
           librarySystemDepends = [ Cocoa ];
           libraryToolDepends = [ CoreServices ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luite/hfsevents";
           description = "File/folder watching for OS X";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "x86_64-darwin" ];
         }) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;};
      "hi-file-parser" = callPackage
        ({ mkDerivation, base, binary, bytestring, rio, stdenv, vector }:
         mkDerivation {
           pname = "hi-file-parser";
           version = "0.1.0.0";
           sha256 = "54ac6750d5e4ef93c64b255f672261ae4c80ef11f20d92c382736e09be11fa25";
           revision = "2";
           editedCabalFile = "1bm98h0v4wf9vmdng15c2r48yz06118jxlprsnk0z3jw0d95ij9z";
           libraryHaskellDepends = [ base binary bytestring rio vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/stack#readme";
           description = "Parser for GHC's hi files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hidapi" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, deepseq-generics
         , stdenv, systemd
         }:
         mkDerivation {
           pname = "hidapi";
           version = "0.1.5";
           sha256 = "3726e0bcbdbda309b919241d86629625e732fd07d78cc90ad39cb39b51cd595e";
           libraryHaskellDepends = [
             base bytestring deepseq deepseq-generics
           ];
           librarySystemDepends = [ systemd ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vahokif/haskell-hidapi";
           description = "Haskell bindings to HIDAPI";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) systemd;};
      "hidden-char" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hidden-char";
           version = "0.1.0.2";
           sha256 = "ea909372a7cc06cda7ee8e9c1a6a5c16be19fef256ad4bd2c0b39e61d940f498";
           revision = "3";
           editedCabalFile = "0f6qghr4i3ar993pjlswdd2rl671lrnxj8740i2yhn89z410vzsa";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rcook/hidden-char#readme";
           description = "Provides cross-platform getHiddenChar function";
           license = stdenv.lib.licenses.mit;
         }) {};
      "higher-leveldb" = callPackage
        ({ mkDerivation, base, bytestring, cereal, data-default, exceptions
         , leveldb-haskell, mtl, resourcet, stdenv, transformers
         , transformers-base, unliftio-core
         }:
         mkDerivation {
           pname = "higher-leveldb";
           version = "0.5.0.2";
           sha256 = "2afc228104a29aed6b208b1aeba93631e96fdf11efbe68ad036f838f95f8aff2";
           libraryHaskellDepends = [
             base bytestring cereal data-default exceptions leveldb-haskell mtl
             resourcet transformers transformers-base unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jeremyjh/higher-leveldb";
           description = "A rich monadic API for working with leveldb databases";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "highlighting-kate" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers, mtl
         , parsec, pcre-light, stdenv, utf8-string
         }:
         mkDerivation {
           pname = "highlighting-kate";
           version = "0.6.4";
           sha256 = "d8b83385f5da2ea7aa59f28eb860fd7eba0d35a4c36192a5044ee7ea1e001baf";
           configureFlags = [ "-fpcre-light" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html bytestring containers mtl parsec pcre-light
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/highlighting-kate";
           description = "Syntax highlighting";
           license = "GPL";
         }) {};
      "hinfo" = callPackage
        ({ mkDerivation, aeson, base, optparse-applicative, stdenv, text
         , yaml
         }:
         mkDerivation {
           pname = "hinfo";
           version = "0.0.3.0";
           sha256 = "9bcee53af6ff558efe131ff22ab678b1fc6423a7f176026fc50fbabbab620413";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base optparse-applicative text yaml
           ];
           executableHaskellDepends = [
             aeson base optparse-applicative text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChristopherDavenport/hinfo#readme";
           description = "Command Line App With Info on your Haskell App";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hinotify" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, stdenv, unix
         }:
         mkDerivation {
           pname = "hinotify";
           version = "0.4";
           sha256 = "7d182c524384aaa15eec666803643d067671e8e806f315c10758685e90a934f4";
           libraryHaskellDepends = [ async base bytestring containers unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kolmodin/hinotify.git";
           description = "Haskell binding to inotify";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hint" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, ghc
         , ghc-boot, ghc-paths, mtl, random, stdenv, temporary, unix
         }:
         mkDerivation {
           pname = "hint";
           version = "0.9.0.2";
           sha256 = "0ed2c5bddcb84cba0101e38403e98207a2501953c9dc51b723f1c0e4aea3b61b";
           libraryHaskellDepends = [
             base directory exceptions filepath ghc ghc-boot ghc-paths mtl
             random temporary unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-hint/hint";
           description = "Runtime Haskell interpreter (GHC API wrapper)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hjsmin" = callPackage
        ({ mkDerivation, base, bytestring, language-javascript
         , optparse-applicative, stdenv, text
         }:
         mkDerivation {
           pname = "hjsmin";
           version = "0.2.0.4";
           sha256 = "81b9947714d8d2b73d0aba9e2e02af7e30c13b2cf8144df8904564d9642e57e4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring language-javascript text
           ];
           executableHaskellDepends = [
             base bytestring language-javascript optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/erikd/hjsmin";
           description = "Haskell implementation of a javascript minifier";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hkgr" = callPackage
        ({ mkDerivation, base, directory, filepath, simple-cabal
         , simple-cmd, simple-cmd-args, stdenv
         }:
         mkDerivation {
           pname = "hkgr";
           version = "0.2.4";
           sha256 = "b8390f41de99be4dd8a3450160d18459437cc42c095507bae8ae77ee6fbebb26";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base directory filepath simple-cabal simple-cmd simple-cmd-args
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/hkgr";
           description = "Simple Hackage release workflow for package maintainers";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger" = callPackage
        ({ mkDerivation, ansi-terminal, base, base-compat-batteries
         , bytestring, cmdargs, containers, data-default, Decimal, Diff
         , directory, easytest, filepath, hashable, haskeline, hledger-lib
         , lucid, math-functions, megaparsec, mtl, mtl-compat, old-time
         , parsec, pretty-show, process, regex-tdfa, safe, shakespeare
         , split, stdenv, tabular, temporary, terminfo, text, time
         , transformers, unordered-containers, utf8-string, utility-ht
         , wizards
         }:
         mkDerivation {
           pname = "hledger";
           version = "1.14.2";
           sha256 = "849a6e0683192ec504da9a631ddfc82e04973583f4a028fd39b8cdac2efe29ea";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base base-compat-batteries bytestring cmdargs
             containers data-default Decimal Diff directory easytest filepath
             hashable haskeline hledger-lib lucid math-functions megaparsec mtl
             mtl-compat old-time parsec pretty-show process regex-tdfa safe
             shakespeare split tabular temporary terminfo text time transformers
             unordered-containers utf8-string utility-ht wizards
           ];
           executableHaskellDepends = [
             ansi-terminal base base-compat-batteries bytestring cmdargs
             containers data-default Decimal directory easytest filepath
             haskeline hledger-lib math-functions megaparsec mtl mtl-compat
             old-time parsec pretty-show process regex-tdfa safe shakespeare
             split tabular temporary terminfo text time transformers
             unordered-containers utf8-string utility-ht wizards
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Command-line interface for the hledger accounting tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger-iadd" = callPackage
        ({ mkDerivation, base, brick, containers, directory, free
         , hledger-lib, megaparsec, microlens, microlens-th
         , optparse-applicative, semigroups, stdenv, text, text-zipper, time
         , transformers, unordered-containers, vector, vty, xdg-basedir
         }:
         mkDerivation {
           pname = "hledger-iadd";
           version = "1.3.10";
           sha256 = "438be466885798f9cdf2ba78aa4a7f30a1b2732f44b403108328e2a2f76ab94d";
           revision = "1";
           editedCabalFile = "0bwpk2h2chhcw74sf1ljkkiy699zdc2dvgq7ixlrlk09yx44jhxc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base brick containers directory free hledger-lib megaparsec
             microlens microlens-th optparse-applicative semigroups text
             text-zipper time transformers unordered-containers vector vty
             xdg-basedir
           ];
           executableHaskellDepends = [
             base brick directory free hledger-lib megaparsec microlens
             optparse-applicative text text-zipper time transformers
             unordered-containers vector vty xdg-basedir
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hpdeifel/hledger-iadd#readme";
           description = "A terminal UI as drop-in replacement for hledger add";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hledger-interest" = callPackage
        ({ mkDerivation, base, Cabal, Decimal, hledger-lib, mtl, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "hledger-interest";
           version = "1.5.3";
           sha256 = "7a7f5d437c98e42ba1f1529f2645e5df88d18962ae28b71b8c07e428fe08c1b9";
           revision = "1";
           editedCabalFile = "1myqv7hci32hvm98d4fn2zqdvkxsdx1g821n1fwr6814yn89kwjj";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal Decimal hledger-lib mtl text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hledger-interest";
           description = "computes interest for a given account";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hledger-lib" = callPackage
        ({ mkDerivation, ansi-terminal, array, base, base-compat-batteries
         , blaze-markup, bytestring, call-stack, cassava, cassava-megaparsec
         , cmdargs, containers, data-default, Decimal, deepseq, directory
         , easytest, extra, file-embed, filepath, Glob, hashtables
         , megaparsec, mtl, mtl-compat, old-time, parsec, parser-combinators
         , pretty-show, regex-tdfa, safe, split, stdenv, tabular
         , template-haskell, text, time, transformers, uglymemo, utf8-string
         }:
         mkDerivation {
           pname = "hledger-lib";
           version = "1.14.1";
           sha256 = "e2ba4c587eca0a5a0e32871fc2a912aa4453e96701d446afbdda4cc502b8d8f0";
           libraryHaskellDepends = [
             ansi-terminal array base base-compat-batteries blaze-markup
             bytestring call-stack cassava cassava-megaparsec cmdargs containers
             data-default Decimal deepseq directory easytest extra file-embed
             filepath Glob hashtables megaparsec mtl mtl-compat old-time parsec
             parser-combinators pretty-show regex-tdfa safe split tabular
             template-haskell text time transformers uglymemo utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Core data types, parsers and functionality for the hledger accounting tools";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger-ui" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, base-compat-batteries
         , brick, cmdargs, containers, data-default, directory, filepath
         , fsnotify, hledger, hledger-lib, megaparsec, microlens
         , microlens-platform, pretty-show, process, safe, split, stdenv
         , text, text-zipper, time, transformers, unix, vector, vty
         }:
         mkDerivation {
           pname = "hledger-ui";
           version = "1.14.2";
           sha256 = "9951a8665c7a182d8008c92565272a6c4a8e12d363df4b169fa09dddffee112e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             ansi-terminal async base base-compat-batteries brick cmdargs
             containers data-default directory filepath fsnotify hledger
             hledger-lib megaparsec microlens microlens-platform pretty-show
             process safe split text text-zipper time transformers unix vector
             vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Curses-style user interface for the hledger accounting tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger-web" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , case-insensitive, clientsession, cmdargs, conduit, conduit-extra
         , containers, data-default, Decimal, directory, filepath, hjsmin
         , hledger, hledger-lib, http-client, http-conduit, http-types, json
         , megaparsec, mtl, semigroups, shakespeare, stdenv
         , template-haskell, text, time, transformers, wai, wai-extra
         , wai-handler-launch, warp, yaml, yesod, yesod-core, yesod-form
         , yesod-static
         }:
         mkDerivation {
           pname = "hledger-web";
           version = "1.14.1";
           sha256 = "a1eacde5b9d531df0875b65c8239e8351749610e1e6e46c847dd02594fb6a970";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring case-insensitive
             clientsession cmdargs conduit conduit-extra containers data-default
             Decimal directory filepath hjsmin hledger hledger-lib http-client
             http-conduit http-types json megaparsec mtl semigroups shakespeare
             template-haskell text time transformers wai wai-extra
             wai-handler-launch warp yaml yesod yesod-core yesod-form
             yesod-static
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Web interface for the hledger accounting tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hlibgit2" = callPackage
        ({ mkDerivation, base, bindings-DSL, openssl, stdenv, zlib }:
         mkDerivation {
           pname = "hlibgit2";
           version = "0.18.0.16";
           sha256 = "199e4027faafe0a39d18ca3168923d44c57b386b960c72398df1c0fb7eff8e5e";
           libraryHaskellDepends = [ base bindings-DSL zlib ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level bindings to libgit2";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) openssl;};
      "hlibsass" = callPackage
        ({ mkDerivation, base, Cabal, directory, libsass, stdenv }:
         mkDerivation {
           pname = "hlibsass";
           version = "0.1.8.0";
           sha256 = "26de9a1275e0c1cae5afbe79ad3aa1a857c3bfc0b6dcc97698e9d02d41de4feb";
           configureFlags = [ "-fexternalLibsass" ];
           setupHaskellDepends = [ base Cabal directory ];
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ libsass ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jakubfijalkowski/hlibsass";
           description = "Low-level bindings to Libsass";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) libsass;};
      "hlint" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, bytestring, cmdargs
         , containers, cpphs, data-default, directory, extra, filepath
         , ghc-lib-parser, haskell-src-exts, haskell-src-exts-util, hscolour
         , process, refact, stdenv, text, transformers, uniplate
         , unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "hlint";
           version = "2.1.26";
           sha256 = "cc2b96297ca7fd14d300cb20e672a4c924b5dd49c5e1c64641c9b4ecd69df39b";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base bytestring cmdargs containers cpphs
             data-default directory extra filepath ghc-lib-parser
             haskell-src-exts haskell-src-exts-util hscolour process refact text
             transformers uniplate unordered-containers vector yaml
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/hlint#readme";
           description = "Source code suggestions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hmatrix" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, deepseq
         , openblasCompat, random, semigroups, split, stdenv
         , storable-complex, vector
         }:
         mkDerivation {
           pname = "hmatrix";
           version = "0.20.0.0";
           sha256 = "ef421aba2e6c93a22043a233b2c83789b24363ebe35732d67ccafd12990a1eeb";
           configureFlags = [ "-fdisable-default-paths" "-fopenblas" ];
           libraryHaskellDepends = [
             array base binary bytestring deepseq random semigroups split
             storable-complex vector
           ];
           librarySystemDepends = [ openblasCompat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/albertoruiz/hmatrix";
           description = "Numeric Linear Algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openblasCompat;};
      "hmatrix-backprop" = callPackage
        ({ mkDerivation, backprop, base, ghc-typelits-knownnat
         , ghc-typelits-natnormalise, hmatrix, hmatrix-vector-sized
         , microlens, stdenv, vector, vector-sized, vinyl
         }:
         mkDerivation {
           pname = "hmatrix-backprop";
           version = "0.1.3.0";
           sha256 = "5350f95a7bdf014f06f424f51379cc8074baa7439107ef7568c385c2aae276da";
           libraryHaskellDepends = [
             backprop base ghc-typelits-knownnat ghc-typelits-natnormalise
             hmatrix hmatrix-vector-sized microlens vector vector-sized vinyl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/hmatrix-backprop#readme";
           description = "hmatrix operations lifted for backprop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hmatrix-gsl" = callPackage
        ({ mkDerivation, array, base, gsl, hmatrix, process, random, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hmatrix-gsl";
           version = "0.19.0.1";
           sha256 = "157637d336c72cded119127cc3631a569018284ea8ca54b0e29e742388a2cd6c";
           libraryHaskellDepends = [
             array base hmatrix process random vector
           ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/albertoruiz/hmatrix";
           description = "Numerical computation";
           license = stdenv.lib.licenses.gpl3;
         }) {inherit (pkgs) gsl;};
      "hmatrix-gsl-stats" = callPackage
        ({ mkDerivation, base, binary, gsl, hmatrix, stdenv
         , storable-complex, vector
         }:
         mkDerivation {
           pname = "hmatrix-gsl-stats";
           version = "0.4.1.8";
           sha256 = "b844420ce1e76e11ab04fba7e826b98449e166c6b08c78ba01b9e021752200b3";
           libraryHaskellDepends = [
             base binary hmatrix storable-complex vector
           ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hmatrix-gsl-stats";
           description = "GSL Statistics interface";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) gsl;};
      "hmatrix-morpheus" = callPackage
        ({ mkDerivation, base, blas, hmatrix, liblapack, stdenv }:
         mkDerivation {
           pname = "hmatrix-morpheus";
           version = "0.1.1.2";
           sha256 = "f2f3ee02607096a56c7c5c7f1ddff2f7f91ee05211ec2bd659add8208b1505a7";
           libraryHaskellDepends = [ base hmatrix ];
           librarySystemDepends = [ blas liblapack ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aligusnet/morpheus/tree/master/hmatrix-morpheus";
           description = "Low-level machine learning auxiliary functions";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
      "hmatrix-vector-sized" = callPackage
        ({ mkDerivation, base, hmatrix, stdenv, vector, vector-sized }:
         mkDerivation {
           pname = "hmatrix-vector-sized";
           version = "0.1.2.0";
           sha256 = "6c09c84fc1812acc2836ddb399948fb74bb7541711e7a0206df382df33f53759";
           libraryHaskellDepends = [ base hmatrix vector vector-sized ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/hmatrix-vector-sized#readme";
           description = "Conversions between hmatrix and vector-sized types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hmm-lapack" = callPackage
        ({ mkDerivation, base, comfort-array, containers, deepseq
         , explicit-exception, fixed-length, lapack, lazy-csv, netlib-ffi
         , non-empty, prelude-compat, QuickCheck, random, semigroups, stdenv
         , tfp, transformers, utility-ht
         }:
         mkDerivation {
           pname = "hmm-lapack";
           version = "0.4";
           sha256 = "1c0cedbd0efef71a44323e0c3ab4aa6d7dc45be36dead37b8d0e632d5d701d38";
           libraryHaskellDepends = [
             base comfort-array containers deepseq explicit-exception
             fixed-length lapack lazy-csv netlib-ffi non-empty prelude-compat
             QuickCheck random semigroups tfp transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/hmm-lapack";
           description = "Hidden Markov Models using LAPACK primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hmpfr" = callPackage
        ({ mkDerivation, base, integer-gmp, mpfr, stdenv }:
         mkDerivation {
           pname = "hmpfr";
           version = "0.4.4";
           sha256 = "2badebf032a24f6ab3bde068d5246bc9cc00bf5a8ac17da8cc0bd45c882816f5";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base integer-gmp ];
           librarySystemDepends = [ mpfr ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michalkonecny/hmpfr";
           description = "Haskell binding to the MPFR library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mpfr;};
      "hoauth2" = callPackage
        ({ mkDerivation, aeson, base, bytestring, exceptions, http-conduit
         , http-types, microlens, stdenv, text, unordered-containers
         , uri-bytestring, uri-bytestring-aeson
         }:
         mkDerivation {
           pname = "hoauth2";
           version = "1.8.9";
           sha256 = "675395088bb95f2c03347e4a8ce0d4ead0cc4eb802d4f263579a0417877ecf0f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring exceptions http-conduit http-types microlens
             text unordered-containers uri-bytestring uri-bytestring-aeson
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/freizl/hoauth2";
           description = "Haskell OAuth2 authentication client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hoogle" = callPackage
        ({ mkDerivation, aeson, base, binary, blaze-html, blaze-markup
         , bytestring, cmdargs, conduit, conduit-extra, connection
         , containers, deepseq, directory, extra, filepath, foundation
         , hashable, haskell-src-exts, http-conduit, http-types, js-flot
         , js-jquery, mmap, old-locale, process-extras, QuickCheck
         , resourcet, stdenv, storable-tuple, tar, template-haskell, text
         , time, transformers, uniplate, utf8-string, vector, wai
         , wai-logger, warp, warp-tls, zlib
         }:
         mkDerivation {
           pname = "hoogle";
           version = "5.0.17.11";
           sha256 = "e18ec4cf413894fac8b75469b0546f0de906546b205f8386141f3575d34777eb";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base binary blaze-html blaze-markup bytestring cmdargs
             conduit conduit-extra connection containers deepseq directory extra
             filepath foundation hashable haskell-src-exts http-conduit
             http-types js-flot js-jquery mmap old-locale process-extras
             QuickCheck resourcet storable-tuple tar template-haskell text time
             transformers uniplate utf8-string vector wai wai-logger warp
             warp-tls zlib
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           testTarget = "--test-option=--no-net";
           homepage = "https://hoogle.haskell.org/";
           description = "Haskell API Search";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hopenpgp-tools" = callPackage
        ({ mkDerivation, aeson, alex, array, attoparsec, base
         , base16-bytestring, binary, binary-conduit, bytestring, conduit
         , conduit-extra, containers, crypto-pubkey, cryptohash, directory
         , errors, fgl, graphviz, happy, hOpenPGP, http-client
         , http-client-tls, http-types, ixset-typed, lens, monad-loops
         , openpgp-asciiarmor, optparse-applicative, prettyprinter
         , prettyprinter-ansi-terminal, prettyprinter-convert-ansi-wl-pprint
         , resourcet, stdenv, text, time, time-locale-compat, transformers
         , unordered-containers, yaml
         }:
         mkDerivation {
           pname = "hopenpgp-tools";
           version = "0.21.3";
           sha256 = "1411887720962fd6a1101e90c01348d34bb400fbbbc34abe5c2ded5156c7c6a3";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson array attoparsec base base16-bytestring binary binary-conduit
             bytestring conduit conduit-extra containers crypto-pubkey
             cryptohash directory errors fgl graphviz hOpenPGP http-client
             http-client-tls http-types ixset-typed lens monad-loops
             openpgp-asciiarmor optparse-applicative prettyprinter
             prettyprinter-ansi-terminal prettyprinter-convert-ansi-wl-pprint
             resourcet text time time-locale-compat transformers
             unordered-containers yaml
           ];
           executableToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://salsa.debian.org/clint/hOpenPGP";
           description = "hOpenPGP-based command-line tools";
           license = stdenv.lib.licenses.agpl3;
         }) {};
      "hopenssl" = callPackage
        ({ mkDerivation, base, bytestring, openssl, stdenv }:
         mkDerivation {
           pname = "hopenssl";
           version = "2.2.4";
           sha256 = "9df46c328fc4c1d1566e2d1539770c9fe9d0422e09ee254721b35ee7d48a7671";
           revision = "1";
           editedCabalFile = "14bs0wjrqnnn1v8c4yznfzggvmgypm2lssgl0cr498kmp54if0lf";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hopenssl";
           description = "FFI Bindings to OpenSSL's EVP Digest Interface";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "hopfli" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "hopfli";
           version = "0.2.2.1";
           sha256 = "4d71dc0f599c87445c22403b447ce310bf8567d6b10cc82efbdd00a4d4d12a18";
           revision = "1";
           editedCabalFile = "116jns5im51sb9xiwpx308wz3pr67335633anrf8f704pz8vwjka";
           libraryHaskellDepends = [ base bytestring zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ananthakumaran/hopfli";
           description = "Bidings to Google's Zopfli compression library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "hosc" = callPackage
        ({ mkDerivation, base, binary, blaze-builder, bytestring
         , data-binary-ieee754, network, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "hosc";
           version = "0.17";
           sha256 = "66439c416246cb56c15a0f3fb0cf07b178202c7755034b648f02d4f81ba5800c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary blaze-builder bytestring data-binary-ieee754 network
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rohandrape.net/t/hosc";
           description = "Haskell Open Sound Control";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hostname" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hostname";
           version = "1.0";
           sha256 = "9b43dab1b6da521f35685b20555da00738c8e136eb972458c786242406a9cf5c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A very simple package providing a cross-platform means of determining the hostname";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hostname-validate" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "hostname-validate";
           version = "1.0.0";
           sha256 = "7fafb1e0cfe19d453030754962e74cdb8f3e791ec5b974623cbf26872779c857";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Validate hostnames e.g. localhost or foo.co.uk.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hourglass" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "hourglass";
           version = "0.2.12";
           sha256 = "44335b5c402e80c60f1db6a74462be4ea29d1a9043aa994334ffee1164f1ca4a";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-hourglass";
           description = "simple performant time related library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hourglass-orphans" = callPackage
        ({ mkDerivation, aeson, base, hourglass, stdenv }:
         mkDerivation {
           pname = "hourglass-orphans";
           version = "0.1.0.0";
           sha256 = "9f0ba9f3b3cdd391b26daf3dce0bac44ab1f9dd883eaff063af9ebfb0b373d64";
           libraryHaskellDepends = [ aeson base hourglass ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/hourglass-orphans#readme";
           description = "Orphan Aeson instances to hourglass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hp2pretty" = callPackage
        ({ mkDerivation, array, attoparsec, base, containers, filepath
         , floatshow, mtl, optparse-applicative, semigroups, stdenv, text
         }:
         mkDerivation {
           pname = "hp2pretty";
           version = "0.9";
           sha256 = "56fc8ba0ad862668179f5bab032c3738fa42d10abce6b59f8dd01b3a11e52b52";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array attoparsec base containers filepath floatshow mtl
             optparse-applicative semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://mathr.co.uk/blog/hp2pretty.html";
           description = "generate pretty graphs from heap profiles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpack" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, bytestring, Cabal
         , containers, cryptonite, deepseq, directory, filepath, Glob
         , http-client, http-client-tls, http-types, infer-license, pretty
         , scientific, stdenv, text, transformers, unordered-containers
         , vector, yaml
         }:
         mkDerivation {
           pname = "hpack";
           version = "0.31.2";
           sha256 = "6f00834e99463f022fe9346b9c2cdb1054a6d89e9d6b70a4869c2b5a50304dd0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bifunctors bytestring Cabal containers cryptonite
             deepseq directory filepath Glob http-client http-client-tls
             http-types infer-license pretty scientific text transformers
             unordered-containers vector yaml
           ];
           executableHaskellDepends = [
             aeson base bifunctors bytestring Cabal containers cryptonite
             deepseq directory filepath Glob http-client http-client-tls
             http-types infer-license pretty scientific text transformers
             unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/hpack#readme";
           description = "A modern format for Haskell packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hpack-dhall" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, dhall
         , dhall-json, filepath, hpack, megaparsec, microlens
         , optparse-applicative, prettyprinter, stdenv, text, transformers
         , yaml
         }:
         mkDerivation {
           pname = "hpack-dhall";
           version = "0.5.2";
           sha256 = "f187092f60fddda9f4f453cbbf9c536b3f3af193ebd23c2c234280cb6182b69a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring dhall dhall-json filepath hpack
             megaparsec microlens prettyprinter text transformers yaml
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring dhall dhall-json filepath hpack
             megaparsec microlens optparse-applicative prettyprinter text
             transformers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blockscope/hpack-dhall#readme";
           description = "hpack's dhalling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hquantlib-time" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "hquantlib-time";
           version = "0.0.4.1";
           sha256 = "ac9ced19f72197fc1bc8b9528c8ae9cf1e8887f2d2ed6519a480b048423d523c";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/paulrzcz/hquantlib-time.git";
           description = "HQuantLib Time is a business calendar functions extracted from HQuantLib";
           license = "LGPL";
         }) {};
      "hreader" = callPackage
        ({ mkDerivation, base, exceptions, hset, mmorph, monad-control, mtl
         , stdenv, tagged, transformers, transformers-base
         }:
         mkDerivation {
           pname = "hreader";
           version = "1.1.0";
           sha256 = "2a2b02c059b343ab7ff0d340b6545a003b0d563fb8a1ad2d53d6c2f4759a7d3a";
           revision = "1";
           editedCabalFile = "0kz3yzah7m4c2r9yaawhljcgb579masx3lx4mrr4lmqy39kmsvcb";
           libraryHaskellDepends = [
             base exceptions hset mmorph monad-control mtl tagged transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/s9gf4ult/hreader";
           description = "Generalization of MonadReader and ReaderT using hset";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hreader-lens" = callPackage
        ({ mkDerivation, base, comonad, hreader, hset, lens, lens-action
         , profunctors, stdenv
         }:
         mkDerivation {
           pname = "hreader-lens";
           version = "0.1.3.0";
           sha256 = "408f0a2c6ce4bc5c00746947262f43f421f0e8fb9cc29c0cd2563ee1e87502d0";
           libraryHaskellDepends = [
             base comonad hreader hset lens lens-action profunctors
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dredozubov/hreader-lens";
           description = "Optics for hreader package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hruby" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
         , process, ruby, scientific, stdenv, stm, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "hruby";
           version = "0.3.8";
           sha256 = "68163072f25563ac458539ee34708700978fbd389e5e7a380839f34f017ce274";
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [
             aeson attoparsec base bytestring scientific stm text
             unordered-containers vector
           ];
           librarySystemDepends = [ ruby ];
           doHaddock = false;
           doCheck = false;
           description = "Embed a Ruby intepreter in your Haskell program !";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) ruby;};
      "hs-GeoIP" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, GeoIP, stdenv }:
         mkDerivation {
           pname = "hs-GeoIP";
           version = "0.3";
           sha256 = "8e5ff6a132d8944336f10dcaa69d8852cdd7953a5ff18248ae06cb2819a1ab8c";
           libraryHaskellDepends = [ base bytestring deepseq ];
           librarySystemDepends = [ GeoIP ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ozataman/hs-GeoIP";
           description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) GeoIP;};
      "hs-bibutils" = callPackage
        ({ mkDerivation, base, stdenv, syb }:
         mkDerivation {
           pname = "hs-bibutils";
           version = "6.7.0.0";
           sha256 = "c5d205294ff372306504b03c4334fd96215727087ee4ee1378a45273a8d6dee1";
           libraryHaskellDepends = [ base syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wilx/hs-bibutils";
           description = "Haskell bindings to bibutils, the bibliography conversion utilities";
           license = "GPL";
         }) {};
      "hs-functors" = callPackage
        ({ mkDerivation, base, stdenv, tagged, transformers }:
         mkDerivation {
           pname = "hs-functors";
           version = "0.1.6.0";
           sha256 = "14e0977ae52fd9aa4da8a2335c7452016ed9b4214d72de5b296cb78612f5fba4";
           revision = "1";
           editedCabalFile = "1z4p93nibk1r0cyff4bfpb1rfklq43p75k35fyrk5kcvfa0ds296";
           libraryHaskellDepends = [ base tagged transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Functors from products of Haskell and its dual to Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hs-php-session" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "hs-php-session";
           version = "0.0.9.3";
           sha256 = "0e717e90933f9e861d9cf374baa0dedac51d8ae7a1746ef2f7bd098fe38c8df7";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/elblake/hs-php-session";
           description = "PHP session and values serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsass" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, filepath
         , hlibsass, monad-loops, stdenv, transformers
         }:
         mkDerivation {
           pname = "hsass";
           version = "0.8.0";
           sha256 = "afb4d904253e59c4f0e271fee24fabb97090372cb53c12d7bc8bd5db8cdcd2ae";
           revision = "1";
           editedCabalFile = "0d085g21zvawl2jv6ap5fyk70c9igbjiwknvk1mgdydxbm1kvyq5";
           libraryHaskellDepends = [
             base bytestring data-default-class filepath hlibsass monad-loops
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jakubfijalkowski/hsass";
           description = "Integrating Sass into Haskell applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsc2hs" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, process
         , stdenv
         }:
         mkDerivation {
           pname = "hsc2hs";
           version = "0.68.6";
           sha256 = "e0cc7549c22fafe6e159aadb1048c9bfcce8fda602dd2febd8b1eea4df3292b2";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             base containers directory filepath process
           ];
           doHaddock = false;
           doCheck = false;
           description = "A preprocessor that helps with writing Haskell bindings to C code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hschema" = callPackage
        ({ mkDerivation, base, comonad, contravariant, free, hashable
         , invariant, lens, mtl, natural-transformation, profunctors, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hschema";
           version = "0.0.1.1";
           sha256 = "3218cf757cd0ca57b47d3f63c2f599e785ee225e7d17cae0b15656ffa32785e8";
           libraryHaskellDepends = [
             base comonad contravariant free hashable invariant lens mtl
             natural-transformation profunctors text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alonsodomin/haskell-schema#readme";
           description = "Describe schemas for your Haskell data types";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "hschema-aeson" = callPackage
        ({ mkDerivation, aeson, base, comonad, contravariant, free, hschema
         , hschema-prettyprinter, hschema-quickcheck, lens, mtl
         , natural-transformation, prettyprinter
         , prettyprinter-ansi-terminal, QuickCheck, quickcheck-instances
         , scientific, stdenv, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hschema-aeson";
           version = "0.0.1.1";
           sha256 = "4c5f8b24c25ca385f16a6adbad175240b258746594083aa8213257eba35e057d";
           libraryHaskellDepends = [
             aeson base comonad contravariant free hschema hschema-prettyprinter
             hschema-quickcheck lens mtl natural-transformation prettyprinter
             prettyprinter-ansi-terminal QuickCheck quickcheck-instances
             scientific text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alonsodomin/haskell-schema#readme";
           description = "Describe schemas for your Haskell data types";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "hschema-prettyprinter" = callPackage
        ({ mkDerivation, base, contravariant, free, hschema, lens, mtl
         , natural-transformation, prettyprinter
         , prettyprinter-ansi-terminal, stdenv, text, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "hschema-prettyprinter";
           version = "0.0.1.1";
           sha256 = "eff29fe173f759b80f5a2f762f35a730aa914ffe94a250955de1f134c5c07fee";
           libraryHaskellDepends = [
             base contravariant free hschema lens mtl natural-transformation
             prettyprinter prettyprinter-ansi-terminal text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alonsodomin/haskell-schema#readme";
           description = "Describe schemas for your Haskell data types";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "hschema-quickcheck" = callPackage
        ({ mkDerivation, base, free, hschema, lens, mtl
         , natural-transformation, QuickCheck, quickcheck-instances, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hschema-quickcheck";
           version = "0.0.1.1";
           sha256 = "b94aedaacddcadd935ec1dec43568826b6c98e3933a7e22d877df96cac75a9e5";
           libraryHaskellDepends = [
             base free hschema lens mtl natural-transformation QuickCheck
             quickcheck-instances text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alonsodomin/haskell-schema#readme";
           description = "Describe schemas for your Haskell data types";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "hscolour" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "hscolour";
           version = "1.24.4";
           sha256 = "243332b082294117f37b2c2c68079fa61af68b36223b3fc07594f245e0e5321d";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~malcolm/hscolour/";
           description = "Colourise Haskell code";
           license = "LGPL";
         }) {};
      "hsdev" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, array, async, attoparsec
         , base, bytestring, Cabal, containers, cpphs, data-default, deepseq
         , direct-sqlite, directory, exceptions, filepath, fsnotify, ghc
         , ghc-boot, ghc-paths, haskell-names, haskell-src-exts, hformat
         , hlint, HTTP, lens, lifted-base, mmorph, monad-control
         , monad-loops, mtl, network, optparse-applicative, process
         , regex-pcre-builtin, scientific, simple-log, sqlite-simple, stdenv
         , stm, syb, template-haskell, text, text-region, time, transformers
         , transformers-base, traverse-with-class, uniplate, unix
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "hsdev";
           version = "0.3.2.3";
           sha256 = "3bb80c8afb08919e373a8fb8cf5e4baa286ac97d19845e8e2123ec7634a5610f";
           configureFlags = [ "-f-docs" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty array async attoparsec base bytestring Cabal
             containers cpphs data-default deepseq direct-sqlite directory
             exceptions filepath fsnotify ghc ghc-boot ghc-paths haskell-names
             haskell-src-exts hformat hlint HTTP lens lifted-base mmorph
             monad-control monad-loops mtl network optparse-applicative process
             regex-pcre-builtin scientific simple-log sqlite-simple stm syb
             template-haskell text text-region time transformers
             transformers-base traverse-with-class uniplate unix
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring containers deepseq directory
             exceptions filepath monad-loops mtl network optparse-applicative
             process text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvoidex/hsdev";
           description = "Haskell development library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsdns" = callPackage
        ({ mkDerivation, adns, base, containers, network, stdenv }:
         mkDerivation {
           pname = "hsdns";
           version = "1.8";
           sha256 = "60e2c1467d381ab183c95e29de58f9b0514309f21d728fec700a42adff73b64b";
           revision = "1";
           editedCabalFile = "09ixj0xywmbigfhqmq58dwqns8l3w6wprykafg52fx69bvhg9yph";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers network ];
           librarySystemDepends = [ adns ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hsdns";
           description = "Asynchronous DNS Resolver";
           license = stdenv.lib.licenses.lgpl3;
         }) {inherit (pkgs) adns;};
      "hsebaysdk" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client, http-types
         , stdenv, text, time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "hsebaysdk";
           version = "0.4.0.0";
           sha256 = "0738d0df113b15bb9148ecbe02f0a34562c557d8f64b65065122925e29df8901";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-types text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/creichert/hsebaysdk";
           description = "Haskell eBay SDK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsemail" = callPackage
        ({ mkDerivation, base, parsec, stdenv, time, time-compat }:
         mkDerivation {
           pname = "hsemail";
           version = "2.2.0";
           sha256 = "04fdf2c678c6cee3ed7109e41f26d1543bffea95869daf0cb5fa656bb5b0e800";
           libraryHaskellDepends = [ base parsec time time-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hsemail#readme";
           description = "Parsec parsers for the Internet Message format (e-mail)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hset" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, tagged, type-fun }:
         mkDerivation {
           pname = "hset";
           version = "2.2.0";
           sha256 = "b8747a0826aeaca2ca814e7a334f9de5a02f36ac83faea5e1c32c8f6040bf130";
           libraryHaskellDepends = [ base deepseq tagged type-fun ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/s9gf4ult/hset";
           description = "Primitive list with elements of unique types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsexif" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, iconv
         , stdenv, text, time
         }:
         mkDerivation {
           pname = "hsexif";
           version = "0.6.1.6";
           sha256 = "0f7e14cdec698c4e8e17ec84971ca5a604c9e75a861806dbf7088cdfc706b55d";
           revision = "1";
           editedCabalFile = "1dgcgsmx0k5p3ibfv3n5k0c5p1is2m5zfsd2s6nc6d0pz34d4wl9";
           libraryHaskellDepends = [
             base binary bytestring containers iconv text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emmanueltouzery/hsexif";
           description = "EXIF handling library in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsini" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, parsec, stdenv
         }:
         mkDerivation {
           pname = "hsini";
           version = "0.5.1.2";
           sha256 = "eaa6ae68c6271d5c3187054e702719b3ee7916524ffda27bb328cc9aad9ed8e4";
           revision = "1";
           editedCabalFile = "0wkvajjgs64l4wlw8s6sn3pbwx3ni41p1260chp67a16innr1qp6";
           libraryHaskellDepends = [ base bytestring containers mtl parsec ];
           doHaddock = false;
           doCheck = false;
           description = "ini configuration files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsinstall" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, heredoc, process
         , safe-exceptions, stdenv
         }:
         mkDerivation {
           pname = "hsinstall";
           version = "2.2";
           sha256 = "23a702c43e0f42ad916aedd5b53970a6e64708ffc50d1d509904ebad3d478991";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory filepath ];
           executableHaskellDepends = [
             base Cabal directory filepath heredoc process safe-exceptions
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dino-/hsinstall#readme";
           description = "Install Haskell software";
           license = stdenv.lib.licenses.isc;
         }) {};
      "hslogger" = callPackage
        ({ mkDerivation, base, containers, directory, mtl, network
         , old-locale, process, stdenv, time, unix
         }:
         mkDerivation {
           pname = "hslogger";
           version = "1.2.12";
           sha256 = "f97a4c89d0921f237999de5d44950127dbe8baa177960ccccbfb79cccfd46c7a";
           revision = "1";
           editedCabalFile = "1rk2lrg3959nbgbyd1aacvwbv865lsrnczqdmj4ivkfn0c8nkidh";
           libraryHaskellDepends = [
             base containers directory mtl network old-locale process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/hslogger";
           description = "Versatile logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hslua" = callPackage
        ({ mkDerivation, base, bytestring, containers, exceptions, fail
         , lua5_3, mtl, stdenv, text
         }:
         mkDerivation {
           pname = "hslua";
           version = "1.0.3.2";
           sha256 = "d2d40b0c143ef58d26203f34d96d4220f1a20077386e4a5216be74260b7d6ba0";
           configureFlags = [ "-fsystem-lua" "-f-use-pkgconfig" ];
           libraryHaskellDepends = [
             base bytestring containers exceptions fail mtl text
           ];
           librarySystemDepends = [ lua5_3 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://hslua.github.io/";
           description = "Bindings to Lua, an embeddable scripting language";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) lua5_3;};
      "hslua-aeson" = callPackage
        ({ mkDerivation, aeson, base, hashable, hslua, scientific, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hslua-aeson";
           version = "1.0.0";
           sha256 = "ffa7c2f6cb90a914f796334c8f07b1eb7bfd9b3717c55d8f756589dd14706c73";
           revision = "1";
           editedCabalFile = "1ysgh5s99zv0khkwqw1kcli2r2vi77r7wz3yc0y0i7qr35shzklh";
           libraryHaskellDepends = [
             aeson base hashable hslua scientific text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tarleb/hslua-aeson#readme";
           description = "Allow aeson data types to be used with lua";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hslua-module-system" = callPackage
        ({ mkDerivation, base, containers, directory, exceptions, hslua
         , stdenv, temporary
         }:
         mkDerivation {
           pname = "hslua-module-system";
           version = "0.2.1";
           sha256 = "108e4dee68d09eb61b77122e0a5b8b7f0bafe1a7b4168e7ff4970c56def8fcd4";
           libraryHaskellDepends = [
             base containers directory exceptions hslua temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hslua/hslua-module-system";
           description = "Lua module wrapper around Haskell's System module";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hslua-module-text" = callPackage
        ({ mkDerivation, base, bytestring, hslua, stdenv, text }:
         mkDerivation {
           pname = "hslua-module-text";
           version = "0.2.1";
           sha256 = "1302d9022e9beea0cf4f09f977d7ca0956c598d0bf15945de5a52dd8f7e66dc6";
           libraryHaskellDepends = [ base bytestring hslua text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hslua/hslua-module-text";
           description = "Lua module for text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsp" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "hsp";
           version = "0.10.0";
           sha256 = "4ed3905a9db91001bde09f060290833af462e87e35476ab0def1579a1ff7ceab";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/nibro/hsp";
           description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec" = callPackage
        ({ mkDerivation, base, hspec-core, hspec-discover
         , hspec-expectations, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "hspec";
           version = "2.7.1";
           sha256 = "818cebbcbde8761289902a816f865691e40724babf87e70057ecab204f6619f5";
           libraryHaskellDepends = [
             base hspec-core hspec-discover hspec-expectations QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "A Testing Framework for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, hspec-expectations
         , stdenv, text
         }:
         mkDerivation {
           pname = "hspec-attoparsec";
           version = "0.1.0.2";
           sha256 = "ea7a8b3f2989abde8c8537cec1a2ae312e88df80086b9b01ed12e5324137fb64";
           libraryHaskellDepends = [
             attoparsec base bytestring hspec-expectations text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alpmestan/hspec-attoparsec";
           description = "Utility functions for testing your attoparsec parsers with hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-checkers" = callPackage
        ({ mkDerivation, base, checkers, hspec, stdenv }:
         mkDerivation {
           pname = "hspec-checkers";
           version = "0.1.0.2";
           sha256 = "e7db79dc527cf5b806723bbe3d511a074297976a0c7042968b9abc57f8337e99";
           libraryHaskellDepends = [ base checkers hspec ];
           doHaddock = false;
           doCheck = false;
           description = "Allows to use checkers properties from hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-contrib" = callPackage
        ({ mkDerivation, base, hspec-core, HUnit, stdenv }:
         mkDerivation {
           pname = "hspec-contrib";
           version = "0.5.1";
           sha256 = "2c1bf064a815af9a3ac8af79d1bf1e761d855276366b86cbace5773794ea1f42";
           revision = "1";
           editedCabalFile = "0vjmyrsb878914b4khwdy3fcn9n217q8k5xnszlrp7dl1jnbqyi4";
           libraryHaskellDepends = [ base hspec-core HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "Contributed functionality for Hspec";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-core" = callPackage
        ({ mkDerivation, ansi-terminal, array, base, call-stack, clock
         , deepseq, directory, filepath, hspec-expectations, HUnit
         , QuickCheck, quickcheck-io, random, setenv, stdenv, stm, tf-random
         , transformers
         }:
         mkDerivation {
           pname = "hspec-core";
           version = "2.7.1";
           sha256 = "2ccc20f27970f753ed2e902c323f4562adaf1a31f4234b3504e02a8a50417323";
           revision = "1";
           editedCabalFile = "0aw68sgz2p63y0vg07c1jx2pr8lmhp5c1ck60dlipyxsa00455i6";
           libraryHaskellDepends = [
             ansi-terminal array base call-stack clock deepseq directory
             filepath hspec-expectations HUnit QuickCheck quickcheck-io random
             setenv stm tf-random transformers
           ];
           doHaddock = false;
           doCheck = false;
           testTarget = "--test-option=--skip --test-option='Test.Hspec.Core.Runner.hspecResult runs specs in parallel'";
           homepage = "http://hspec.github.io/";
           description = "A Testing Framework for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-discover" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "hspec-discover";
           version = "2.7.1";
           sha256 = "0b31c29b37d7d446d44b3559f794cd62b09ee5fc3f30862eccd8284e52758764";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory filepath ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "Automatically discover and run Hspec tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations" = callPackage
        ({ mkDerivation, base, call-stack, HUnit, stdenv }:
         mkDerivation {
           pname = "hspec-expectations";
           version = "0.8.2";
           sha256 = "819607ea1faf35ce5be34be61c6f50f3389ea43892d56fb28c57a9f5d54fb4ef";
           libraryHaskellDepends = [ base call-stack HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-expectations#readme";
           description = "Catchy combinators for HUnit";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations-lifted" = callPackage
        ({ mkDerivation, base, hspec-expectations, stdenv, transformers }:
         mkDerivation {
           pname = "hspec-expectations-lifted";
           version = "0.10.0";
           sha256 = "22cdf1509b396fea2f53a0bb88dec3552f540d58cc60962a82970264c1e73828";
           libraryHaskellDepends = [ base hspec-expectations transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A version of hspec-expectations generalized to MonadIO";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations-pretty-diff" = callPackage
        ({ mkDerivation, ansi-terminal, base, Diff, hscolour, HUnit
         , nicify-lib, stdenv, text
         }:
         mkDerivation {
           pname = "hspec-expectations-pretty-diff";
           version = "0.7.2.5";
           sha256 = "9479251e851c07af1b88ebe91d9a20d074f505209f253ebd6f379f3914ab6210";
           libraryHaskellDepends = [
             ansi-terminal base Diff hscolour HUnit nicify-lib text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
           description = "Catchy combinators for HUnit";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-golden-aeson" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, directory
         , filepath, hspec, QuickCheck, quickcheck-arbitrary-adt, random
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "hspec-golden-aeson";
           version = "0.7.0.0";
           sha256 = "114ccdbe3b7425f6bacc7d0d78d160879528aa76d2a3e774d9c152d8444a4ca2";
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring directory filepath hspec
             QuickCheck quickcheck-arbitrary-adt random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/plow-technologies/hspec-golden-aeson#readme";
           description = "Use tests to monitor changes in Aeson serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-leancheck" = callPackage
        ({ mkDerivation, base, hspec, hspec-core, HUnit, leancheck, stdenv
         }:
         mkDerivation {
           pname = "hspec-leancheck";
           version = "0.0.3";
           sha256 = "38de8e98ca16e54370f2387c2ceb22fadab53ada5e9c0505ce9fe23f1b99d852";
           libraryHaskellDepends = [ base hspec hspec-core HUnit leancheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/hspec-leancheck#readme";
           description = "LeanCheck support for the Hspec test framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-megaparsec" = callPackage
        ({ mkDerivation, base, containers, hspec-expectations, megaparsec
         , stdenv
         }:
         mkDerivation {
           pname = "hspec-megaparsec";
           version = "2.0.1";
           sha256 = "cf4d8db8a43ed2da489253e54204f0d5413ae37e03621f358f930600b3b01671";
           libraryHaskellDepends = [
             base containers hspec-expectations megaparsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/hspec-megaparsec";
           description = "Utility functions for testing Megaparsec parsers with Hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-meta" = callPackage
        ({ mkDerivation, ansi-terminal, array, base, call-stack, clock
         , deepseq, directory, filepath, hspec-expectations, HUnit
         , QuickCheck, quickcheck-io, random, setenv, stdenv, stm, time
         , transformers
         }:
         mkDerivation {
           pname = "hspec-meta";
           version = "2.6.0";
           sha256 = "e6d701c9f366f6762eb2a86022d1c7a7d7631c100945491ff53b3a3e86212ad8";
           revision = "1";
           editedCabalFile = "1qh3j6mhlz2bvdk8qc5fa4nqh93q4vqnvxmqqisg4agacnvyp4b2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal array base call-stack clock deepseq directory
             filepath hspec-expectations HUnit QuickCheck quickcheck-io random
             setenv stm time transformers
           ];
           executableHaskellDepends = [
             ansi-terminal array base call-stack clock deepseq directory
             filepath hspec-expectations HUnit QuickCheck quickcheck-io random
             setenv stm time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "A version of Hspec which is used to test Hspec itself";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-need-env" = callPackage
        ({ mkDerivation, base, hspec-core, hspec-expectations, stdenv }:
         mkDerivation {
           pname = "hspec-need-env";
           version = "0.1.0.4";
           sha256 = "8f5ecda15d079cfc5ef7658478c3848827fde8451a0d3f1ba65e415c41966631";
           libraryHaskellDepends = [ base hspec-core hspec-expectations ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/hspec-need-env";
           description = "Read environment variables for hspec tests";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-pg-transact" = callPackage
        ({ mkDerivation, base, bytestring, hspec, pg-transact
         , postgresql-simple, resource-pool, stdenv, text, tmp-postgres
         }:
         mkDerivation {
           pname = "hspec-pg-transact";
           version = "0.1.0.2";
           sha256 = "a5ec2a978a730500f03c15d16eff7e207a4135ebc63afe4cbca7392ad5f01c0c";
           libraryHaskellDepends = [
             base bytestring hspec pg-transact postgresql-simple resource-pool
             text tmp-postgres
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/pg-transact-hspec#readme";
           description = "Helpers for creating database tests with hspec and pg-transact";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-smallcheck" = callPackage
        ({ mkDerivation, base, call-stack, hspec-core, HUnit, smallcheck
         , stdenv
         }:
         mkDerivation {
           pname = "hspec-smallcheck";
           version = "0.5.2";
           sha256 = "9a301a26a439a92b303217545b65792bd8500f25aeccbe48e46dfe914ef58119";
           libraryHaskellDepends = [
             base call-stack hspec-core HUnit smallcheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "SmallCheck support for the Hspec testing framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-wai" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , hspec-core, hspec-expectations, http-types, QuickCheck, stdenv
         , text, transformers, wai, wai-extra
         }:
         mkDerivation {
           pname = "hspec-wai";
           version = "0.9.2";
           sha256 = "055e414bd6531d3454496f9c4bfa1164b861aa9a9102867d7ffeef8d3a92283f";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive hspec-core
             hspec-expectations http-types QuickCheck text transformers wai
             wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-wai#readme";
           description = "Experimental Hspec support for testing WAI applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-wai-json" = callPackage
        ({ mkDerivation, aeson, aeson-qq, base, bytestring
         , case-insensitive, hspec-wai, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "hspec-wai-json";
           version = "0.9.2";
           sha256 = "82e324482e04662121a14fc75232e7359d6d1454623c37253b6550a8ec6ccadc";
           libraryHaskellDepends = [
             aeson aeson-qq base bytestring case-insensitive hspec-wai
             template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-wai#readme";
           description = "Testing JSON APIs with hspec-wai";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsshellscript" = callPackage
        ({ mkDerivation, base, c2hs, directory, parsec, random, stdenv
         , unix
         }:
         mkDerivation {
           pname = "hsshellscript";
           version = "3.4.5";
           sha256 = "7dbfd595832e4ecd7d12d8b36ce8a82192d79a764631c98071440a7daa7ec634";
           libraryHaskellDepends = [ base directory parsec random unix ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.volker-wysk.de/hsshellscript/";
           description = "Haskell for Unix shell scripting tasks";
           license = "LGPL";
         }) {};
      "hstatsd" = callPackage
        ({ mkDerivation, base, bytestring, mtl, network, stdenv, text }:
         mkDerivation {
           pname = "hstatsd";
           version = "0.1";
           sha256 = "446779594257c0fa02d5271c997ee0c22f74f7636d89e34394ad87e5bd285824";
           libraryHaskellDepends = [ base bytestring mtl network text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/hstatsd";
           description = "Quick and dirty statsd interface";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "hsyslog" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hsyslog";
           version = "5.0.2";
           sha256 = "3eec43c8fb42c23d03f1db7b0b594d39cd94275c2284dcd0c64aa4d680bd7ece";
           revision = "1";
           editedCabalFile = "0k1j46nk3z64zw4bqmvw5lgy16ih200m66rv4b6ygjqv7nglqq0b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hsyslog";
           description = "FFI interface to syslog(3) from POSIX.1-2001";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "htaglib" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, taglib, text
         , transformers
         }:
         mkDerivation {
           pname = "htaglib";
           version = "1.2.0";
           sha256 = "4a17c36ff45995c079d71368a3eeabe595ed7efe2b3e4a3dcbff4bed8324005e";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring text transformers ];
           librarySystemDepends = [ taglib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/htaglib";
           description = "Bindings to TagLib, audio meta-data library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) taglib;};
      "html" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "html";
           version = "1.0.1.2";
           sha256 = "0c35495ea33d65e69c69bc7441ec8e1af69fbb43433c2aa3406c0a13a3ab3061";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "HTML combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "html-conduit" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, conduit
         , conduit-extra, containers, resourcet, stdenv, text, transformers
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "html-conduit";
           version = "1.3.2.1";
           sha256 = "3681534cb7fc132a78ac35bd9d415280cf3e7a56a875bc7161375c69d947cca4";
           libraryHaskellDepends = [
             attoparsec base bytestring conduit conduit-extra containers
             resourcet text transformers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/xml";
           description = "Parse HTML documents using xml-conduit datatypes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "html-email-validate" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "html-email-validate";
           version = "0.2.0.0";
           sha256 = "3d2a3ec75b638cec71df57512473052d485dc118aec4662d5a8dae5e95aa6daf";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           description = "Validating an email address against HTML standard";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "html-entities" = callPackage
        ({ mkDerivation, attoparsec, base, base-prelude, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "html-entities";
           version = "1.1.4.3";
           sha256 = "ceeab562184a5921381e41eddd7a91dc98e85431ab445e286320ba3aa0ad5556";
           libraryHaskellDepends = [
             attoparsec base base-prelude text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/html-entities";
           description = "A codec library for HTML-escaped text and HTML-entities";
           license = stdenv.lib.licenses.mit;
         }) {};
      "html-entity-map" = callPackage
        ({ mkDerivation, base, stdenv, text, unordered-containers }:
         mkDerivation {
           pname = "html-entity-map";
           version = "0.1.0.0";
           sha256 = "983600c33e8515e6ca31742d25490fb5a7be02503331963621b0ba5cd70d344c";
           revision = "3";
           editedCabalFile = "0aj61kpf39rhn4d7nk3vwq933b826ywhwklw479y9nkczac5lpz8";
           libraryHaskellDepends = [ base text unordered-containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/html-entity-map";
           description = "Map from HTML5 entity names to the corresponding Unicode text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "htoml" = callPackage
        ({ mkDerivation, aeson, base, containers, old-locale, parsec
         , stdenv, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "htoml";
           version = "1.0.0.3";
           sha256 = "08f8d88a326f80fb55c0abb9431941c3a2a30f2d58f49c94349961ceeb4c856f";
           libraryHaskellDepends = [
             aeson base containers old-locale parsec text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cies/htoml";
           description = "Parser for TOML files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-api-data" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-iso8601, base, base-compat
         , bytestring, containers, cookie, hashable, http-types, stdenv
         , tagged, text, time-compat, unordered-containers, uuid-types
         }:
         mkDerivation {
           pname = "http-api-data";
           version = "0.4.1.1";
           sha256 = "d0aa13e2878e4b92edf71391e775476e7d36a4b5736bd5c701373002b7a823e9";
           revision = "1";
           editedCabalFile = "1dshqb1140nj4h8d750s97gmzb2rk0ppr1rakvqxy1r79mg3m2wr";
           libraryHaskellDepends = [
             attoparsec attoparsec-iso8601 base base-compat bytestring
             containers cookie hashable http-types tagged text time-compat
             unordered-containers uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fizruk/http-api-data";
           description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-client" = callPackage
        ({ mkDerivation, array, base, blaze-builder, bytestring
         , case-insensitive, containers, cookie, deepseq, exceptions
         , filepath, ghc-prim, http-types, memory, mime-types, network
         , network-uri, random, stdenv, stm, streaming-commons, text, time
         , transformers
         }:
         mkDerivation {
           pname = "http-client";
           version = "0.6.4";
           sha256 = "369278ec3d0d89bfdd8bee5bd367b22b7812b98fd62a1121276d728aeeb239d9";
           libraryHaskellDepends = [
             array base blaze-builder bytestring case-insensitive containers
             cookie deepseq exceptions filepath ghc-prim http-types memory
             mime-types network network-uri random stm streaming-commons text
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "An HTTP client engine";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-client-tls" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, connection
         , containers, cryptonite, data-default-class, exceptions
         , http-client, http-types, memory, network, network-uri, stdenv
         , text, tls, transformers
         }:
         mkDerivation {
           pname = "http-client-tls";
           version = "0.3.5.3";
           sha256 = "471abf8f29a909f40b21eab26a410c0e120ae12ce337512a61dae9f52ebb4362";
           revision = "1";
           editedCabalFile = "0llb5k8mz1h6zyv1nd433wwgyjsw7n8x0b1fwib312iiws43sz69";
           libraryHaskellDepends = [
             base bytestring case-insensitive connection containers cryptonite
             data-default-class exceptions http-client http-types memory network
             network-uri text tls transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "http-client backend using the connection package and tls library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-common" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , case-insensitive, directory, mtl, network, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "http-common";
           version = "0.8.2.0";
           sha256 = "2915e77b0d000a617d4c1304fdc46f45b70acc0942670066a95b2c8d4e504593";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring case-insensitive
             directory mtl network text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://research.operationaldynamics.com/projects/http-streams/";
           description = "Common types for HTTP clients and servers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-conduit" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , conduit-extra, http-client, http-client-tls, http-types, mtl
         , resourcet, stdenv, transformers, unliftio-core
         }:
         mkDerivation {
           pname = "http-conduit";
           version = "2.3.7.3";
           sha256 = "7aeddc51bcc8f356fb0c9c9ea901b9fbbe7eef024d59ab77261e41e043843a03";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit conduit-extra http-client
             http-client-tls http-types mtl resourcet transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/http-conduit";
           description = "HTTP client package with conduit interface and HTTPS support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-date" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, stdenv, time
         }:
         mkDerivation {
           pname = "http-date";
           version = "0.0.8";
           sha256 = "0f4c6348487abe4f9d58e43d3c23bdefc7fd1fd5672effd3c7d84aaff05f5427";
           libraryHaskellDepends = [ array attoparsec base bytestring time ];
           doHaddock = false;
           doCheck = false;
           description = "HTTP Date parser/formatter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-directory" = callPackage
        ({ mkDerivation, base, bytestring, html-conduit, http-client
         , http-client-tls, http-date, http-types, network-uri, stdenv, text
         , time, xml-conduit
         }:
         mkDerivation {
           pname = "http-directory";
           version = "0.1.7";
           sha256 = "29e9d9283fc60ac01ba203156e5da211193aa5d5292ee39d29b02602d4517387";
           libraryHaskellDepends = [
             base bytestring html-conduit http-client http-client-tls http-date
             http-types network-uri text time xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/http-directory";
           description = "http directory listing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-download" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, conduit
         , conduit-extra, cryptonite, cryptonite-conduit, directory
         , exceptions, filepath, http-client, http-conduit, http-types
         , memory, path, path-io, retry, rio, rio-prettyprint, stdenv
         }:
         mkDerivation {
           pname = "http-download";
           version = "0.1.0.1";
           sha256 = "83244872d6f62c1e10c69ce0e87159649eefaf895e77cbdfa8f95287975730b8";
           libraryHaskellDepends = [
             base base64-bytestring bytestring conduit conduit-extra cryptonite
             cryptonite-conduit directory exceptions filepath http-client
             http-conduit http-types memory path path-io retry rio
             rio-prettyprint
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/http-download#readme";
           description = "Verified downloads with retries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-link-header" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, errors, http-api-data, network-uri, stdenv
         , text
         }:
         mkDerivation {
           pname = "http-link-header";
           version = "1.0.3.1";
           sha256 = "da26db73df1eaebb20df2837b0352cc62a6c151d467bea9442767fd3d51c2a2d";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion errors
             http-api-data network-uri text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/http-link-header";
           description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "http-media" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , stdenv, utf8-string
         }:
         mkDerivation {
           pname = "http-media";
           version = "0.8.0.0";
           sha256 = "398279d1dff5b60cd8b8c650caceca248ea1184d694bedf5df5426963b2b9c53";
           revision = "3";
           editedCabalFile = "1ndz5x6njl35h73il5c6qpaqd4ynvg21n6k7sb8aq09gfbg544d8";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/zmthy/http-media";
           description = "Processing HTTP Content-Type and Accept headers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-reverse-proxy" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
         , conduit, conduit-extra, containers, http-client, http-types
         , network, resourcet, stdenv, streaming-commons, text, transformers
         , unliftio, wai, wai-logger, word8
         }:
         mkDerivation {
           pname = "http-reverse-proxy";
           version = "0.6.0";
           sha256 = "fb1c913111478384c4f23647810b8c3c01c79e9276a08a1ea46215e4a42dd1a8";
           libraryHaskellDepends = [
             base blaze-builder bytestring case-insensitive conduit
             conduit-extra containers http-client http-types network resourcet
             streaming-commons text transformers unliftio wai wai-logger word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/http-reverse-proxy";
           description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-streams" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, case-insensitive, directory, HsOpenSSL
         , http-common, io-streams, mtl, network, network-uri
         , openssl-streams, stdenv, text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "http-streams";
           version = "0.8.7.1";
           sha256 = "4bd0142aa2f682cacf25ce0290452f142c5eab8d893f15fffebcfcfe1e32864e";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-builder bytestring
             case-insensitive directory HsOpenSSL http-common io-streams mtl
             network network-uri openssl-streams text transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/afcowie/http-streams/";
           description = "An HTTP client using io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-types" = callPackage
        ({ mkDerivation, array, base, bytestring, case-insensitive, stdenv
         , text
         }:
         mkDerivation {
           pname = "http-types";
           version = "0.12.3";
           sha256 = "4e8a4a66477459fa436a331c75e46857ec8026283df984d54f90576cd3024016";
           libraryHaskellDepends = [
             array base bytestring case-insensitive text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aristidb/http-types";
           description = "Generic HTTP types for Haskell (for both client and server code)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http2" = callPackage
        ({ mkDerivation, array, base, bytestring, case-insensitive
         , containers, http-types, network, network-byte-order, psqueues
         , stdenv, stm, time-manager
         }:
         mkDerivation {
           pname = "http2";
           version = "2.0.3";
           sha256 = "ba5105f31d0e83d5bd7f6f6c5deef6b277cd6a82f9701e19920f54e0c00b1093";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base bytestring case-insensitive containers http-types
             network network-byte-order psqueues stm time-manager
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kazu-yamamoto/http2";
           description = "HTTP/2 library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "httpd-shed" = callPackage
        ({ mkDerivation, base, network, network-bsd, network-uri, stdenv }:
         mkDerivation {
           pname = "httpd-shed";
           version = "0.4.1.1";
           sha256 = "590fcfcb401923652bfcaf8c9a81b3bbbe83a4b1d16f7ccfecf7e47f6b6cafa5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base network network-bsd network-uri ];
           doHaddock = false;
           doCheck = false;
           description = "A simple web-server with an interact style API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "human-readable-duration" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "human-readable-duration";
           version = "0.2.1.4";
           sha256 = "cc688783dd3b761bba580cc01ddd41f75d436a21af7dd10e1268c2b0d43adc1b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.esy.fun/yogsototh/human-readable-duration#readme";
           description = "Provide duration helper";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hunit-dejafu" = callPackage
        ({ mkDerivation, base, dejafu, exceptions, HUnit, stdenv }:
         mkDerivation {
           pname = "hunit-dejafu";
           version = "2.0.0.1";
           sha256 = "dfe9126018e4518f4babddb6a759c696665058ddca1eb2a270245c3dd1bcf658";
           libraryHaskellDepends = [ base dejafu exceptions HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Deja Fu support for the HUnit test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hvect" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hvect";
           version = "0.4.0.0";
           sha256 = "cb50ef1a7f189f8c217a7d0d55b5568b2fa9bbe415b14ce114a93d2e1d5e30b6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/hvect";
           description = "Simple strict heterogeneous lists";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hvega" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text, vector }:
         mkDerivation {
           pname = "hvega";
           version = "0.3.0.1";
           sha256 = "81c2039fd53f552345c3bd7f0a65f1774b6fabff817b3ed04ab918103fa61913";
           libraryHaskellDepends = [ aeson base text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DougBurke/hvega";
           description = "Create Vega-Lite visualizations (version 3) in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-balancedparens" = callPackage
        ({ mkDerivation, base, deepseq, hw-bits, hw-excess, hw-prim
         , hw-rankselect-base, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-balancedparens";
           version = "0.2.0.4";
           sha256 = "90200bf22018d12fa7a1fc2dafb56da32d55daff3e298e431650f59a5559db98";
           libraryHaskellDepends = [
             base deepseq hw-bits hw-excess hw-prim hw-rankselect-base vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-balancedparens#readme";
           description = "Balanced parentheses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-bits" = callPackage
        ({ mkDerivation, base, bitvec, bytestring, deepseq, hw-int, hw-prim
         , hw-string-parse, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-bits";
           version = "0.7.1.0";
           sha256 = "34ae831f26ec6d8c36575c3a32e4f80a7683dd93191b67ae92f31728be8d9264";
           libraryHaskellDepends = [
             base bitvec bytestring deepseq hw-int hw-prim hw-string-parse
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-bits#readme";
           description = "Bit manipulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-conduit" = callPackage
        ({ mkDerivation, array, base, bytestring, conduit
         , conduit-combinators, stdenv, time, transformers, unliftio-core
         , word8
         }:
         mkDerivation {
           pname = "hw-conduit";
           version = "0.2.0.6";
           sha256 = "2c871841513859688f6dab906528b1fcbebbe6b094ce1de79fb4b4bda9b6207d";
           libraryHaskellDepends = [
             array base bytestring conduit conduit-combinators time transformers
             unliftio-core word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-conduit#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hw-conduit-merges" = callPackage
        ({ mkDerivation, base, conduit, conduit-extra, mtl, stdenv }:
         mkDerivation {
           pname = "hw-conduit-merges";
           version = "0.2.0.0";
           sha256 = "9bcea270cc01a117c892315fff0dd46de3e58466e9ef82f7571eedad9b58028c";
           revision = "1";
           editedCabalFile = "1azji7zc0ygqjgd2shbqw7p8a2ll2qp3b1yq5i3665448brlwpvc";
           libraryHaskellDepends = [ base conduit conduit-extra mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-conduit-merges#readme";
           description = "Additional merges and joins for Conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-diagnostics" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hw-diagnostics";
           version = "0.0.0.7";
           sha256 = "f197f234f416e4f2b0d00bbca7e71105d3179a857c43d60b0157cc3d6fcbd5f1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-diagnostics#readme";
           description = "Diagnostics library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-dsv" = callPackage
        ({ mkDerivation, base, bits-extra, bytestring, deepseq
         , generic-lens, ghc-prim, hedgehog, hw-bits, hw-prim, hw-rankselect
         , hw-rankselect-base, hw-simd, lens, optparse-applicative
         , resourcet, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-dsv";
           version = "0.3.5";
           sha256 = "a20f1ba1acc654d6f03a7e9cc30ac362d20f63d67b0b105e3a3abb039549be95";
           revision = "2";
           editedCabalFile = "0flmxhc1w38si89wdr9i6x70mc3sl07hrw2b77xabva8dgx7ph3q";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bits-extra bytestring deepseq ghc-prim hw-bits hw-prim
             hw-rankselect hw-rankselect-base hw-simd vector
           ];
           executableHaskellDepends = [
             base bits-extra bytestring deepseq generic-lens ghc-prim hedgehog
             hw-bits hw-prim hw-rankselect hw-rankselect-base hw-simd lens
             optparse-applicative resourcet vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-dsv#readme";
           description = "Unbelievably fast streaming DSV file parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-eliasfano" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, generic-lens
         , hw-bits, hw-int, hw-packed-vector, hw-prim, hw-rankselect
         , hw-rankselect-base, lens, optparse-applicative, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-eliasfano";
           version = "0.1.1.0";
           sha256 = "7b2840c6e6053e0ee6686111eab7ca8328a64aa973cae9975b3a4f71f8cd7460";
           revision = "1";
           editedCabalFile = "100fwgcby3nfmx2ailf8zggq0sbh5fm65x4dxyaayfzs8ngfi5is";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base deepseq hw-bits hw-int hw-packed-vector hw-prim hw-rankselect
             hw-rankselect-base vector
           ];
           executableHaskellDepends = [
             base binary bytestring generic-lens hw-packed-vector lens
             optparse-applicative vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-eliasfano#readme";
           description = "Elias-Fano";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-excess" = callPackage
        ({ mkDerivation, base, hw-bits, hw-prim, hw-rankselect-base, safe
         , stdenv, vector
         }:
         mkDerivation {
           pname = "hw-excess";
           version = "0.2.2.3";
           sha256 = "596092a0649dbbb22370955cf315011df218ab656a02171696bb49b8ec289ce6";
           revision = "1";
           editedCabalFile = "1bll4amizah25w4c6xplndig77hd6jh65q6zjyr5x4vr11vg6xbx";
           libraryHaskellDepends = [
             base hw-bits hw-prim hw-rankselect-base safe vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-excess#readme";
           description = "Excess";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-fingertree" = callPackage
        ({ mkDerivation, base, deepseq, hw-prim, stdenv }:
         mkDerivation {
           pname = "hw-fingertree";
           version = "0.1.1.1";
           sha256 = "4edf530abfbd95d601fc99d5f6b82a3cd3edc73e83b34c904ebee5b5acb5f005";
           libraryHaskellDepends = [ base deepseq hw-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-fingertree#readme";
           description = "Generic finger-tree structure, with example instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-fingertree-strict" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "hw-fingertree-strict";
           version = "0.1.1.3";
           sha256 = "00d5e9565e24a056abd0158f2772e428abe883c459820554ba478140ad48c4bb";
           revision = "1";
           editedCabalFile = "1s7fcimgyf0vskkkms371icazjkkmscv9bkz2ysdhx708bza96v5";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-fingertree-strict#readme";
           description = "Generic strict finger-tree structure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-hedgehog" = callPackage
        ({ mkDerivation, base, hedgehog, stdenv, vector }:
         mkDerivation {
           pname = "hw-hedgehog";
           version = "0.1.0.5";
           sha256 = "71cda358bcc60392895b9a97107c7a16775e0f7a33671345cdf633b67c7dcef2";
           libraryHaskellDepends = [ base hedgehog vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-hedgehog#readme";
           description = "Extra hedgehog functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-hspec-hedgehog" = callPackage
        ({ mkDerivation, base, call-stack, hedgehog, hspec, HUnit, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "hw-hspec-hedgehog";
           version = "0.1.0.9";
           sha256 = "7eae165a196163993c8c3168f840813a4184b2db81a2ae68efe8be83ddf9cce5";
           libraryHaskellDepends = [
             base call-stack hedgehog hspec HUnit transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-hspec-hedgehog#readme";
           description = "Interoperability between hspec and hedgehog";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-int" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hw-int";
           version = "0.0.0.4";
           sha256 = "3f22951262e824a6801e4ceb9c01bf735b57a2e2ba8cec3834f0993dc474a046";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-int#readme";
           description = "Additional facilities for Integers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-ip" = callPackage
        ({ mkDerivation, appar, base, binary, bytestring, containers
         , generic-lens, hw-bits, iproute, lens, optparse-applicative
         , stdenv, text
         }:
         mkDerivation {
           pname = "hw-ip";
           version = "2.3.4.2";
           sha256 = "69f5eb3286a17003b43813abbff7a454acb5897ea0f15d706592749890e71708";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             appar base containers generic-lens hw-bits iproute text
           ];
           executableHaskellDepends = [
             appar base binary bytestring generic-lens lens optparse-applicative
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-ip#readme";
           description = "Library for manipulating IP addresses and CIDR blocks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-json" = callPackage
        ({ mkDerivation, ansi-wl-pprint, array, attoparsec, base
         , bits-extra, bytestring, dlist, generic-lens, hw-balancedparens
         , hw-bits, hw-json-simd, hw-mquery, hw-parser, hw-prim
         , hw-rankselect, hw-rankselect-base, hw-simd, lens, mmap
         , optparse-applicative, stdenv, text, vector, word8
         }:
         mkDerivation {
           pname = "hw-json";
           version = "1.0.0.2";
           sha256 = "5a96d09f80c6e758e9c8f6486e5c9786d953b4225c8d6f2e6cbb2ad8dd446351";
           revision = "1";
           editedCabalFile = "1laxwrcjdjrpym4gghnqa39xvdvbxsp2sbpzcc703ac3kj7v2b6h";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint array attoparsec base bits-extra bytestring dlist
             hw-balancedparens hw-bits hw-mquery hw-parser hw-prim hw-rankselect
             hw-rankselect-base hw-simd mmap text vector word8
           ];
           executableHaskellDepends = [
             base bytestring dlist generic-lens hw-balancedparens hw-json-simd
             hw-mquery hw-prim hw-rankselect hw-rankselect-base lens mmap
             optparse-applicative vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-json#readme";
           description = "Memory efficient JSON parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-json-simd" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, hw-prim, lens
         , optparse-applicative, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-json-simd";
           version = "0.1.0.4";
           sha256 = "4a23de88454d5c076c1623c186bee8c9a6c1e2e8d58945b1291e09e5ff3ef3e2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring hw-prim lens vector ];
           libraryToolDepends = [ c2hs ];
           executableHaskellDepends = [
             base bytestring hw-prim lens optparse-applicative vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-json-simd#readme";
           description = "SIMD-based JSON semi-indexer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-mquery" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, dlist, lens, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "hw-mquery";
           version = "0.2.0.2";
           sha256 = "327a50c2ddf1d106cd7350166fdf09b37b4232a9d24bb7e0bc8079366cf49ded";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base dlist lens semigroups
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-mquery#readme";
           description = "Monadic query DSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-packed-vector" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, hw-bits, hw-prim
         , stdenv, vector
         }:
         mkDerivation {
           pname = "hw-packed-vector";
           version = "0.0.0.3";
           sha256 = "63ffce6d42a7d88d41cc0a0c9fc45a6bb0bd2d81585bf361abce28af490f02d0";
           libraryHaskellDepends = [
             base bytestring deepseq hw-bits hw-prim vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-packed-vector#readme";
           description = "Packed Vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-parser" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, hw-prim, stdenv
         , text
         }:
         mkDerivation {
           pname = "hw-parser";
           version = "0.1.0.2";
           sha256 = "317c0ad35361835c8779593f284609d32d3784ecd2f5fe1ec64b0a3d489a0d9c";
           libraryHaskellDepends = [
             attoparsec base bytestring hw-prim text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-parser#readme";
           description = "Simple parser support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-prim" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, ghc-prim, mmap
         , semigroups, stdenv, transformers, unliftio-core, vector
         }:
         mkDerivation {
           pname = "hw-prim";
           version = "0.6.2.39";
           sha256 = "4f0841600aab06250602189f94e33d11ec246db44c9cc4ffaa6a2c57f9f3c419";
           libraryHaskellDepends = [
             base bytestring deepseq ghc-prim mmap semigroups transformers
             unliftio-core vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-prim#readme";
           description = "Primitive functions and data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-rankselect" = callPackage
        ({ mkDerivation, base, deepseq, directory, generic-lens
         , hw-balancedparens, hw-bits, hw-prim, hw-rankselect-base, lens
         , mmap, mtl, optparse-applicative, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-rankselect";
           version = "0.13.0.0";
           sha256 = "fbe3b8912ebe8bc25329141f3f6cd2cd50c82bcafc6ec95e713f4e755ed68d8d";
           revision = "1";
           editedCabalFile = "17f9zdy7620d36mrrcakpr9rhzzr7rkv8hd5n47cqllmhzvns5mg";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base deepseq hw-balancedparens hw-bits hw-prim hw-rankselect-base
             vector
           ];
           executableHaskellDepends = [
             base directory generic-lens hw-bits hw-prim hw-rankselect-base lens
             mmap mtl optparse-applicative vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-rankselect#readme";
           description = "Rank-select";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-rankselect-base" = callPackage
        ({ mkDerivation, base, bits-extra, bitvec, hw-bits, hw-int, hw-prim
         , hw-string-parse, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-rankselect-base";
           version = "0.3.3.0";
           sha256 = "ab44305ead0ba9c460cd86395ad206fcfce77f3610d7759b26f5b19f629d049e";
           revision = "1";
           editedCabalFile = "03svpzjia8mbgy33lhmjhwpd6yq0n97l3fkmfnpyi3blc3yb3bd0";
           libraryHaskellDepends = [
             base bits-extra bitvec hw-bits hw-int hw-prim hw-string-parse
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-rankselect-base#readme";
           description = "Rank-select base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-simd" = callPackage
        ({ mkDerivation, base, bits-extra, bytestring, c2hs, deepseq
         , hw-bits, hw-prim, hw-rankselect, hw-rankselect-base, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hw-simd";
           version = "0.1.1.5";
           sha256 = "cbe3475591e38ffe64db5fbc26999091d6f56d2a84c86c20976bf577221c1e5a";
           libraryHaskellDepends = [
             base bits-extra bytestring deepseq hw-bits hw-prim hw-rankselect
             hw-rankselect-base vector
           ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-works/hw-simd#readme";
           description = "SIMD library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-streams" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, hw-bits, hw-prim, mmap
         , primitive, semigroups, stdenv, transformers, vector
         }:
         mkDerivation {
           pname = "hw-streams";
           version = "0.0.0.12";
           sha256 = "a40673d42271b69ee630b9a85699f9cc043c06761af5e6d3db4938d81fb1fa20";
           revision = "1";
           editedCabalFile = "1y5sw9mgkxwvgf91hl22p3q5kxy99phwfmx2lh87339w7d5bjdbw";
           libraryHaskellDepends = [
             base bytestring ghc-prim hw-bits hw-prim mmap primitive semigroups
             transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-streams#readme";
           description = "Primitive functions and data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-string-parse" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hw-string-parse";
           version = "0.0.0.4";
           sha256 = "64a1ebf8d311e255f293c40febfb346da23a55a454b67f2d5e33de1cb7e9f2b7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-string-parse#readme";
           description = "String parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-succinct" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, conduit, containers
         , hw-balancedparens, hw-bits, hw-prim, hw-rankselect
         , hw-rankselect-base, mmap, mono-traversable, stdenv, text, vector
         , word8
         }:
         mkDerivation {
           pname = "hw-succinct";
           version = "0.1.0.1";
           sha256 = "002c578c1ff7a33cbef089b2a943218777c14125629f6bf63dea9e7c8e3749db";
           libraryHaskellDepends = [
             attoparsec base bytestring conduit containers hw-balancedparens
             hw-bits hw-prim hw-rankselect hw-rankselect-base mmap
             mono-traversable text vector word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-succinct#readme";
           description = "Succint datastructures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hweblib" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, mtl
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "hweblib";
           version = "0.6.3";
           sha256 = "1e8ee12baac496d56831935a60e78f54eb43d2b7268bf7d31acb6b9a63e9b50d";
           libraryHaskellDepends = [
             attoparsec base bytestring containers mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aycanirican/hweblib";
           description = "Haskell Web Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hxt" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , directory, filepath, hxt-charproperties, hxt-regex-xmlschema
         , hxt-unicode, mtl, network-uri, parsec, stdenv
         }:
         mkDerivation {
           pname = "hxt";
           version = "9.3.1.18";
           sha256 = "721809d89bbcaf29b2bbe3b9cdbb54e6d6a30afe7509186061898f7e8b996620";
           configureFlags = [ "-fnetwork-uri" ];
           libraryHaskellDepends = [
             base binary bytestring containers deepseq directory filepath
             hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
             parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "A collection of tools for processing XML with Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-charproperties" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hxt-charproperties";
           version = "9.4.0.0";
           sha256 = "f50ea1d5528025400507f9b181596f7b277e645a1e33ebbc659be22b244468ae";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Character properties and classes for XML and Unicode";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-css" = callPackage
        ({ mkDerivation, base, hxt, parsec, split, stdenv }:
         mkDerivation {
           pname = "hxt-css";
           version = "0.1.0.3";
           sha256 = "0244fc145d5923df0522ad80949e9b221b01a028c755ebfc4740339881ef65b7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base hxt parsec split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hxt-css";
           description = "CSS selectors for HXT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hxt-curl" = callPackage
        ({ mkDerivation, base, bytestring, curl, hxt, parsec, stdenv }:
         mkDerivation {
           pname = "hxt-curl";
           version = "9.1.1.1";
           sha256 = "cdc1cc8bf9b8699cabdee965c9737d497c199b5cf82eabc66a5fe3f2ffb3c5ea";
           libraryHaskellDepends = [ base bytestring curl hxt parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "LibCurl interface for HXT";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "hxt-expat" = callPackage
        ({ mkDerivation, base, bytestring, hexpat, hxt, stdenv }:
         mkDerivation {
           pname = "hxt-expat";
           version = "9.1.1";
           sha256 = "10d9c43c20c82e879fbc06944fcfed373f8b43bd3e0a44f9c712db30a27022d6";
           libraryHaskellDepends = [ base bytestring hexpat hxt ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
           description = "Expat parser for HXT";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "hxt-http" = callPackage
        ({ mkDerivation, base, bytestring, HTTP, hxt, network, network-uri
         , parsec, stdenv
         }:
         mkDerivation {
           pname = "hxt-http";
           version = "9.1.5.2";
           sha256 = "6fa19d03991d53c34f4525a4fdfaafde56dd48459093b4502832a1fdd9dfdd0b";
           configureFlags = [ "-fnetwork-uri" ];
           libraryHaskellDepends = [
             base bytestring HTTP hxt network network-uri parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Interface to native Haskell HTTP package HTTP";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-regex-xmlschema" = callPackage
        ({ mkDerivation, base, bytestring, hxt-charproperties, parsec
         , stdenv, text
         }:
         mkDerivation {
           pname = "hxt-regex-xmlschema";
           version = "9.2.0.3";
           sha256 = "f4743ba65498d6001cdfcf5cbc3317d4bc43941be5c7030b60beb83408c892b0";
           revision = "1";
           editedCabalFile = "0vg9vnfjmq1ma6zwwv4yvfih6wbslksvsvy9b41i4f81l0hh7ia8";
           libraryHaskellDepends = [
             base bytestring hxt-charproperties parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
           description = "A regular expression library for W3C XML Schema regular expressions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-tagsoup" = callPackage
        ({ mkDerivation, base, hxt, hxt-charproperties, hxt-unicode, stdenv
         , tagsoup
         }:
         mkDerivation {
           pname = "hxt-tagsoup";
           version = "9.1.4";
           sha256 = "d77b290d63acf0ac8e5a07c5c69753f9984b97e0c9d2c0befadd7dd5b144b283";
           libraryHaskellDepends = [
             base hxt hxt-charproperties hxt-unicode tagsoup
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "TagSoup parser for HXT";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "hxt-unicode" = callPackage
        ({ mkDerivation, base, hxt-charproperties, stdenv }:
         mkDerivation {
           pname = "hxt-unicode";
           version = "9.0.2.4";
           sha256 = "7b5823f3bd94b57022d9d84ab3555303653c5121eaaef2ee1fd4918f3c434466";
           libraryHaskellDepends = [ base hxt-charproperties ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hybrid-vectors" = callPackage
        ({ mkDerivation, base, deepseq, primitive, semigroups, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hybrid-vectors";
           version = "0.2.2";
           sha256 = "41c6c371df64b9083354e66101ad8c92f87458474fed2a149e4632db644f86d7";
           revision = "1";
           editedCabalFile = "16wpgh7cxgmap5acyccbff02b2jvhqiad5m3fknribpbahvmkk88";
           libraryHaskellDepends = [
             base deepseq primitive semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/hybrid-vectors";
           description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hyper" = callPackage
        ({ mkDerivation, base, blaze-html, deepseq, stdenv, text }:
         mkDerivation {
           pname = "hyper";
           version = "0.1.0.3";
           sha256 = "1a744c2bfa3f386922c5c30a0507a7b6b688220d0c87d2db8cbebda7faae822d";
           libraryHaskellDepends = [ base blaze-html deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HeinrichApfelmus/hyper-haskell";
           description = "Display class for the HyperHaskell graphical Haskell interpreter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hyperloglog" = callPackage
        ({ mkDerivation, approximate, base, binary, bits, bytes, Cabal
         , cabal-doctest, cereal, cereal-vector, comonad, deepseq
         , distributive, hashable, lens, reflection, semigroupoids
         , semigroups, siphash, stdenv, tagged, vector
         }:
         mkDerivation {
           pname = "hyperloglog";
           version = "0.4.3";
           sha256 = "8dbb30a58799b1bf145e82b71be0f782b60e9ef55d0c5fd3d2a0c28028cc3f64";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             approximate base binary bits bytes cereal cereal-vector comonad
             deepseq distributive hashable lens reflection semigroupoids
             semigroups siphash tagged vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/hyperloglog";
           description = "An approximate streaming (constant space) unique object counter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hyphenation" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cabal-doctest, containers
         , stdenv, text, unordered-containers, zlib
         }:
         mkDerivation {
           pname = "hyphenation";
           version = "0.8";
           sha256 = "31fa47011c27cdad034fb691f232209b857774489a2eaf189e075bf9fced8925";
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bytestring containers text unordered-containers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/hyphenation";
           description = "Configurable Knuth-Liang hyphenation";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "hyraxAbif" = callPackage
        ({ mkDerivation, base, binary, bytestring, directory, filepath
         , hscolour, pretty-show, protolude, stdenv, text
         }:
         mkDerivation {
           pname = "hyraxAbif";
           version = "0.2.3.15";
           sha256 = "013a861a57bb71af8394ee68404d52411ae65d627e36d0c1903194331fa6d5f1";
           revision = "1";
           editedCabalFile = "07i4ippga6cnwr9yl6nkrhakl9sim73fprf29lnmsvdc8ynbifcd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring directory filepath protolude text
           ];
           executableHaskellDepends = [
             base bytestring hscolour pretty-show protolude text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hyraxbio/hyraxAbif/#readme";
           description = "Modules for parsing, generating and manipulating AB1 files";
           license = "(BSD-3-Clause OR Apache-2.0)";
         }) {};
      "iconv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "iconv";
           version = "0.4.1.3";
           sha256 = "36425168e3314bc83ba5ee95152872d52e94ee0f9503f3591f84d458e005b554";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "String encoding conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "identicon" = callPackage
        ({ mkDerivation, base, bytestring, JuicyPixels, stdenv }:
         mkDerivation {
           pname = "identicon";
           version = "0.2.2";
           sha256 = "3679b4fcc0a5bcc93b6ed2009f43e3ec87bf9549aee3eef182f7403d0c10f263";
           revision = "3";
           editedCabalFile = "0vya6zm3nnbdv3wmj3dwqwwjgsagql8q17078knhjddv2lm8m49q";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring JuicyPixels ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/identicon";
           description = "Flexible generation of identicons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ieee754" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ieee754";
           version = "0.8.0";
           sha256 = "0e2dff9c37f59acf5c64f978ec320005e9830f276f9f314e4bfed3f482289ad1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/patperry/hs-ieee754";
           description = "Utilities for dealing with IEEE floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "if" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "if";
           version = "0.1.0.0";
           sha256 = "28f673e867dbe0f51324d97fcb7884673a34912593746520a470116b167a141d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/if";
           description = "(?) and (?>) conditional operator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iff" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "iff";
           version = "0.0.6";
           sha256 = "6b8845808481307e2d374fd8d17e82a5de1284e612cf8ade27db8785e9e12837";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/iff/";
           description = "Constructing and dissecting IFF files";
           license = "GPL";
         }) {};
      "ihaskell" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring, cereal
         , cmdargs, containers, directory, filepath, ghc, ghc-boot
         , ghc-parser, ghc-paths, haskeline, haskell-src-exts, hlint
         , http-client, http-client-tls, ipython-kernel, mtl, parsec
         , process, random, shelly, split, stdenv, stm, strict, text, time
         , transformers, unix, unordered-containers, utf8-string, vector
         }:
         mkDerivation {
           pname = "ihaskell";
           version = "0.10.0.2";
           sha256 = "ab63ad0a9fcff7b32581597e67c5f6f2c2bb0043e7d1f00f29f6fc2227225306";
           revision = "1";
           editedCabalFile = "0jhgnw5wrpmbp3g6zllwlmmyzyja5ry8i7dss7q8gpbvk2inlfl3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring cereal cmdargs containers
             directory filepath ghc ghc-boot ghc-parser ghc-paths haskeline
             haskell-src-exts hlint http-client http-client-tls ipython-kernel
             mtl parsec process random shelly split stm strict text time
             transformers unix unordered-containers utf8-string vector
           ];
           executableHaskellDepends = [
             aeson base bytestring containers directory ghc ipython-kernel
             process strict text transformers unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gibiansky/IHaskell";
           description = "A Haskell backend kernel for the IPython project";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihs" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "ihs";
           version = "0.1.0.3";
           sha256 = "13bf923ad64d5dd1c517a64c0fd017fe94951a18ebbfe7e587b11e3ad6ebd5fd";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/ihs";
           description = "Interpolated Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "ilist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ilist";
           version = "0.3.1.0";
           sha256 = "e898e1dd1077e5a268f66e2de15f15ef64eddac94133954c9e054d59092afe97";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/ilist";
           description = "Optimised list functions for doing index-related things";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "imagesize-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , exceptions, stdenv
         }:
         mkDerivation {
           pname = "imagesize-conduit";
           version = "1.1";
           sha256 = "31c5784578b305921b89f7ab6fca35747e5a35f12884770b78c31e3a0a01ac19";
           revision = "3";
           editedCabalFile = "0p4zmizr01pg3d7gb0q88j1alvvlzbdvzyf1wbgajng68a4g0li9";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra exceptions
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/silkapp/imagesize-conduit";
           description = "Determine the size of some common image formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "immortal" = callPackage
        ({ mkDerivation, base, stdenv, stm, unliftio-core }:
         mkDerivation {
           pname = "immortal";
           version = "0.3";
           sha256 = "11c89db97f33c8bbfe6f72c728c68135a247608ceb2335dfb7ac6679acb41f88";
           libraryHaskellDepends = [ base stm unliftio-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/immortal";
           description = "Spawn threads that never die (unless told to do so)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "include-file" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, random, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "include-file";
           version = "0.1.0.4";
           sha256 = "5b1f93482bc5ed85bbe04a1c63fa8bee6d4156b79cee43f812db92765fa1666e";
           setupHaskellDepends = [ base bytestring Cabal random ];
           libraryHaskellDepends = [
             base bytestring random template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Inclusion of files in executables at compile-time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "incremental-parser" = callPackage
        ({ mkDerivation, base, monoid-subclasses, stdenv }:
         mkDerivation {
           pname = "incremental-parser";
           version = "0.3.3";
           sha256 = "d15c43000e923d79593c2b39e196e7f780c2f22d955aa34742fb0813ecfab8f8";
           libraryHaskellDepends = [ base monoid-subclasses ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blamario/incremental-parser";
           description = "Generic parser library capable of providing partial results from partial input";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "indentation-core" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "indentation-core";
           version = "0.0.0.2";
           sha256 = "099a3e3bb82c6af1b99172722bb01e954d1722d468e2d0722415f4f479993fd0";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/adamsmd/indentation";
           description = "Indentation sensitive parsing combinators core library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "indentation-parsec" = callPackage
        ({ mkDerivation, base, indentation-core, mtl, parsec, stdenv }:
         mkDerivation {
           pname = "indentation-parsec";
           version = "0.0.0.2";
           sha256 = "0e37846ef1ea045d6c365be38f2b55ff7dd36e960f21ba28e879137874c8f2d4";
           libraryHaskellDepends = [ base indentation-core mtl parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/adamsmd/indentation";
           description = "Indentation sensitive parsing combinators for Parsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "indents" = callPackage
        ({ mkDerivation, base, mtl, parsec, stdenv }:
         mkDerivation {
           pname = "indents";
           version = "0.5.0.1";
           sha256 = "a1582cc6b705170bab6ea5cbe360530641ae94a31714a61b56c5f2067ee4ec36";
           libraryHaskellDepends = [ base mtl parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/indents";
           description = "indentation sensitive parser-combinators for parsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "indexed" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "indexed";
           version = "0.1.3";
           sha256 = "ef84090ec6bf79e7dc6e9d570fc370c9eea6cd251d3c023979f6e1f8d3fbf5c2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/reinerp/indexed";
           description = "Haskell98 indexed functors, monads, comonads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "indexed-list-literals" = callPackage
        ({ mkDerivation, base, Only, stdenv }:
         mkDerivation {
           pname = "indexed-list-literals";
           version = "0.2.1.2";
           sha256 = "d896ae5b3919a7a9fecdd9336e8f330d055fbdae4821be04b7c1266ccaa07d10";
           revision = "1";
           editedCabalFile = "198hmw2m3539vmh3s58d33h6vl5d0fqpdms8rp8cwj196diipjlc";
           libraryHaskellDepends = [ base Only ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/davidm-d/indexed-list-literals";
           description = "Type safe indexed list literals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "infer-license" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, text
         , text-metrics
         }:
         mkDerivation {
           pname = "infer-license";
           version = "0.2.0";
           sha256 = "12e6fe616575159c03cf6fd4a4f30021ecf264a529ab4e4edd6e96e296a98e72";
           libraryHaskellDepends = [
             base directory filepath text text-metrics
           ];
           doHaddock = false;
           doCheck = false;
           description = "Infer software license from a given license file";
           license = stdenv.lib.licenses.mit;
         }) {};
      "inflections" = callPackage
        ({ mkDerivation, base, exceptions, megaparsec, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "inflections";
           version = "0.4.0.5";
           sha256 = "6b5bc532f559df769f1a97747e6770ba0777e0efd24c96c22ceb6da1781cb839";
           libraryHaskellDepends = [
             base exceptions megaparsec text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/inflections-hs";
           description = "Inflections library for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "influxdb" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
         , cabal-doctest, clock, containers, foldl, http-client, http-types
         , lens, network, optional-args, scientific, stdenv, tagged, text
         , time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "influxdb";
           version = "1.7.1.1";
           sha256 = "a8236bd703503a88e8421a74ba9e23afd3eb8d7b918c50e828acd36bdfa21f97";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec base bytestring clock containers foldl http-client
             http-types lens network optional-args scientific tagged text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/influxdb-haskell";
           description = "Haskell client library for InfluxDB";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ini" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ini";
           version = "0.4.1";
           sha256 = "14293c2a209f938cc3e779132f3411c330636a91b1a58549a154c025518c7c57";
           libraryHaskellDepends = [
             attoparsec base text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chrisdone/ini";
           description = "Quick and easy configuration files in the INI format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inj" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "inj";
           version = "1.0";
           sha256 = "4012310e5e80d4f4eb11ec73aeda311f7cb94a5c68e7393bfb3b99513cd61ab6";
           doHaddock = false;
           doCheck = false;
           description = "A class for injective (one-to-one) functions";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "inline-c" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, bytestring, containers
         , hashable, mtl, parsec, parsers, stdenv, template-haskell
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "inline-c";
           version = "0.7.0.1";
           sha256 = "daf2f2f286ff549e319ebc9f9491ea809f27996e234ac99a5e2eecc8e35e4ca7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base bytestring containers hashable mtl parsec
             parsers template-haskell transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Write Haskell source files including C code inline. No FFI required.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "inline-c-cpp" = callPackage
        ({ mkDerivation, base, inline-c, safe-exceptions, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "inline-c-cpp";
           version = "0.3.0.3";
           sha256 = "964ea5c683f6c48f979ab5747016ccd734fe4b00b2fa268eba0e03035beabceb";
           libraryHaskellDepends = [
             base inline-c safe-exceptions template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lets you embed C++ code into Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "inline-r" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , data-default-class, deepseq, exceptions, inline-c, mtl, pretty
         , primitive, process, R, reflection, setenv, singletons, stdenv
         , template-haskell, text, th-lift, th-orphans, transformers, unix
         , vector
         }:
         mkDerivation {
           pname = "inline-r";
           version = "0.10.2";
           sha256 = "244f2f4fda69f9594259ef92c3310da38b77a745bf3c1feb0700f54a5aab8dd3";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default-class deepseq
             exceptions inline-c mtl pretty primitive process reflection setenv
             singletons template-haskell text th-lift th-orphans transformers
             unix vector
           ];
           libraryPkgconfigDepends = [ R ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://tweag.github.io/HaskellR";
           description = "Seamlessly call R from Haskell and vice versa. No FFI required.";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) R;};
      "inliterate" = callPackage
        ({ mkDerivation, base, blaze-html, cheapskate, containers
         , haskell-src-exts, lucid, lucid-extras, plotlyhs, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "inliterate";
           version = "0.1.0";
           sha256 = "2d96cc64e3b923003668c88fd73c30d5da09a2c9e2fb6af62912f54478d1e39f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html cheapskate containers haskell-src-exts lucid
             lucid-extras plotlyhs text time
           ];
           executableHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/diffusionkinetics/open/inliterate";
           description = "Interactive literate programming";
           license = stdenv.lib.licenses.mit;
         }) {};
      "insert-ordered-containers" = callPackage
        ({ mkDerivation, aeson, base, base-compat, hashable, lens
         , semigroupoids, semigroups, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "insert-ordered-containers";
           version = "0.2.2";
           sha256 = "4af6b920bfdf0e3135a385075946f26752dec4142917625ae8f6ba76c18372c6";
           revision = "1";
           editedCabalFile = "1hlinc8nnjlzc6ds3wf8jvkihpcbhz2dk0rqxq1ns0c5zbbhnylq";
           libraryHaskellDepends = [
             aeson base base-compat hashable lens semigroupoids semigroups text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/insert-ordered-containers#readme";
           description = "Associative containers retaining insertion order for traversals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inspection-testing" = callPackage
        ({ mkDerivation, base, containers, ghc, mtl, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "inspection-testing";
           version = "0.4.2.2";
           sha256 = "d78fcf2129ee1bccd184069e98deacaf7f41afaa292f8aa082a6477353faf7ae";
           libraryHaskellDepends = [
             base containers ghc mtl template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nomeata/inspection-testing";
           description = "GHC plugin to do inspection testing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "instance-control" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "instance-control";
           version = "0.1.2.0";
           sha256 = "7d6dd381d8fb449584cdb016464cd02794e3ccc527c0589aab16d8a2221c6b73";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lazac/instance-control";
           description = "Controls how the compiler searches for instances using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "int-cast" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "int-cast";
           version = "0.2.0.0";
           sha256 = "e006956a08b751a996a92828ccb728b7237c9c435c4b35b5169eb8d44ac51969";
           revision = "2";
           editedCabalFile = "1fhc91170q9q9k628wc3dqzdvxfjs97jzg5x7g0ndaqnh60l8cy5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/int-cast";
           description = "Checked conversions between integral types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "integer-logarithms" = callPackage
        ({ mkDerivation, array, base, ghc-prim, integer-gmp, stdenv }:
         mkDerivation {
           pname = "integer-logarithms";
           version = "1.0.3";
           sha256 = "5ae262018698af35bb74916fad170d96d3eb44669c72ed36db9a19a3392cec16";
           revision = "2";
           editedCabalFile = "0a6j3313vz7n7dn8abddyib4jggblaq89f87ib4imdwjxjajbm33";
           libraryHaskellDepends = [ array base ghc-prim integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/integer-logarithms";
           description = "Integer logarithms";
           license = stdenv.lib.licenses.mit;
         }) {};
      "integration" = callPackage
        ({ mkDerivation, base, parallel, stdenv }:
         mkDerivation {
           pname = "integration";
           version = "0.2.1";
           sha256 = "0c27385eadc10a580e78f7b7d4bc919c346b2c9b1e73aea7e7804d824d53582f";
           libraryHaskellDepends = [ base parallel ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ekmett/integration";
           description = "Fast robust numeric integration via tanh-sinh quadrature";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "intern" = callPackage
        ({ mkDerivation, array, base, bytestring, hashable, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "intern";
           version = "0.9.2";
           sha256 = "93a3b20e96dad8d83c9145dfc68bd9d2a6a72c9f64e4a7bc257d330070f42e20";
           revision = "1";
           editedCabalFile = "1mav591qx20p9dx4rg4xwpavqw8rciva82n7q0icdgvc1ayy7sl5";
           libraryHaskellDepends = [
             array base bytestring hashable text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/intern/";
           description = "Efficient hash-consing for arbitrary data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "interpolate" = callPackage
        ({ mkDerivation, base, haskell-src-meta, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "interpolate";
           version = "0.2.0";
           sha256 = "6e112006073f2d91e7e93432ccb147b79a21fcc21a9dedd0d8c38cef51926abe";
           libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/interpolate#readme";
           description = "String interpolation done right";
           license = stdenv.lib.licenses.mit;
         }) {};
      "interpolatedstring-perl6" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, haskell-src-meta, process
         , stdenv, template-haskell, text
         }:
         mkDerivation {
           pname = "interpolatedstring-perl6";
           version = "1.0.2";
           sha256 = "5a8b1e8b65253ce1e1b07b9de1075e9306483160a7b419d5f126d7e2744b7bb7";
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [
             base bytestring haskell-src-meta template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "interpolatedstring-qq2" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-meta, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "interpolatedstring-qq2";
           version = "0.1.0.0";
           sha256 = "5d36045735120a825dd6f129b7a14f6c4102f6fdb0ab40dd0ed4c1dc6ec0fd34";
           libraryHaskellDepends = [
             base bytestring haskell-src-meta template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isovector/interpolatedstring-qq2#readme";
           description = "QuasiQuoter for multi-line interpolated strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "interpolation" = callPackage
        ({ mkDerivation, base, stdenv, utility-ht }:
         mkDerivation {
           pname = "interpolation";
           version = "0.1.1.1";
           sha256 = "c5735cf6cde9439188890290e2d01dd40fabca670ecf17b70e12dc9e8aa33d20";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/interpolation/";
           description = "piecewise linear and cubic Hermite interpolation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "interpolator" = callPackage
        ({ mkDerivation, aeson, base, containers, either, mono-traversable
         , mtl, product-profunctors, profunctors, QuickCheck, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "interpolator";
           version = "1.0.0";
           sha256 = "675195c365ef1bddcbc4f21d5873f3b2db1c27e2c20cf2542da2a8f598d76a4e";
           libraryHaskellDepends = [
             aeson base containers either mono-traversable mtl
             product-profunctors profunctors QuickCheck template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tvision-insights/interpolator";
           description = "Runtime interpolation of environment variables in records using profunctors";
           license = stdenv.lib.licenses.mit;
         }) {};
      "intervals" = callPackage
        ({ mkDerivation, array, base, Cabal, cabal-doctest, distributive
         , ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "intervals";
           version = "0.8.1";
           sha256 = "9ce3bf9d31b9ab2296fccc25031fd52e1c3e4abeca5d3bb452a725b586eb7e03";
           revision = "4";
           editedCabalFile = "1qx3q0v13l1zaln9zdk8chxpxhshbz5x0vqm0qda7d1kpv7h6a7r";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ array base distributive ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/intervals";
           description = "Interval Arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "intro" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, dlist
         , extra, hashable, mtl, safe, stdenv, text, transformers
         , unordered-containers, writer-cps-mtl
         }:
         mkDerivation {
           pname = "intro";
           version = "0.5.2.1";
           sha256 = "e8e2124179c749e597998628bf2cd167d15e977db0f1105f5856a02e8bbaac44";
           revision = "1";
           editedCabalFile = "19zndrl4rgzjrg97cbc2cyiqih15gaijgibz0vppphcbmn7v9fl8";
           libraryHaskellDepends = [
             base bytestring containers deepseq dlist extra hashable mtl safe
             text transformers unordered-containers writer-cps-mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/intro#readme";
           description = "Safe and minimal prelude";
           license = stdenv.lib.licenses.mit;
         }) {};
      "intset-imperative" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv }:
         mkDerivation {
           pname = "intset-imperative";
           version = "0.1.0.0";
           sha256 = "ae549187370f562724f453965519abf65abd3159f70b4715aa6079da48099042";
           libraryHaskellDepends = [ base deepseq primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/haskell-intset-imperative#readme";
           description = "An imperative integer set written in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "invariant" = callPackage
        ({ mkDerivation, array, base, bifunctors, comonad, containers
         , contravariant, ghc-prim, profunctors, StateVar, stdenv, stm
         , tagged, template-haskell, th-abstraction, transformers
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "invariant";
           version = "0.5.3";
           sha256 = "d73e5def38da9fdd85def073857aa5f4b1d3b0c2df05c43d58a677cca02d440c";
           revision = "1";
           editedCabalFile = "0sjy375npw6lqcckhyicizzv91v8jh3ca5yjkygiaj22bw5k8c74";
           libraryHaskellDepends = [
             array base bifunctors comonad containers contravariant ghc-prim
             profunctors StateVar stm tagged template-haskell th-abstraction
             transformers transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nfrisby/invariant-functors";
           description = "Haskell98 invariant functors";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "invertible" = callPackage
        ({ mkDerivation, base, haskell-src-meta, invariant, lens
         , partial-isomorphisms, semigroupoids, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "invertible";
           version = "0.2.0.5";
           sha256 = "0a0adaa1f371f739fd2c506ff2ba3c4db278bbdfda0171bd8329d678c15b8dbb";
           libraryHaskellDepends = [
             base haskell-src-meta invariant lens partial-isomorphisms
             semigroupoids template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "bidirectional arrows, bijective functions, and invariant functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "invertible-grammar" = callPackage
        ({ mkDerivation, base, bifunctors, containers, mtl, prettyprinter
         , profunctors, semigroups, stdenv, tagged, template-haskell, text
         , transformers
         }:
         mkDerivation {
           pname = "invertible-grammar";
           version = "0.1.2";
           sha256 = "f2141f2652ed601a422a8b4ba7ae109a0fd33001eeba0745e31ce9ce206bc7d9";
           revision = "2";
           editedCabalFile = "0j6zmj0dlhiq4qjrbjbvdsmky1l4z1qwqikixk1b9dpa05n01ykf";
           libraryHaskellDepends = [
             base bifunctors containers mtl prettyprinter profunctors semigroups
             tagged template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/esmolanka/invertible-grammar";
           description = "Invertible parsing combinators framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-choice" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, stdenv
         , template-haskell, transformers, transformers-base
         }:
         mkDerivation {
           pname = "io-choice";
           version = "0.0.7";
           sha256 = "394a60c4b0bcb3ce0dab6618891ab6e7405e583f724ca445ddc58b59725a669b";
           libraryHaskellDepends = [
             base lifted-base monad-control template-haskell transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Choice for IO and lifted IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-machine" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "io-machine";
           version = "0.2.0.0";
           sha256 = "05dcc8d5fcbb6f0d7f3519488ebf743eaa776bc93c2f8b0d4bbd866ac1331ccb";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoshikuniJujo/io-machine#readme";
           description = "Easy I/O model to learn IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-manager" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "io-manager";
           version = "0.1.0.2";
           sha256 = "bf0aa7740a8aaf31fc4f2570a47957365ae7d9248edd309e694053f1cd804138";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Skeleton library around the IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-memoize" = callPackage
        ({ mkDerivation, async, base, stdenv }:
         mkDerivation {
           pname = "io-memoize";
           version = "1.1.1.0";
           sha256 = "c753a1b1a2fb286bf608d6467e6e7599cde8e641c619885197f298bf1b2f483d";
           libraryHaskellDepends = [ async base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/io-memoize";
           description = "Memoize IO actions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-region" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "io-region";
           version = "0.1.1";
           sha256 = "ee303f66c2b3d33fae877b0dbb7c64624109fc759dffa669ca182e387f1015f1";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/io-region/wiki";
           description = "Exception safe resource management with dynamic regions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-storage" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "io-storage";
           version = "0.3";
           sha256 = "9a0df5cc7ff2eeef11e29e1362fea284f535bc2fe67469bba6dbc41c4f5b49bd";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/io-storage";
           description = "A key-value store in the IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-streams" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
         , network, primitive, process, stdenv, text, time, transformers
         , vector, zlib-bindings
         }:
         mkDerivation {
           pname = "io-streams";
           version = "1.5.1.0";
           sha256 = "8aa2f0afb83ee2e43c472509ecd45475b9ed4409dfaec16eb781f44152f6ebb0";
           revision = "1";
           editedCabalFile = "0n0qs5lgryh3zxy73j3qbpnxand43yd2bj6pclvyii8apqqp901a";
           configureFlags = [ "-fNoInteractiveTests" ];
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-builder network primitive
             process text time transformers vector zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple, composable, and easy-to-use stream I/O";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-streams-haproxy" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, io-streams, network
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "io-streams-haproxy";
           version = "1.0.1.0";
           sha256 = "b74eca9290fe838a0e3be857a38b62cf6fb7478acee400eac19e47471a2c96b5";
           revision = "2";
           editedCabalFile = "1pvw39f0vrzb5hdx6nqpdg4ccsxa59vwjspfjkh6vvw1zwmidgja";
           libraryHaskellDepends = [
             attoparsec base bytestring io-streams network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "HAProxy protocol 1.5 support for io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ip" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, deepseq
         , hashable, primitive, stdenv, text, vector, wide-word
         }:
         mkDerivation {
           pname = "ip";
           version = "1.5.1";
           sha256 = "94fec997abbd2a877123e27a3abf2cb123b8ce28805953ca0818c3becdb136b3";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring deepseq hashable primitive text
             vector wide-word
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/haskell-ip#readme";
           description = "Library for IP and MAC addresses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ip6addr" = callPackage
        ({ mkDerivation, base, cmdargs, IPv6Addr, stdenv, text }:
         mkDerivation {
           pname = "ip6addr";
           version = "1.0.1";
           sha256 = "dfb563510d7db46aeb69897d3e550317e3a95c79cb55032c816e9dbdeb94b25f";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base cmdargs IPv6Addr text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/ip6addr";
           description = "Commandline tool to deal with IPv6 address text representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iproute" = callPackage
        ({ mkDerivation, appar, base, byteorder, containers, network
         , stdenv
         }:
         mkDerivation {
           pname = "iproute";
           version = "1.7.8";
           sha256 = "4dad14f83bc770554609ac68c3b7bc7cccea4bb2ba2f2085c6e9623378fb584c";
           libraryHaskellDepends = [
             appar base byteorder containers network
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.mew.org/~kazu/proj/iproute/";
           description = "IP Routing Table";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ipynb" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , containers, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "ipynb";
           version = "0.1";
           sha256 = "45f27b613690ee8b0122bc4686fffbf36e50bfdc378385eb3805131a3f6c4a35";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring containers text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Data structure for working with Jupyter notebooks (ipynb)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ipython-kernel" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cereal, cereal-text
         , containers, cryptonite, directory, filepath, memory, mtl, process
         , stdenv, temporary, text, transformers, unordered-containers, uuid
         , zeromq4-haskell
         }:
         mkDerivation {
           pname = "ipython-kernel";
           version = "0.10.1.0";
           sha256 = "bc11976e4850ef2c1e1c92a3fe04e481297303f13c111ac793eec52d0b7c5e0f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring cereal cereal-text containers cryptonite
             directory filepath memory mtl process temporary text transformers
             unordered-containers uuid zeromq4-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gibiansky/IHaskell";
           description = "A library for creating kernels for IPython frontends";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "irc";
           version = "0.6.1.0";
           sha256 = "3816ead4dfb32d61c03265e3a2a45053508cb27ca3132595773a27ef381637e1";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A small library for parsing IRC messages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "irc-client" = callPackage
        ({ mkDerivation, base, bytestring, conduit, connection, containers
         , contravariant, exceptions, irc-conduit, irc-ctcp, mtl
         , network-conduit-tls, old-locale, profunctors, stdenv, stm
         , stm-chans, text, time, tls, transformers, x509, x509-store
         , x509-validation
         }:
         mkDerivation {
           pname = "irc-client";
           version = "1.1.1.1";
           sha256 = "b8396ef8f7afbde0ae8c888e81e42ec89c803ae3ba5cd75dfa2c1ad6d2c24123";
           libraryHaskellDepends = [
             base bytestring conduit connection containers contravariant
             exceptions irc-conduit irc-ctcp mtl network-conduit-tls old-locale
             profunctors stm stm-chans text time tls transformers x509
             x509-store x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-client";
           description = "An IRC client library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-conduit" = callPackage
        ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
         , connection, irc, irc-ctcp, network-conduit-tls, profunctors
         , stdenv, text, time, tls, transformers, x509-validation
         }:
         mkDerivation {
           pname = "irc-conduit";
           version = "0.3.0.4";
           sha256 = "8149ee5e5e075662971c4cbd7059a0825b124ac1ea6fb816b8cbb2b6586b4a2b";
           libraryHaskellDepends = [
             async base bytestring conduit conduit-extra connection irc irc-ctcp
             network-conduit-tls profunctors text time tls transformers
             x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-conduit";
           description = "Streaming IRC message library using conduits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-ctcp" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "irc-ctcp";
           version = "0.1.3.0";
           sha256 = "d67cd91a5521173565033777cea76636e4d2be6e6224f681392d9e726f4bb79a";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-ctcp";
           description = "A CTCP encoding and decoding library for IRC clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "islink" = callPackage
        ({ mkDerivation, base, stdenv, unordered-containers }:
         mkDerivation {
           pname = "islink";
           version = "0.1.0.0";
           sha256 = "cfbf9c1a6dc46327b7ed7bf9336e245a255626c9d04aeba3d887d90f26d2aed7";
           libraryHaskellDepends = [ base unordered-containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/islink";
           description = "Check if an HTML element is a link";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iso3166-country-codes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "iso3166-country-codes";
           version = "0.20140203.8";
           sha256 = "b4d6e01cd61bcaef9a8e455c331a8e7a2298531cb587ef6f23675eae7a6b0a36";
           revision = "1";
           editedCabalFile = "0n01pmvkqi0w9l203i1v7kb6bb867plv4h5hmzlkpnhrf5abf0zf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A datatype for ISO 3166 country codes";
           license = "LGPL";
         }) {};
      "iso639" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "iso639";
           version = "0.1.0.3";
           sha256 = "124b8322fabaedb4de3dbc39880b36d0eab0e28d5775954aadb6630bc0da25e8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HugoDaniel/iso639";
           description = "ISO-639-1 language codes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iso8601-time" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "iso8601-time";
           version = "0.1.5";
           sha256 = "f2cd444b2be68402c773a4b451912817f06d33093aea691b42ebeed3630ff0c8";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/iso8601-time";
           description = "Convert to/from the ISO 8601 time format";
           license = stdenv.lib.licenses.mit;
         }) {};
      "iterable" = callPackage
        ({ mkDerivation, base, mtl, stdenv, tagged, template-haskell
         , vector
         }:
         mkDerivation {
           pname = "iterable";
           version = "3.0";
           sha256 = "6cd13d621144e937cc88acfed1663bd2e208dcbe54be4bad1f7b7279250a87a4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base mtl tagged template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BioHaskell/iterable";
           description = "API for hierarchical multilevel collections";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ix-shapable" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "ix-shapable";
           version = "0.1.0";
           sha256 = "5007ffb6a8a7bb490f962cedceed5ceb7c435126d09bc565441070cbfda79222";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Reshape multi-dimensional arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ixset-typed" = callPackage
        ({ mkDerivation, base, containers, deepseq, safecopy, stdenv, syb
         , template-haskell
         }:
         mkDerivation {
           pname = "ixset-typed";
           version = "0.4.0.1";
           sha256 = "a8d3655f4cebf66013363a4456287052391faad76f00f5b4001ba7d11073ac8c";
           revision = "1";
           editedCabalFile = "0kfklsbjn4gmx76vl7vm1s149f13h2p537930yaq8s2671lzc79p";
           libraryHaskellDepends = [
             base containers deepseq safecopy syb template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Efficient relational queries on Haskell sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jack" = callPackage
        ({ mkDerivation, array, base, bytestring, enumset, event-list
         , explicit-exception, libjack2, midi, non-negative, semigroups
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "jack";
           version = "0.7.1.4";
           sha256 = "42aeb281fb62a08bbaca4b20801d55879b0688e25a92962158fbd0578bd21405";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base bytestring enumset event-list explicit-exception midi
             non-negative semigroups transformers
           ];
           libraryPkgconfigDepends = [ libjack2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/JACK";
           description = "Bindings for the JACK Audio Connection Kit";
           license = "GPL";
         }) {inherit (pkgs) libjack2;};
      "jailbreak-cabal" = callPackage
        ({ mkDerivation, base, Cabal, stdenv }:
         mkDerivation {
           pname = "jailbreak-cabal";
           version = "1.3.4";
           sha256 = "c8e0e72acf380b770483878798faa266cab17c4b14b72989c4fd21158c6d7277";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base Cabal ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/jailbreak-cabal#readme";
           description = "Strip version restrictions from Cabal files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jose" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bytestring, concise, containers, cryptonite, lens, memory
         , monad-time, mtl, network-uri, QuickCheck, quickcheck-instances
         , safe, semigroups, stdenv, template-haskell, text, time
         , unordered-containers, vector, x509
         }:
         mkDerivation {
           pname = "jose";
           version = "0.8.2.0";
           sha256 = "a4d17a56ddf246caa750537028c4e617b530a9b5489a7a51af9ecfa4799d624f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bytestring concise
             containers cryptonite lens memory monad-time mtl network-uri
             QuickCheck quickcheck-instances safe semigroups template-haskell
             text time unordered-containers vector x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frasertweedale/hs-jose";
           description = "Javascript Object Signing and Encryption and JSON Web Token library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "jose-jwt" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, cereal
         , containers, cryptonite, either, memory, mtl, stdenv, text, time
         , transformers, transformers-compat, unordered-containers, vector
         }:
         mkDerivation {
           pname = "jose-jwt";
           version = "0.8.0";
           sha256 = "4fb098e8ec18ebec7ab93f229dbaca992c704d006bc0f1ca98e8f00a579db6c2";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring cereal containers cryptonite
             either memory mtl text time transformers transformers-compat
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tekul/jose-jwt";
           description = "JSON Object Signing and Encryption Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "js-dgtable" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "js-dgtable";
           version = "0.5.2";
           sha256 = "e28dd65bee8083b17210134e22e01c6349dc33c3b7bd17705973cd014e9f20ac";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/js-dgtable#readme";
           description = "Obtain minified jquery.dgtable code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "js-flot" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "js-flot";
           version = "0.8.3";
           sha256 = "1ba2f2a6b8d85da76c41f526c98903cbb107f8642e506c072c1e7e3c20fe5e7a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/js-flot#readme";
           description = "Obtain minified flot code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "js-jquery" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "js-jquery";
           version = "3.3.1";
           sha256 = "e0e0681f0da1130ede4e03a051630ea439c458cb97216cdb01771ebdbe44069b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/js-jquery#readme";
           description = "Obtain minified jQuery code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "json" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, mtl, parsec
         , pretty, stdenv, syb, text
         }:
         mkDerivation {
           pname = "json";
           version = "0.9.3";
           sha256 = "8baf1de09983df8036fda854c4d1446f156a52d4988b863175e29af35c1d1afd";
           revision = "2";
           editedCabalFile = "0iqmwfq6s1fc8jj16yx2d7jpzf94scd1hc4yvz281zxj7kds2ms5";
           libraryHaskellDepends = [
             array base bytestring containers mtl parsec pretty syb text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support for serialising Haskell to and from JSON";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-alt" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "json-alt";
           version = "1.0.0";
           sha256 = "b850533adf93fbda01d4aee1f0116cfd67bfce17baf0a035ddc20cfe4a5d75c7";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/json-autotype";
           description = "Union 'alternative' or Either that has untagged JSON encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-autotype" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, filepath
         , GenericPretty, hashable, json-alt, lens, mtl
         , optparse-applicative, pretty, process, QuickCheck, scientific
         , smallcheck, stdenv, template-haskell, text, uniplate
         , unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "json-autotype";
           version = "3.0.1";
           sha256 = "6aae99110b29fcdbd3e7918eabc4ebf1d1f4bc1a6a94a33f0814324eba25395a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base containers filepath GenericPretty hashable json-alt lens
             mtl pretty process QuickCheck scientific smallcheck
             template-haskell text uniplate unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring containers filepath GenericPretty hashable
             json-alt lens mtl optparse-applicative pretty process scientific
             template-haskell text uniplate unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/json-autotype";
           description = "Automatic type declaration for JSON input data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-feed" = callPackage
        ({ mkDerivation, aeson, base, bytestring, mime-types, network-uri
         , stdenv, tagsoup, text, time
         }:
         mkDerivation {
           pname = "json-feed";
           version = "1.0.8";
           sha256 = "556bfedd066664755d4266396fae6612001d264a47640c5bdf209471a6b54fe9";
           libraryHaskellDepends = [
             aeson base bytestring mime-types network-uri tagsoup text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/json-feed#readme";
           description = "JSON Feed";
           license = stdenv.lib.licenses.mit;
         }) {};
      "json-rpc" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , conduit-extra, deepseq, hashable, monad-logger, mtl, QuickCheck
         , stdenv, stm-conduit, text, time, unliftio, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "json-rpc";
           version = "1.0.1";
           sha256 = "101d24d637ddd874edc0c530ee53ff73b67f1db010e4f96459315cf1d5bff0bd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit conduit-extra deepseq
             hashable monad-logger mtl QuickCheck stm-conduit text time unliftio
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring conduit conduit-extra monad-logger mtl
             QuickCheck stm-conduit text time unliftio unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xenog/json-rpc.git#readme";
           description = "Fully-featured JSON-RPC 2.0 library";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "json-rpc-client" = callPackage
        ({ mkDerivation, aeson, base, bytestring, json-rpc-server, mtl
         , stdenv, text, unordered-containers, vector, vector-algorithms
         }:
         mkDerivation {
           pname = "json-rpc-client";
           version = "0.2.5.0";
           sha256 = "5349f5c0b0fa8f6c5433152d6effc10846cfb3480e78c5aa99adb7540bcff49c";
           revision = "10";
           editedCabalFile = "19vf7gibvqgcm27b5n0ls4s7wi1kr87crn776ifqc9gbr2l9bfpi";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring json-rpc-server mtl text unordered-containers
             vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/grayjay/json-rpc-client";
           description = "JSON-RPC 2.0 on the client side.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "json-rpc-generic" = callPackage
        ({ mkDerivation, aeson, aeson-generic-compat, base, containers
         , dlist, scientific, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "json-rpc-generic";
           version = "0.2.1.5";
           sha256 = "9f917ba4b01e1a439482cda9be9fff865043915067cc26571e3df682a3bf3ac0";
           libraryHaskellDepends = [
             aeson aeson-generic-compat base containers dlist scientific text
             transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/khibino/haskell-json-rpc-generic";
           description = "Generic encoder and decode for JSON-RPC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-rpc-server" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, mtl, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "json-rpc-server";
           version = "0.2.6.0";
           sha256 = "169e9997734bd1d7d07a13b5ae0223d5363c43de93b0d5fbb845a598f9eaccf5";
           revision = "7";
           editedCabalFile = "1fjkl0p5glkk01jny6ar62356pmp2a2vf9v1jq67ly3y14dcvywq";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring deepseq mtl text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/grayjay/json-rpc-server";
           description = "JSON-RPC 2.0 on the server side.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "jsonpath" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "jsonpath";
           version = "0.1.0.2";
           sha256 = "8c0493694379edf0d4e51d042674247eeb2612cae09a94ec48588b8fd24d08ad";
           libraryHaskellDepends = [
             aeson attoparsec base text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/akshaymankar/jsonpath-hs#readme";
           description = "Library to parse and execute JSONPath";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "justified-containers" = callPackage
        ({ mkDerivation, base, containers, roles, stdenv }:
         mkDerivation {
           pname = "justified-containers";
           version = "0.3.0.0";
           sha256 = "d830c0ccd036e98ec6bab2bd336bb0bd580ce0495dedf3bf2176bd8084733e87";
           libraryHaskellDepends = [ base containers roles ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matt-noonan/justified-containers";
           description = "Keyed container types with type-checked proofs of key presence";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "jwt" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, cryptonite
         , http-types, memory, network-uri, scientific, semigroups, stdenv
         , text, time, unordered-containers, vector, x509, x509-store
         }:
         mkDerivation {
           pname = "jwt";
           version = "0.10.0";
           sha256 = "bc1c7b18ba3366dd537f0ccd46e887e5892591a2a60b5ccbc15289ea70c52ea8";
           revision = "2";
           editedCabalFile = "1ld5dh4x3sb28416bk3k39k46vmx1s7agk17v7cb5cxam4hj3c1c";
           libraryHaskellDepends = [
             aeson base bytestring containers cryptonite http-types memory
             network-uri scientific semigroups text time unordered-containers
             vector x509 x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/puffnfresh/haskell-jwt";
           description = "JSON Web Token (JWT) decoding and encoding";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kan-extensions" = callPackage
        ({ mkDerivation, adjunctions, array, base, comonad, containers
         , contravariant, distributive, free, invariant, mtl, profunctors
         , semigroupoids, stdenv, tagged, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "kan-extensions";
           version = "5.2";
           sha256 = "6b727e586f744b96529415eeabc745dfe05feea61f6b6bad90c224c879f4dbd3";
           libraryHaskellDepends = [
             adjunctions array base comonad containers contravariant
             distributive free invariant mtl profunctors semigroupoids tagged
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/kan-extensions/";
           description = "Kan extensions, Kan lifts, the Yoneda lemma, and (co)density (co)monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kanji" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, containers, deepseq
         , hashable, microlens, microlens-aeson, optparse-applicative
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "kanji";
           version = "3.4.1";
           sha256 = "59500a92369df84e3d8810ae8f037ce82ec550fe0e50759812d4a3712cafffdd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base containers deepseq hashable text
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base containers microlens microlens-aeson
             optparse-applicative text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fosskers/kanji";
           description = "Perform 漢字検定 (Japan Kanji Aptitude Test) level analysis on Japanese Kanji";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "katip" = callPackage
        ({ mkDerivation, aeson, async, auto-update, base, bytestring
         , containers, either, hostname, microlens, microlens-th
         , monad-control, mtl, old-locale, resourcet, safe-exceptions
         , scientific, semigroups, stdenv, stm, string-conv
         , template-haskell, text, time, transformers, transformers-base
         , transformers-compat, unix, unliftio-core, unordered-containers
         }:
         mkDerivation {
           pname = "katip";
           version = "0.8.3.0";
           sha256 = "a085b3d83f841bde5f479c71db7cc6d6a287cc012f47785ce6eadcfc2e64f872";
           libraryHaskellDepends = [
             aeson async auto-update base bytestring containers either hostname
             microlens microlens-th monad-control mtl old-locale resourcet
             safe-exceptions scientific semigroups stm string-conv
             template-haskell text time transformers transformers-base
             transformers-compat unix unliftio-core unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/katip";
           description = "A structured logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kawhi" = callPackage
        ({ mkDerivation, aeson, base, bytestring, exceptions, http-client
         , http-conduit, http-types, mtl, safe, scientific, stdenv, text
         }:
         mkDerivation {
           pname = "kawhi";
           version = "0.3.0";
           sha256 = "2321387a3ddaa17c09db3a8e7a41a39f8e211467bd80bccd73791de8fca2a44f";
           libraryHaskellDepends = [
             aeson base bytestring exceptions http-client http-conduit
             http-types mtl safe scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thunky-monk/kawhi";
           description = "stats.NBA.com library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kazura-queue" = callPackage
        ({ mkDerivation, atomic-primops, base, primitive, stdenv }:
         mkDerivation {
           pname = "kazura-queue";
           version = "0.1.0.4";
           sha256 = "5e5441f0eee97a4752f485ad2a3e7c0add7a2928190d416b8f83e2939a59237e";
           libraryHaskellDepends = [ atomic-primops base primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/asakamirai/kazura-queue#readme";
           description = "Fast concurrent queues much inspired by unagi-chan";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kdt" = callPackage
        ({ mkDerivation, base, deepseq, deepseq-generics, heap, stdenv }:
         mkDerivation {
           pname = "kdt";
           version = "0.2.4";
           sha256 = "bc0f8f9ac0cb01466273171f47b627abe170d1130bd59657fb9198b4f9479f9a";
           libraryHaskellDepends = [ base deepseq deepseq-generics heap ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/giogadi/kdt";
           description = "Fast and flexible k-d trees for various types of point queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "keycode" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "keycode";
           version = "0.2.2";
           sha256 = "56f9407cf182b01e5f0fda80f569ff629f37d894f75ef28b6b8af3024343d310";
           revision = "5";
           editedCabalFile = "17fhzhlbqgd5pqp357n3z0k176q79c2jxvpwqryl3gbad3s8qsfw";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/keycode";
           description = "Maps web browser keycodes to their corresponding keyboard keys";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "keys" = callPackage
        ({ mkDerivation, array, base, comonad, containers, free, hashable
         , semigroupoids, semigroups, stdenv, tagged, transformers
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "keys";
           version = "3.12.3";
           sha256 = "d51e4288a3cc89c5be3327a499212a651549a58af78d0dfeb2cd80e19ce66646";
           libraryHaskellDepends = [
             array base comonad containers free hashable semigroupoids
             semigroups tagged transformers transformers-compat
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/keys/";
           description = "Keyed functors and containers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kind-apply" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "kind-apply";
           version = "0.3.2.0";
           sha256 = "98dd45968f777f08aa4e6a8fe20dfa0b345ab474b92ac37835503589a2930073";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Utilities to work with lists of types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kind-generics" = callPackage
        ({ mkDerivation, base, kind-apply, stdenv }:
         mkDerivation {
           pname = "kind-generics";
           version = "0.3.0.0";
           sha256 = "1df923a4a223c8c3c69135bd4be65bab6d6404cad026d90539fd350ab98c7976";
           libraryHaskellDepends = [ base kind-apply ];
           doHaddock = false;
           doCheck = false;
           description = "Generic programming in GHC style for arbitrary kinds and GADTs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kind-generics-th" = callPackage
        ({ mkDerivation, base, kind-generics, stdenv, template-haskell
         , th-abstraction
         }:
         mkDerivation {
           pname = "kind-generics-th";
           version = "0.1.1.0";
           sha256 = "743e5c827666ccd3ce7c5a3114259212872b09a8b8d8ae98af8ea726748b905f";
           libraryHaskellDepends = [
             base kind-generics template-haskell th-abstraction
           ];
           doHaddock = false;
           doCheck = false;
           description = "Template Haskell support for generating `GenericK` instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kleene" = callPackage
        ({ mkDerivation, attoparsec, base, base-compat, bytestring
         , containers, lattices, MemoTrie, QuickCheck, range-set-list
         , regex-applicative, semigroupoids, stdenv, step-function, text
         , transformers
         }:
         mkDerivation {
           pname = "kleene";
           version = "0.1";
           sha256 = "0f8225812d41485a945d85c46a95bc840b98b4740f0de1c714de63d8b87f8103";
           revision = "3";
           editedCabalFile = "1bx73d86qhki4bvqckhv7nrvn06rha6x231fqjms2a7a9zpv47bm";
           libraryHaskellDepends = [
             attoparsec base base-compat bytestring containers lattices MemoTrie
             QuickCheck range-set-list regex-applicative semigroupoids
             step-function text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/kleene";
           description = "Kleene algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kmeans" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "kmeans";
           version = "0.1.3";
           sha256 = "3d9e24a12ce01354c2a731ee079144c3bea2c9f011ffd51db82e5c26da1a2c0b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "K-means clustering algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "koofr-client" = callPackage
        ({ mkDerivation, aeson, base, bytestring, filepath, http-client
         , http-client-tls, http-types, mtl, stdenv
         }:
         mkDerivation {
           pname = "koofr-client";
           version = "1.0.0.3";
           sha256 = "2ab6f0af8be4f1912ad06ad860db993f9c33c8f0206f87ff0b566b7dda54e7af";
           revision = "1";
           editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
           libraryHaskellDepends = [
             aeson base bytestring filepath http-client http-client-tls
             http-types mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/edofic/koofr-api-hs";
           description = "Client to Koofr API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kraken" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, mtl, stdenv
         }:
         mkDerivation {
           pname = "kraken";
           version = "0.1.0";
           sha256 = "335ce7cb85f7d3ed71eb067ad9642d13d2ca1d62ce8670596c8b69aacc27828a";
           revision = "2";
           editedCabalFile = "141qx2fb3dimv20qsl2q1bagwcn9i0r72z2ha1w7191m557in319";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls mtl
           ];
           doHaddock = false;
           doCheck = false;
           description = "Kraken.io API client";
           license = stdenv.lib.licenses.mit;
         }) {};
      "l10n" = callPackage
        ({ mkDerivation, base, stdenv, text, time }:
         mkDerivation {
           pname = "l10n";
           version = "0.1.0.1";
           sha256 = "0a7032476d257981eb7c274600bef809b4a515ab162a1772a7887f0113455ca0";
           libraryHaskellDepends = [ base text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/l10n#readme";
           description = "Enables providing localization as typeclass instances in separate files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "labels" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "labels";
           version = "0.3.3";
           sha256 = "e6b4c02b5340c68b911fd2df157766260e06939ad2919f555339356613433013";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/labels#readme";
           description = "Anonymous records via named tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lackey" = callPackage
        ({ mkDerivation, base, servant, servant-foreign, stdenv, text }:
         mkDerivation {
           pname = "lackey";
           version = "1.0.11";
           sha256 = "0198a7942546702485f0447ca232393f55fdb6c4e39ded562069ac596f379069";
           libraryHaskellDepends = [ base servant servant-foreign text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/lackey#readme";
           description = "Generate Ruby clients from Servant APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lambdabot-core" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , dependent-map, dependent-sum, dependent-sum-template, directory
         , edit-distance, filepath, haskeline, hslogger, HTTP, lifted-base
         , monad-control, mtl, network, network-bsd, parsec, prim-uniq
         , random, random-fu, random-source, regex-tdfa, SafeSemaphore
         , split, stdenv, syb, template-haskell, time, transformers
         , transformers-base, unix, utf8-string, zlib
         }:
         mkDerivation {
           pname = "lambdabot-core";
           version = "5.2";
           sha256 = "5a4b281d626ad7e7218b544bce30af6de173360c11b74a85856342b4383f08f2";
           revision = "3";
           editedCabalFile = "182bhiwvbpadwwf3h9fpfsjwcsb0fkfzr57fvpl0k6w7msqn32rp";
           libraryHaskellDepends = [
             base binary bytestring containers dependent-map dependent-sum
             dependent-sum-template directory edit-distance filepath haskeline
             hslogger HTTP lifted-base monad-control mtl network network-bsd
             parsec prim-uniq random random-fu random-source regex-tdfa
             SafeSemaphore split syb template-haskell time transformers
             transformers-base unix utf8-string zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://wiki.haskell.org/Lambdabot";
           description = "Lambdabot core functionality";
           license = "GPL";
         }) {};
      "lambdabot-irc-plugins" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , lambdabot-core, lifted-base, mtl, network, SafeSemaphore, split
         , stdenv, time
         }:
         mkDerivation {
           pname = "lambdabot-irc-plugins";
           version = "5.2";
           sha256 = "70168af5e5ee946f04e223a7f73b069c17053fecc5e112eaaf11c55cdfab0d54";
           libraryHaskellDepends = [
             base bytestring containers directory filepath lambdabot-core
             lifted-base mtl network SafeSemaphore split time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://wiki.haskell.org/Lambdabot";
           description = "IRC plugins for lambdabot";
           license = "GPL";
         }) {};
      "lame" = callPackage
        ({ mkDerivation, base, bytestring, directory, exceptions, filepath
         , mp3lame, stdenv, text, transformers, wave
         }:
         mkDerivation {
           pname = "lame";
           version = "0.2.0";
           sha256 = "578b5b8bff09bcf3cde8f26026cef02633aa5d93a72ab007d5cd3967951a18af";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring directory exceptions filepath text transformers
             wave
           ];
           librarySystemDepends = [ mp3lame ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/lame";
           description = "Fairly complete high-level binding to LAME encoder";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mp3lame;};
      "language-c" = callPackage
        ({ mkDerivation, alex, array, base, bytestring, containers, deepseq
         , directory, filepath, happy, pretty, process, stdenv, syb
         }:
         mkDerivation {
           pname = "language-c";
           version = "0.8.3";
           sha256 = "f3d66c18abececb468f2b069f0c3274709456fde6938eace46dacf1c9b14202e";
           libraryHaskellDepends = [
             array base bytestring containers deepseq directory filepath pretty
             process syb
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://visq.github.io/language-c/";
           description = "Analysis and generation of C code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-c-quote" = callPackage
        ({ mkDerivation, alex, array, base, bytestring, containers
         , exception-mtl, exception-transformers, filepath, happy
         , haskell-src-meta, mainland-pretty, mtl, srcloc, stdenv, syb
         , symbol, template-haskell
         }:
         mkDerivation {
           pname = "language-c-quote";
           version = "0.12.2.1";
           sha256 = "65c485ede8219236f58faba305123b2652e64994c8e297861b25490ec8229b43";
           libraryHaskellDepends = [
             array base bytestring containers exception-mtl
             exception-transformers filepath haskell-src-meta mainland-pretty
             mtl srcloc syb symbol template-haskell
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mainland/language-c-quote";
           description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-docker" = callPackage
        ({ mkDerivation, base, bytestring, containers, free, megaparsec
         , mtl, prettyprinter, split, stdenv, template-haskell, text
         , th-lift, time
         }:
         mkDerivation {
           pname = "language-docker";
           version = "8.0.2";
           sha256 = "32424a420f5a95a5be370a56826a801fb9d5351a38643a593f30d4485bebcf01";
           libraryHaskellDepends = [
             base bytestring containers free megaparsec mtl prettyprinter split
             template-haskell text th-lift time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hadolint/language-docker#readme";
           description = "Dockerfile parser, pretty-printer and embedded DSL";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "language-ecmascript" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, charset, containers
         , data-default-class, Diff, mtl, parsec, QuickCheck, stdenv
         , template-haskell, uniplate
         }:
         mkDerivation {
           pname = "language-ecmascript";
           version = "0.19";
           sha256 = "570a4b7bdebf4532e9c059f2afa7575247be2b7f539361995297308c387c658f";
           revision = "2";
           editedCabalFile = "1xj5h5ajybq4pwlw8zsn1lb920km1pcdv20apbpa7pgi39zcpzfd";
           libraryHaskellDepends = [
             ansi-wl-pprint base charset containers data-default-class Diff mtl
             parsec QuickCheck template-haskell uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jswebtools/language-ecmascript";
           description = "JavaScript parser and pretty-printer library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-haskell-extract" = callPackage
        ({ mkDerivation, base, regex-posix, stdenv, template-haskell }:
         mkDerivation {
           pname = "language-haskell-extract";
           version = "0.2.4";
           sha256 = "14da16e56665bf971723e0c5fd06dbb7cc30b4918cf8fb5748570785ded1acdb";
           revision = "1";
           editedCabalFile = "1chx4g8ngb1hpyh3r9rbl8rkjkm67klms4wmw3p1g2llg47vvqip";
           libraryHaskellDepends = [ base regex-posix template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/finnsson/template-helper";
           description = "Module to automatically extract functions from the local code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-java" = callPackage
        ({ mkDerivation, alex, array, base, parsec, pretty, stdenv }:
         mkDerivation {
           pname = "language-java";
           version = "0.2.9";
           sha256 = "1d15c8ad2a1eff6b195ec1ed799b8523aeda1c183392b9b713bc4aff2092190e";
           revision = "1";
           editedCabalFile = "0fnbg9b8isyk8dpmggh736mms7a2m65956y1z15wds63imzhs2ik";
           libraryHaskellDepends = [ array base parsec pretty ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/language-java";
           description = "Java source manipulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-javascript" = callPackage
        ({ mkDerivation, alex, array, base, blaze-builder, bytestring
         , containers, happy, mtl, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "language-javascript";
           version = "0.6.0.14";
           sha256 = "c1e16a60b1ddaba61042a35cf6f96dc3b0fbda54c7a7c9a30c994f949e4c8ec8";
           libraryHaskellDepends = [
             array base blaze-builder bytestring containers mtl text utf8-string
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erikd/language-javascript";
           description = "Parser for JavaScript";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-nix" = callPackage
        ({ mkDerivation, base, base-compat, Cabal, deepseq, lens, pretty
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "language-nix";
           version = "2.1.0.1";
           sha256 = "f0147300724ac39ce388cd6cd717ac3ccc6ed1884ffaafebb18d0f3021e01acf";
           revision = "1";
           editedCabalFile = "1zv12p4ralrks0517zs52rzmzmsxxkcxkqz7zijfgcsvh6bsmafi";
           libraryHaskellDepends = [
             base base-compat Cabal deepseq lens pretty QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/language-nix#readme";
           description = "Data types and useful functions to represent and manipulate the Nix language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-puppet" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, async, attoparsec, base
         , base16-bytestring, bytestring, case-insensitive, containers
         , cryptonite, directory, filecache, filepath, formatting, Glob
         , hashable, hruby, hslogger, http-api-data, http-client, lens
         , lens-aeson, megaparsec, memory, mtl, operational
         , optparse-applicative, parsec, parser-combinators, pcre-utils
         , protolude, random, regex-pcre-builtin, scientific, servant
         , servant-client, split, stdenv, stm, strict-base-types, text, time
         , transformers, unix, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "language-puppet";
           version = "1.4.6.2";
           sha256 = "d617b484684a08140bef0c9fd554afc580696f812b8527c1bb49fd7e33003b1f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint attoparsec base base16-bytestring bytestring
             case-insensitive containers cryptonite directory filecache filepath
             formatting hashable hruby hslogger http-api-data http-client lens
             lens-aeson megaparsec memory mtl operational parsec
             parser-combinators pcre-utils protolude random regex-pcre-builtin
             scientific servant servant-client split stm strict-base-types text
             time transformers unix unordered-containers vector yaml
           ];
           executableHaskellDepends = [
             aeson ansi-wl-pprint async base bytestring containers Glob hslogger
             http-client lens mtl optparse-applicative regex-pcre-builtin
             strict-base-types text transformers unordered-containers vector
             yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lpuppet.banquise.net/";
           description = "Tools to parse and evaluate the Puppet DSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lapack" = callPackage
        ({ mkDerivation, base, blas-ffi, blaze-html, boxes, comfort-array
         , deepseq, fixed-length, guarded-allocation, hyper, lapack-ffi
         , lazyio, netlib-ffi, non-empty, semigroups, stdenv, text, tfp
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "lapack";
           version = "0.3.1";
           sha256 = "79f34725accb6917443bb24d7ce1e212ab132b1dc1cade68ccdbc83760b316f1";
           libraryHaskellDepends = [
             base blas-ffi blaze-html boxes comfort-array deepseq fixed-length
             guarded-allocation hyper lapack-ffi lazyio netlib-ffi non-empty
             semigroups text tfp transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack/";
           description = "Numerical Linear Algebra using LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lapack-carray" = callPackage
        ({ mkDerivation, base, carray, lapack-ffi, netlib-carray
         , netlib-ffi, stdenv, storable-complex, transformers
         }:
         mkDerivation {
           pname = "lapack-carray";
           version = "0.0.3";
           sha256 = "510ffbbe349add60dd147181a7517f57071b71f7691e299255b95433dbe48dd0";
           libraryHaskellDepends = [
             base carray lapack-ffi netlib-carray netlib-ffi storable-complex
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack-carray/";
           description = "Auto-generated interface to Fortran LAPACK via CArrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lapack-comfort-array" = callPackage
        ({ mkDerivation, base, comfort-array, lapack-ffi
         , netlib-comfort-array, netlib-ffi, stdenv, storable-complex
         , transformers
         }:
         mkDerivation {
           pname = "lapack-comfort-array";
           version = "0.0.0.1";
           sha256 = "01d2c8c33ab89193e2531db0fdc46433885b335eb86552ea5f5a9c83c75ac94e";
           libraryHaskellDepends = [
             base comfort-array lapack-ffi netlib-comfort-array netlib-ffi
             storable-complex transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack-comfort-array/";
           description = "Auto-generated interface to Fortran LAPACK via comfort-array";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lapack-ffi" = callPackage
        ({ mkDerivation, base, liblapack, netlib-ffi, stdenv }:
         mkDerivation {
           pname = "lapack-ffi";
           version = "0.0.2";
           sha256 = "d4b73268bb25244f0234ef4a8b4407818e244d297612a189c7f34fe0b64ae584";
           libraryHaskellDepends = [ base netlib-ffi ];
           libraryPkgconfigDepends = [ liblapack ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack-ffi/";
           description = "Auto-generated interface to Fortran LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) liblapack;};
      "lapack-ffi-tools" = callPackage
        ({ mkDerivation, base, bytestring, cassava, containers
         , explicit-exception, filepath, non-empty, optparse-applicative
         , parsec, pathtype, stdenv, transformers, unordered-containers
         , utility-ht, vector
         }:
         mkDerivation {
           pname = "lapack-ffi-tools";
           version = "0.1.2.1";
           sha256 = "b03d22ca5d322ec50418e5e8e937b640910fd76a855722ec63ca1850f5256542";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             base bytestring cassava containers explicit-exception filepath
             non-empty optparse-applicative parsec pathtype transformers
             unordered-containers utility-ht vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack-ffi-tools/";
           description = "Generator for Haskell interface to Fortran LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "largeword" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "largeword";
           version = "1.2.5";
           sha256 = "00b3b06d846649bf404f52a725c88349a38bc8c810e16c99f3100c4e1e9d7d46";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/idontgetoutmuch/largeword";
           description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "latex" = callPackage
        ({ mkDerivation, base, containers, stdenv, utility-ht }:
         mkDerivation {
           pname = "latex";
           version = "0.1.0.4";
           sha256 = "1c2a8b9cefebc3ce5493071670d9c71e4fc30d6527d6a6c92174ce4c39a0a082";
           libraryHaskellDepends = [ base containers utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/LaTeX";
           description = "Parse, format and process LaTeX files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lattices" = callPackage
        ({ mkDerivation, base, base-compat, containers, deepseq, hashable
         , integer-logarithms, QuickCheck, semigroupoids, stdenv, tagged
         , transformers, universe-base, universe-reverse-instances
         , unordered-containers
         }:
         mkDerivation {
           pname = "lattices";
           version = "2.0.1";
           sha256 = "dee5ab7c2bd16465132cf03e86d93e07bc8c67248171ea65448fd284a03bf630";
           revision = "1";
           editedCabalFile = "1zfxq1gpfv0vb7arw0hw2nf61hyjwl8c72jng4v61xywvqh9i36q";
           libraryHaskellDepends = [
             base base-compat containers deepseq hashable integer-logarithms
             QuickCheck semigroupoids tagged transformers universe-base
             universe-reverse-instances unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phadej/lattices/";
           description = "Fine-grained library for constructing and manipulating lattices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lawful" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "lawful";
           version = "0.1.0.0";
           sha256 = "0056794106bbf7fa4d8d4d943fdc75a39b8a5ac1e18ceac2909183a1a7cc8d04";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matt-noonan/lawful#readme";
           description = "Assert the lawfulness of your typeclass instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lazy-csv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "lazy-csv";
           version = "0.5.1";
           sha256 = "888bcbdd43886099f197c1c246cea324c97c076d4839e97eea0b8d6d7b49649f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/lazy-csv";
           description = "Efficient lazy parsers for CSV (comma-separated values)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lazyio" = callPackage
        ({ mkDerivation, base, stdenv, transformers, unsafe }:
         mkDerivation {
           pname = "lazyio";
           version = "0.1.0.4";
           sha256 = "8b54f0bccdc1c836393ce667ea0f1ad069d52c04762e61fad633d4d44916cf6c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base transformers unsafe ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Lazy_IO";
           description = "Run IO actions lazily while respecting their order";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lca" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, stdenv }:
         mkDerivation {
           pname = "lca";
           version = "0.3.1";
           sha256 = "8a8d045ae00d82ddb491e873cc36f1ca89e91556a183c343b99f4df6abfe434e";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lca/";
           description = "O(log n) persistent online lowest common ancestor search without preprocessing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "leancheck" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "leancheck";
           version = "0.9.1";
           sha256 = "abcd854763a828ec1f3008c41612a86deb2fc0bb4eaaa041951b6937f155c90e";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/leancheck#readme";
           description = "Enumerative property-based testing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "leancheck-instances" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, leancheck
         , nats, stdenv, text, time
         }:
         mkDerivation {
           pname = "leancheck-instances";
           version = "0.0.3";
           sha256 = "a671ee53d343208ef3dccc93f3f64b1ed8e9ed4f6c509072fa4ab2b69de0cac0";
           libraryHaskellDepends = [
             array base bytestring containers leancheck nats text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/leancheck-instances#readme";
           description = "Common LeanCheck instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "leapseconds-announced" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "leapseconds-announced";
           version = "2017.1.0.1";
           sha256 = "cd3bb27caf704a975ef5718a9a8e641cd9cf9a9f2df27153f7cf80405292a8d6";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/leapseconds-announced";
           description = "Leap seconds announced at library release time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "learn-physics" = callPackage
        ({ mkDerivation, base, gloss, gnuplot, hmatrix, not-gloss
         , spatial-math, stdenv, vector-space
         }:
         mkDerivation {
           pname = "learn-physics";
           version = "0.6.5";
           sha256 = "4b03a2d2d5871906fea7b7926d7ad3bfad537b300eb53311a0d360fdfc008d41";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base gloss gnuplot hmatrix not-gloss spatial-math vector-space
           ];
           executableHaskellDepends = [
             base gloss gnuplot not-gloss spatial-math
           ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell code for learning physics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens" = callPackage
        ({ mkDerivation, array, base, base-orphans, bifunctors, bytestring
         , Cabal, cabal-doctest, call-stack, comonad, containers
         , contravariant, distributive, exceptions, filepath, free, ghc-prim
         , hashable, kan-extensions, mtl, parallel, profunctors, reflection
         , semigroupoids, stdenv, tagged, template-haskell, text
         , th-abstraction, transformers, transformers-compat
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "lens";
           version = "4.17.1";
           sha256 = "4711bd5703ba22cc4a5cf62679775b92f92c108c6496f7b2b3ef31414761f3be";
           revision = "2";
           editedCabalFile = "1bh868l69nisdhw8qw5y51nj2w0pbbq7mxqiwf42iq0vcb6h0ybv";
           setupHaskellDepends = [ base Cabal cabal-doctest filepath ];
           libraryHaskellDepends = [
             array base base-orphans bifunctors bytestring call-stack comonad
             containers contravariant distributive exceptions filepath free
             ghc-prim hashable kan-extensions mtl parallel profunctors
             reflection semigroupoids tagged template-haskell text
             th-abstraction transformers transformers-compat
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lens/";
           description = "Lenses, Folds and Traversals";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "lens-action" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, comonad, contravariant
         , lens, mtl, profunctors, semigroupoids, semigroups, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lens-action";
           version = "0.2.4";
           sha256 = "a3c5d82a392939a4dcb37da50e31bf8697580c420cba40ffd08e91067423cf1b";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base comonad contravariant lens mtl profunctors semigroupoids
             semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lens-action/";
           description = "Monadic Getters and Folds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
         , cabal-doctest, lens, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "lens-aeson";
           version = "1.0.2";
           sha256 = "4311f035caa39db3a70915a165bcbfb55ad22376085d95a9b4f57c58994702cc";
           revision = "6";
           editedCabalFile = "1pg5v8fnlqw1krgi3d2a03a0zkjjdv5yp5f5z6q4mlb5jldz99a8";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec base bytestring lens scientific text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lens/lens-aeson/";
           description = "Law-abiding lenses for aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lens-datetime" = callPackage
        ({ mkDerivation, base, lens, stdenv, time }:
         mkDerivation {
           pname = "lens-datetime";
           version = "0.3";
           sha256 = "bb1f8d7bf71c9ef8901bc39e2a2d629b1101307115c0c4d844fcbd8e86b6ccd4";
           libraryHaskellDepends = [ base lens time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nilcons/lens-datetime";
           description = "Lenses for Data.Time.* types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family" = callPackage
        ({ mkDerivation, base, containers, lens-family-core, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lens-family";
           version = "1.2.3";
           sha256 = "8059e2b7a917e0108861ca795b0adfbb0bf1db5b1bdb55e677256a37d8de0e29";
           libraryHaskellDepends = [
             base containers lens-family-core mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lens Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family-core" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "lens-family-core";
           version = "1.2.3";
           sha256 = "914f5f077d7bed8a93866ac696e69c35bb8d0fbe81314236288b057941703901";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell 98 Lens Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family-th" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "lens-family-th";
           version = "0.5.0.2";
           sha256 = "9c275afad37a5064b9a13c6207ee2307f6ccccc3a5517c0fae84524bad65b0e6";
           revision = "1";
           editedCabalFile = "06sbynlrbqb51rn392w1q82qww1f6k8mmw1npgla2wc6s39k4977";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/DanBurton/lens-family-th#readme";
           description = "Generate lens-family style lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-misc" = callPackage
        ({ mkDerivation, base, lens, stdenv, tagged, template-haskell }:
         mkDerivation {
           pname = "lens-misc";
           version = "0.0.2.0";
           sha256 = "59925fe9125e297df0f1afcc8ac0f25de14fd017f7848ac2687ed63850ecd8cb";
           libraryHaskellDepends = [ base lens tagged template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/lens-misc#readme";
           description = "Miscellaneous lens utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-process" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, filepath, lens
         , process, stdenv
         }:
         mkDerivation {
           pname = "lens-process";
           version = "0.3.0.1";
           sha256 = "a60971100dbfa2352b111ad9dfd87f4c9596d4964874e9f198652824acb37f17";
           revision = "1";
           editedCabalFile = "1znsf836c0jar22ll6s01q8nb2zq8vgrz2nni0mkagx02fknshai";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base filepath lens process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emilypi/lens-process";
           description = "Optics for system processes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-properties" = callPackage
        ({ mkDerivation, base, lens, QuickCheck, stdenv, transformers }:
         mkDerivation {
           pname = "lens-properties";
           version = "4.11.1";
           sha256 = "4f7c5b75a7204c151dbe62160a6917a22ab9e2a1b2e3848b7043d972ac8f4cb1";
           revision = "4";
           editedCabalFile = "1ky3xzh3cgam5ncx7n25xbll7vqw3x7vyhprfmxm34pshkxbrjh7";
           libraryHaskellDepends = [ base lens QuickCheck transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lens/";
           description = "QuickCheck properties for lens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-regex" = callPackage
        ({ mkDerivation, array, base, lens, regex-base, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "lens-regex";
           version = "0.1.1";
           sha256 = "0d946baa2be86452fe0a2185575e1d00752a075c92c48acdb3ed7833cd1ec730";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base lens regex-base template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/lens-regex";
           description = "Lens powered regular expression";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-regex-pcre" = callPackage
        ({ mkDerivation, base, bytestring, lens, pcre-heavy, pcre-light
         , stdenv, template-haskell, text
         }:
         mkDerivation {
           pname = "lens-regex-pcre";
           version = "0.3.1.0";
           sha256 = "7e45f0ebf531aa4cb97ae92f3532a49d77bcdd639f8c3b2860e9f37af4e770b9";
           libraryHaskellDepends = [
             base bytestring lens pcre-heavy pcre-light template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisPenner/lens-regex-pcre#readme";
           description = "A lensy interface to regular expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-simple" = callPackage
        ({ mkDerivation, base, lens-family, lens-family-core
         , lens-family-th, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "lens-simple";
           version = "0.1.0.9";
           sha256 = "613d99b8074197f8a026a641a9940dd188e0d81e808169f420981a9ca15b832a";
           libraryHaskellDepends = [
             base lens-family lens-family-core lens-family-th mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelt/lens-simple";
           description = "simplified import of elementary lens-family combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-typelevel" = callPackage
        ({ mkDerivation, base, singletons, stdenv }:
         mkDerivation {
           pname = "lens-typelevel";
           version = "0.1.1.0";
           sha256 = "773d07872000869d3fd4b45256e4ce8da16f85754da87bdd084a33f5b2b94d53";
           libraryHaskellDepends = [ base singletons ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/lens-typelevel#readme";
           description = "Type-level lenses using singletons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lenz" = callPackage
        ({ mkDerivation, base, base-unicode-symbols, hs-functors, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lenz";
           version = "0.3.1.0";
           sha256 = "d661b993f5794a0d55472e87573b19e53fb2b0c90ab5749d6f69eacdcba807b1";
           libraryHaskellDepends = [
             base base-unicode-symbols hs-functors transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Van Laarhoven lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "leveldb-haskell" = callPackage
        ({ mkDerivation, base, bytestring, data-default, exceptions
         , filepath, leveldb, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "leveldb-haskell";
           version = "0.6.5";
           sha256 = "a417b088068deba73a77936c1345302bac7ce06019fb10254857cafad1d76c28";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring data-default exceptions filepath resourcet
             transformers
           ];
           librarySystemDepends = [ leveldb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/kim/leveldb-haskell";
           description = "Haskell bindings to LevelDB";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) leveldb;};
      "libffi" = callPackage
        ({ mkDerivation, base, bytestring, ffi, libffi, stdenv }:
         mkDerivation {
           pname = "libffi";
           version = "0.1";
           sha256 = "48387067c0f33bcfadf7a3bebbf48a55294202500f2b754229ffc8f12cb4f23c";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ ffi ];
           libraryPkgconfigDepends = [ libffi ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to libffi";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) ffi; inherit (pkgs) libffi;};
      "libgit" = callPackage
        ({ mkDerivation, base, mtl, process, stdenv }:
         mkDerivation {
           pname = "libgit";
           version = "0.3.1";
           sha256 = "1d4c60dd987c363d77c4be947678d01a51ab4b568964c30a33827ccc854f7522";
           libraryHaskellDepends = [ base mtl process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-libgit";
           description = "Simple Git Wrapper";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "libgraph" = callPackage
        ({ mkDerivation, array, base, containers, monads-tf, process
         , stdenv, union-find
         }:
         mkDerivation {
           pname = "libgraph";
           version = "1.14";
           sha256 = "b7978be50d6182101ca79fb3ea83d0621f5394d483d1fa1eb7d590e45f8d3f3f";
           revision = "1";
           editedCabalFile = "12xyrvvyh73b93k74lj55zwaygsvd93p4bm51kcd54m0pv0lclbq";
           libraryHaskellDepends = [
             array base containers monads-tf process union-find
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://maartenfaddegon.nl";
           description = "Store and manipulate data in a graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "libmpd" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , data-default-class, filepath, mtl, network, old-locale
         , safe-exceptions, stdenv, text, time, utf8-string
         }:
         mkDerivation {
           pname = "libmpd";
           version = "0.9.1.0";
           sha256 = "d941296ce48671f73d328e8b0d00cc1c99eabc0d81d98067af78ddde88db3ab8";
           libraryHaskellDepends = [
             attoparsec base bytestring containers data-default-class filepath
             mtl network old-locale safe-exceptions text time utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vimus/libmpd-haskell#readme";
           description = "An MPD client library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "liboath-hs" = callPackage
        ({ mkDerivation, base, bytestring, inline-c, liboath, oath
         , safe-exceptions, stdenv, time
         }:
         mkDerivation {
           pname = "liboath-hs";
           version = "0.0.1.1";
           sha256 = "33b48fc2789b85c87ae2f24469d044bfc1549171138363554fbb7d0159267046";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring inline-c safe-exceptions time
           ];
           librarySystemDepends = [ oath ];
           libraryPkgconfigDepends = [ liboath ];
           executableHaskellDepends = [ base bytestring time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/parsonsmatt/liboath-hs#readme";
           description = "Bindings to liboath";
           license = stdenv.lib.licenses.gpl3;
         }) {inherit (pkgs) liboath; inherit (pkgs) oath;};
      "libraft" = callPackage
        ({ mkDerivation, async, atomic-write, attoparsec, base
         , base16-bytestring, bytestring, cereal, concurrency, containers
         , cryptohash-sha256, dejafu, directory, ekg, ekg-core, exceptions
         , file-embed, filepath, haskeline, lifted-base, monad-control
         , monad-metrics, mtl, network, network-simple, optparse-applicative
         , parsec, postgresql-simple, postgresql-simple-url, protolude
         , random, repline, stdenv, stm, text, time, transformers
         , transformers-base, unordered-containers, word8
         }:
         mkDerivation {
           pname = "libraft";
           version = "0.5.0.0";
           sha256 = "4ccfec39efa92d764a12cc487b5ac0d99d4762193b80a174d16d68086613938f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async atomic-write attoparsec base base16-bytestring bytestring
             cereal concurrency containers cryptohash-sha256 dejafu directory
             ekg ekg-core exceptions file-embed filepath haskeline lifted-base
             monad-control monad-metrics mtl network network-simple parsec
             postgresql-simple protolude random repline stm text time
             transformers transformers-base unordered-containers word8
           ];
           executableHaskellDepends = [
             async atomic-write attoparsec base base16-bytestring bytestring
             cereal concurrency containers cryptohash-sha256 dejafu directory
             ekg ekg-core exceptions file-embed filepath haskeline lifted-base
             monad-control monad-metrics mtl network network-simple
             optparse-applicative parsec postgresql-simple postgresql-simple-url
             protolude random repline stm text time transformers
             transformers-base unordered-containers word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/raft#readme";
           description = "Raft consensus algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "libyaml" = callPackage
        ({ mkDerivation, base, bytestring, conduit, resourcet, stdenv }:
         mkDerivation {
           pname = "libyaml";
           version = "0.1.2";
           sha256 = "8f42d66f199fcaee255326f8f770d88b0670df56b5eb78002d6058f3a45e97b5";
           libraryHaskellDepends = [ base bytestring conduit resourcet ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/yaml#readme";
           description = "Low-level, streaming YAML interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lift-generics" = callPackage
        ({ mkDerivation, base, generic-deriving, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "lift-generics";
           version = "0.1.3";
           sha256 = "671b2e2ece639e9a8e45af49cfda8fcb074f43fb74b1e2f545bd405a665c5964";
           libraryHaskellDepends = [
             base generic-deriving ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/lift-generics";
           description = "GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lifted-async" = callPackage
        ({ mkDerivation, async, base, constraints, lifted-base
         , monad-control, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "lifted-async";
           version = "0.10.0.4";
           sha256 = "c9c988c2078f9d83034b26f487182869aaaa67c4b1e340c306b35dc9410b9433";
           libraryHaskellDepends = [
             async base constraints lifted-base monad-control transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/lifted-async";
           description = "Run lifted IO operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lifted-base" = callPackage
        ({ mkDerivation, base, monad-control, stdenv, transformers-base }:
         mkDerivation {
           pname = "lifted-base";
           version = "0.2.3.12";
           sha256 = "c134a95f56750aae806e38957bb03c59627cda16034af9e00a02b699474317c5";
           libraryHaskellDepends = [ base monad-control transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/lifted-base";
           description = "lifted IO operations from the base library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "line" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , cryptohash-sha256, http-conduit, http-types, scotty, stdenv, text
         , time, transformers, wai
         }:
         mkDerivation {
           pname = "line";
           version = "4.0.1";
           sha256 = "a1dfab5dcd078747920fc61a024eb096a554f465d57c8bc642c155150f41667c";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring cryptohash-sha256
             http-conduit http-types scotty text time transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/utatti/line";
           description = "Haskell SDK for the LINE API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linear" = callPackage
        ({ mkDerivation, adjunctions, base, base-orphans, binary, bytes
         , Cabal, cabal-doctest, cereal, containers, deepseq, distributive
         , ghc-prim, hashable, lens, reflection, semigroupoids, semigroups
         , stdenv, tagged, template-haskell, transformers
         , transformers-compat, unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "linear";
           version = "1.20.9";
           sha256 = "c5a9b209d31fc00b62d43c1de34fb59f9f115c51e6db43353f76a4825fc4fe40";
           revision = "1";
           editedCabalFile = "13ff7xvw25fpsikcvf0nly2ca614wzv10qyg4sh378p5r8rvfgka";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             adjunctions base base-orphans binary bytes cereal containers
             deepseq distributive ghc-prim hashable lens reflection
             semigroupoids semigroups tagged template-haskell transformers
             transformers-compat unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/linear/";
           description = "Linear Algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linear-circuit" = callPackage
        ({ mkDerivation, base, comfort-array, comfort-graph, containers
         , lapack, netlib-ffi, stdenv, transformers, utility-ht
         }:
         mkDerivation {
           pname = "linear-circuit";
           version = "0.1.0.2";
           sha256 = "95a67081822068b5973dbbff143369103ee4676e621c8b91b6f77a7111a6c231";
           libraryHaskellDepends = [
             base comfort-array comfort-graph containers lapack netlib-ffi
             transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/linear-circuit";
           description = "Compute resistance of linear electrical circuits";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linux-file-extents" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "linux-file-extents";
           version = "0.2.0.0";
           sha256 = "6c7cd9e700f666f774736d31a0e6aa7bfe9bd1e075c11eed701ba95095fd9bd0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/linux-file-extents";
           description = "Retrieve file fragmentation information under Linux";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linux-namespaces" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "linux-namespaces";
           version = "0.1.3.0";
           sha256 = "1412db341c574b6a18e2fa23ee5e3ca6f32719409ea602a6215f1fd0aafb73e7";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-linux-namespaces";
           description = "Work with linux namespaces: create new or enter existing ones";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "list-t" = callPackage
        ({ mkDerivation, base, foldl, mmorph, monad-control, mtl, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "list-t";
           version = "1.0.4";
           sha256 = "3863844bf18a47997dce5972df30b6a38d257cbc168216be2233a40b33c15577";
           libraryHaskellDepends = [
             base foldl mmorph monad-control mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/list-t";
           description = "ListT done right";
           license = stdenv.lib.licenses.mit;
         }) {};
      "list-witnesses" = callPackage
        ({ mkDerivation, base, decidable, microlens, profunctors
         , singletons, stdenv, vinyl
         }:
         mkDerivation {
           pname = "list-witnesses";
           version = "0.1.1.1";
           sha256 = "47f1d31e8d168e465170d35796e288bd666376a1075b2779b9c4697f277b058e";
           libraryHaskellDepends = [
             base decidable microlens profunctors singletons vinyl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/list-witnesses#readme";
           description = "Witnesses for working with type-level lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "listsafe" = callPackage
        ({ mkDerivation, base, exceptions, stdenv }:
         mkDerivation {
           pname = "listsafe";
           version = "0.1.0.1";
           sha256 = "1a073247edfbea7dd7b7f9629fc64ddd3bce67fa61695da23ff43fb31d398d69";
           libraryHaskellDepends = [ base exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ombocomp/listsafe";
           description = "Safe wrappers for partial list functions, supporting MonadThrow";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "llvm-hs" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, Cabal
         , containers, exceptions, llvm-config, llvm-hs-pure, mtl, stdenv
         , template-haskell, transformers, utf8-string
         }:
         mkDerivation {
           pname = "llvm-hs";
           version = "8.0.0";
           sha256 = "d0989ffab5537e78594c6bc33083bf21270f3b1f9f648c655a9ee7dd7a67d397";
           revision = "1";
           editedCabalFile = "1mq04vjz34c8a4291q7ln0wh4kw03hkf2l1659mdrnv7yyi72j0w";
           setupHaskellDepends = [ base Cabal containers ];
           libraryHaskellDepends = [
             array attoparsec base bytestring containers exceptions llvm-hs-pure
             mtl template-haskell transformers utf8-string
           ];
           libraryToolDepends = [ llvm-config ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/llvm-hs/llvm-hs/";
           description = "General purpose LLVM bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "llvm-hs-pure" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, fail
         , mtl, stdenv, template-haskell, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "llvm-hs-pure";
           version = "8.0.0";
           sha256 = "cc593468297a6ede3079542cde273c02cf4661bf1698e2d66eaddfb6035334eb";
           libraryHaskellDepends = [
             attoparsec base bytestring containers fail mtl template-haskell
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/llvm-hs/llvm-hs/";
           description = "Pure Haskell LLVM functionality (no FFI)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lmdb" = callPackage
        ({ mkDerivation, array, base, lmdb, stdenv }:
         mkDerivation {
           pname = "lmdb";
           version = "0.2.5";
           sha256 = "80552856211cdce06b808685d621bdd9c33a5ac5540a4dafe120c6b20c901c7d";
           libraryHaskellDepends = [ array base ];
           librarySystemDepends = [ lmdb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dmbarbour/haskell-lmdb";
           description = "Lightning MDB bindings";
           license = stdenv.lib.licenses.bsd2;
         }) {inherit (pkgs) lmdb;};
      "load-env" = callPackage
        ({ mkDerivation, base, directory, filepath, parsec, stdenv }:
         mkDerivation {
           pname = "load-env";
           version = "0.2.1.0";
           sha256 = "e3ec6dfafeb9be454d010e1a4330b5a66beb8fb9496a9b70a42e9b18ea0494a0";
           libraryHaskellDepends = [ base directory filepath parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pbrisbin/load-env#readme";
           description = "Load environment variables from a file";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "loc" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "loc";
           version = "0.1.3.4";
           sha256 = "c263ff5fbbd7d8cb597e617cb4a0cf961cac3b62c64de777e27d784e32b6b8f5";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chris-martin/loc";
           description = "Types representing line and column positions and ranges in text files";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "locators" = callPackage
        ({ mkDerivation, base, bytestring, containers, cryptohash, stdenv
         }:
         mkDerivation {
           pname = "locators";
           version = "0.2.4.4";
           sha256 = "2d6d0940206e285a086ea66c7b5f8b3a082fa629a8d335323dbbf78547e09aa5";
           libraryHaskellDepends = [ base bytestring containers cryptohash ];
           doHaddock = false;
           doCheck = false;
           description = "Human exchangable identifiers and locators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "loch-th" = callPackage
        ({ mkDerivation, base, pretty, stdenv, template-haskell }:
         mkDerivation {
           pname = "loch-th";
           version = "0.2.2";
           sha256 = "cc059372b12a79375a0f268db7dc5a2973307a200440d4112e665b9a3d9b6dc3";
           libraryHaskellDepends = [ base pretty template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liskin/loch-th";
           description = "Support for precise error locations in source files (Template Haskell version)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lockfree-queue" = callPackage
        ({ mkDerivation, abstract-deque, atomic-primops, base, bytestring
         , ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "lockfree-queue";
           version = "0.2.3.1";
           sha256 = "2a576a54bae8eabde01ebe901c9fd26a11bebb30516841de4525b5b60c0f3a8c";
           libraryHaskellDepends = [
             abstract-deque atomic-primops base bytestring ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "Michael and Scott lock-free queues";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-base" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, deepseq
         , exceptions, mmorph, monad-control, monad-time, mtl, semigroups
         , stdenv, stm, text, time, transformers-base, unliftio-core
         , unordered-containers
         }:
         mkDerivation {
           pname = "log-base";
           version = "0.8.0.0";
           sha256 = "a68aee51f113fbaebc1153aac65bb438b013601e415b83d69b8668e3cd4ea394";
           revision = "1";
           editedCabalFile = "0kdkvyw39ywly1qv1l0sq5qzr1akigl8410vr647hy2cn46anva0";
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring deepseq exceptions mmorph
             monad-control monad-time mtl semigroups stm text time
             transformers-base unliftio-core unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/log";
           description = "Structured logging solution (base package)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-domain" = callPackage
        ({ mkDerivation, base, binary, bytes, Cabal, cabal-doctest, cereal
         , comonad, deepseq, distributive, hashable, semigroupoids
         , semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "log-domain";
           version = "0.12";
           sha256 = "7191cba40b9b348c54171f2b86caabb75a30e52b6d7e4c57321bf5dcdf1f367e";
           revision = "4";
           editedCabalFile = "1z7p87dl1rj0v2gnfwfa7zmgaxccd093hvjkijc56whyg4b4az4y";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base binary bytes cereal comonad deepseq distributive hashable
             semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/log-domain/";
           description = "Log-domain arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logfloat" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "logfloat";
           version = "0.13.3.3";
           sha256 = "f774bd71d82ae053046ab602aa451ce4f65440d5c634dc8d950ae87f53527f82";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Log-domain floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logger-thread" = callPackage
        ({ mkDerivation, base, fast-logger, protolude, safe-exceptions
         , stdenv, stm, text, time
         }:
         mkDerivation {
           pname = "logger-thread";
           version = "0.1.0.2";
           sha256 = "ac0a54001a69cff6f975209c4d9d399fb58ef59bb0ad6ac742c5ffedeac04a2a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base fast-logger protolude safe-exceptions stm text time
           ];
           executableHaskellDepends = [ base protolude stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joe9/logger-thread#readme";
           description = "Run FastLogger in a thread and direct all queued messages to it";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logging-effect" = callPackage
        ({ mkDerivation, async, base, exceptions, free, monad-control, mtl
         , prettyprinter, semigroups, stdenv, stm, stm-delay, text, time
         , transformers, transformers-base, unliftio-core
         }:
         mkDerivation {
           pname = "logging-effect";
           version = "1.3.9";
           sha256 = "b995326e305b388421d669eb947c24d12526ab0ee629c8c68f9775300bf7e0a1";
           libraryHaskellDepends = [
             async base exceptions free monad-control mtl prettyprinter
             semigroups stm stm-delay text time transformers transformers-base
             unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocharles/logging-effect";
           description = "A mtl-style monad transformer for general purpose & compositional logging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logging-facade" = callPackage
        ({ mkDerivation, base, call-stack, stdenv, transformers }:
         mkDerivation {
           pname = "logging-facade";
           version = "0.3.0";
           sha256 = "8e7115258b76e0bf5d21b532dd916c63e79b32d1776cc355d2d184f67ae71434";
           libraryHaskellDepends = [ base call-stack transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/logging-facade#readme";
           description = "Simple logging abstraction that allows multiple back-ends";
           license = stdenv.lib.licenses.mit;
         }) {};
      "logging-facade-syslog" = callPackage
        ({ mkDerivation, base, hsyslog, logging-facade, stdenv }:
         mkDerivation {
           pname = "logging-facade-syslog";
           version = "1";
           sha256 = "eb8b23c3f77a788891eac00e2d84bf489b683d761028a7938cf93e36729d8ea9";
           libraryHaskellDepends = [ base hsyslog logging-facade ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/logging-facade-syslog#readme";
           description = "A logging back-end to syslog(3) for the logging-facade library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logict" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "logict";
           version = "0.7.0.2";
           sha256 = "ccc198a05563a4d8fc145ecde8b43a83599b3bcb032d2614a8e852f0ba6ecff5";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/logict#readme";
           description = "A backtracking logic-programming monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "loop" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "loop";
           version = "0.3.0";
           sha256 = "92962010bdab28cc0092dd3fe42819d6f215c717dd10d9349626d92a0d0b3ecf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/loop";
           description = "Fast loops (for when GHC can't optimize forM_)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "loopbreaker" = callPackage
        ({ mkDerivation, base, containers, ghc, stdenv, syb }:
         mkDerivation {
           pname = "loopbreaker";
           version = "0.1.1.1";
           sha256 = "18d81ab891e9d5aa23d26a73d977284bb9a69161b5008bfd2e5613be011dbe47";
           libraryHaskellDepends = [ base containers ghc syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/polysemy-research/loopbreaker#readme";
           description = "inline self-recursive definitions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lrucache" = callPackage
        ({ mkDerivation, base, containers, contravariant, stdenv }:
         mkDerivation {
           pname = "lrucache";
           version = "1.2.0.1";
           sha256 = "fc1ab2375eeaae181d838095354d3ef77d4072815006a285dd39a165a5855b85";
           libraryHaskellDepends = [ base containers contravariant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chowells79/lrucache";
           description = "a simple, pure LRU cache";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lrucaching" = callPackage
        ({ mkDerivation, base, base-compat, deepseq, hashable, psqueues
         , stdenv, vector
         }:
         mkDerivation {
           pname = "lrucaching";
           version = "0.3.3";
           sha256 = "aa7e5fd27963c70fc1108a7c0526ca0e05f76ccd885844bc50bdae70d5174aa4";
           revision = "10";
           editedCabalFile = "1yzmwvwzby4dx896jlgznlpigqlsl475a57l1npjz0rimlqr71w6";
           libraryHaskellDepends = [
             base base-compat deepseq hashable psqueues vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cocreature/lrucaching#readme";
           description = "LRU cache";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lsp-test" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, ansi-terminal, async, base
         , bytestring, conduit, conduit-parse, containers, data-default
         , Diff, directory, filepath, haskell-lsp, lens, mtl
         , parser-combinators, process, rope-utf16-splay, stdenv, text
         , transformers, unix, unordered-containers
         }:
         mkDerivation {
           pname = "lsp-test";
           version = "0.6.1.0";
           sha256 = "d15103bc8c84f74ff90220b66cacebe4bcd135ef1e31ddd10c808a94484db7a4";
           libraryHaskellDepends = [
             aeson aeson-pretty ansi-terminal async base bytestring conduit
             conduit-parse containers data-default Diff directory filepath
             haskell-lsp lens mtl parser-combinators process rope-utf16-splay
             text transformers unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bubba/lsp-test#readme";
           description = "Functional test framework for LSP servers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lucid" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , hashable, mmorph, mtl, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "lucid";
           version = "2.9.12";
           sha256 = "304bc31b4b5d65b0e7bc4ad88ca2a2c84f64e92fa9aee7f3591486d67cb4dc94";
           revision = "1";
           editedCabalFile = "1f0whk5ncanxfjjanrf6rqyncig2xgc5mh2j0sqy3nrlyjr9aqq9";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers hashable mmorph mtl text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/lucid";
           description = "Clear to write, read and edit DSL for HTML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lucid-extras" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, lucid
         , stdenv, text
         }:
         mkDerivation {
           pname = "lucid-extras";
           version = "0.2.2";
           sha256 = "83399f85c9461c44c8dd6d34a076fdefa7f9cb1f92dba5f3d03989233c45247e";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring lucid text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/diffusionkinetics/open/lucid-extras";
           description = "Generate more HTML with Lucid - Bootstrap, Rdash, Vega-Lite, Leaflet JS, Email";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lxd-client-config" = callPackage
        ({ mkDerivation, aeson, base, containers, directory, filepath
         , stdenv, text, yaml
         }:
         mkDerivation {
           pname = "lxd-client-config";
           version = "0.1.0.1";
           sha256 = "903852c99bebc0af3cc3a26734056003f9097ada08eb1f361abce097a120afcf";
           libraryHaskellDepends = [
             aeson base containers directory filepath text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/haskell-lxd-client-config#readme";
           description = "Read the configuration file of the standard LXD client";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "lzma" = callPackage
        ({ mkDerivation, base, bytestring, lzma, stdenv }:
         mkDerivation {
           pname = "lzma";
           version = "0.0.0.3";
           sha256 = "af8321c3511bde3e2745093fa3bd74c642e386db7d2e7c43b3a54814f1338144";
           revision = "5";
           editedCabalFile = "1m1a3w8cjqz8h4iibkgykzgmrmkxxgz9sm0zn52dbvczdiqbs5y5";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ lzma ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/lzma";
           description = "LZMA/XZ compression and decompression";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) lzma;};
      "lzma-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, lzma, resourcet, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lzma-conduit";
           version = "1.2.1";
           sha256 = "e955da2b8b108b3bf07073e12e5b01c46d42c8f3e40828fb1f34cd7e5413a742";
           libraryHaskellDepends = [
             base bytestring conduit lzma resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alphaHeavy/lzma-conduit";
           description = "Conduit interface for lzma/xz compression";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "machines" = callPackage
        ({ mkDerivation, adjunctions, base, Cabal, cabal-doctest, comonad
         , containers, distributive, mtl, pointed, profunctors
         , semigroupoids, semigroups, stdenv, transformers
         , transformers-compat, void
         }:
         mkDerivation {
           pname = "machines";
           version = "0.6.4";
           sha256 = "72de2b2e27cb36832ec4a66de36f1ba6c53d2abd197b7f0351865b4567db7768";
           revision = "2";
           editedCabalFile = "1h0qq6kxv4kc0j0rmx7rhwhvfg1hc08r10q152km4p8kgshcwlig";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             adjunctions base comonad containers distributive mtl pointed
             profunctors semigroupoids semigroups transformers
             transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/machines/";
           description = "Networked stream transducers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "machines-binary" = callPackage
        ({ mkDerivation, base, binary, bytestring, machines, stdenv }:
         mkDerivation {
           pname = "machines-binary";
           version = "0.3.0.3";
           sha256 = "60ff456d658ea1a427f32ee5ae1c726e2e7703942bd33edf28b457d753c20652";
           libraryHaskellDepends = [ base binary bytestring machines ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-binary";
           description = "Binary utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "machines-directory" = callPackage
        ({ mkDerivation, base, directory, filepath, machines, machines-io
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "machines-directory";
           version = "0.2.1.0";
           sha256 = "849c07db6ff6cfd88348d228a7a3f8ccb16e99568230ee0d20faa5670474deb4";
           libraryHaskellDepends = [
             base directory filepath machines machines-io transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-directory";
           description = "Directory (system) utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "machines-io" = callPackage
        ({ mkDerivation, base, bytestring, chunked-data, machines, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "machines-io";
           version = "0.2.0.13";
           sha256 = "4d579d5e9e94fafcfca91322734263498999d2e2af45c40ff0d1db78f4a8f5d4";
           libraryHaskellDepends = [
             base bytestring chunked-data machines transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-io";
           description = "IO utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "magico" = callPackage
        ({ mkDerivation, base, comfort-array, lapack, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "magico";
           version = "0.0.2.1";
           sha256 = "9d744003a09cfb119dcda858300e2b92c7ca9e1def7a85b6c1e88ccffa5198cd";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base comfort-array lapack transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/magico";
           description = "Compute solutions for Magico puzzle";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "main-tester" = callPackage
        ({ mkDerivation, base, bytestring, directory, stdenv }:
         mkDerivation {
           pname = "main-tester";
           version = "0.2.0.1";
           sha256 = "cf06f5934e374e1972f2cc76701c03d67c5536034d9ad32cace4e03819a57842";
           libraryHaskellDepends = [ base bytestring directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/igrep/main-tester#readme";
           description = "Capture stdout/stderr/exit code, and replace stdin of your main function";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "mainland-pretty" = callPackage
        ({ mkDerivation, base, containers, srcloc, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "mainland-pretty";
           version = "0.7.0.1";
           sha256 = "88856f0ff7c523db03f70939a3ca55f3a827e8ee8ae3f795dc2c2c866fdb2e32";
           libraryHaskellDepends = [
             base containers srcloc text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mainland/mainland-pretty";
           description = "Pretty printing designed for printing source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "makefile" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "makefile";
           version = "1.1.0.0";
           sha256 = "ed7a12094fe93ef0c6350ed6607ad488703f54bc2ad5d8cb2f9d89eb10b75c07";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nmattia/mask";
           description = "Simple Makefile parser and generator";
           license = stdenv.lib.licenses.mit;
         }) {};
      "managed" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "managed";
           version = "1.0.7";
           sha256 = "d130c22e988b02bdb4b06234a400578638f5daba6ad9bca08f845d364733b173";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A monad for managed values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "markdown" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
         , conduit, conduit-extra, containers, data-default, stdenv, text
         , transformers, xml-conduit, xml-types, xss-sanitize
         }:
         mkDerivation {
           pname = "markdown";
           version = "0.1.17.4";
           sha256 = "c2e3e742be2b4af6ed62be262cab59d2366556e120b1f8856cff6e7ef270fdd4";
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup conduit conduit-extra
             containers data-default text transformers xml-conduit xml-types
             xss-sanitize
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/markdown";
           description = "Convert Markdown to HTML, with XSS protection";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "markdown-unlit" = callPackage
        ({ mkDerivation, base, base-compat, stdenv }:
         mkDerivation {
           pname = "markdown-unlit";
           version = "0.5.0";
           sha256 = "e72d0d7b82525e2a2c664012ce9dc35835b3fff91040d9f20897ed82f24ec7bf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base base-compat ];
           executableHaskellDepends = [ base base-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/markdown-unlit#readme";
           description = "Literate Haskell support for Markdown";
           license = stdenv.lib.licenses.mit;
         }) {};
      "markov-chain" = callPackage
        ({ mkDerivation, base, containers, random, stdenv, transformers }:
         mkDerivation {
           pname = "markov-chain";
           version = "0.0.3.4";
           sha256 = "6e51b800101a28593be28ce7ef1b21b7cc7a177a821fb99ecd8a28c69b7b92cd";
           libraryHaskellDepends = [ base containers random transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/markov-chain/";
           description = "Markov Chains for generating random sequences with a user definable behaviour";
           license = "GPL";
         }) {};
      "massiv" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cabal-doctest
         , data-default-class, deepseq, exceptions, primitive, scheduler
         , stdenv, unliftio-core, vector
         }:
         mkDerivation {
           pname = "massiv";
           version = "0.4.5.0";
           sha256 = "811b26a2b82af7ea2f5b7530ede027b79aa4dad24775a7f87aa12b2eaea7b41a";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bytestring data-default-class deepseq exceptions primitive
             scheduler unliftio-core vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lehins/massiv";
           description = "Massiv (Массив) is an Array Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "massiv-io" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, deepseq
         , directory, filepath, JuicyPixels, massiv, netpbm, process, stdenv
         , vector
         }:
         mkDerivation {
           pname = "massiv-io";
           version = "0.1.9.0";
           sha256 = "79fca7336f0c72da798e4f0457da3f5c31cb61aa1efa1b2e786343b5d5e2f46a";
           libraryHaskellDepends = [
             base bytestring data-default-class deepseq directory filepath
             JuicyPixels massiv netpbm process vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lehins/massiv";
           description = "Import/export of Image files into massiv Arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "massiv-test" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, deepseq
         , exceptions, hspec, massiv, primitive, QuickCheck, scheduler
         , stdenv, unliftio, vector
         }:
         mkDerivation {
           pname = "massiv-test";
           version = "0.1.2";
           sha256 = "e2c29a7db528a37e1f3bc22a97406500c544c349aeb8619d7a98af7c7847578f";
           libraryHaskellDepends = [
             base bytestring data-default-class deepseq exceptions hspec massiv
             primitive QuickCheck scheduler unliftio vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lehins/massiv";
           description = "Library that contains generators, properties and tests for Massiv Array Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "math-functions" = callPackage
        ({ mkDerivation, base, data-default-class, deepseq, primitive
         , stdenv, vector, vector-th-unbox
         }:
         mkDerivation {
           pname = "math-functions";
           version = "0.3.3.0";
           sha256 = "63c599ea76a4cd7fc41d564a37c09d1f7806085f48028bc02779300d885eb6e8";
           libraryHaskellDepends = [
             base data-default-class deepseq primitive vector vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/math-functions";
           description = "Collection of tools for numeric computations";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "mathexpr" = callPackage
        ({ mkDerivation, base, data-default-class, stdenv }:
         mkDerivation {
           pname = "mathexpr";
           version = "0.3.0.0";
           sha256 = "23c30ae0c962a7858d57bed320be6421baeb82fa795260e1eea0bc8fcc4871ad";
           libraryHaskellDepends = [ base data-default-class ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mdibaiee/mathexpr";
           description = "Parse and evaluate math expressions with variables and functions";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "matplotlib" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , filepath, process, split, stdenv, temporary
         }:
         mkDerivation {
           pname = "matplotlib";
           version = "0.7.5";
           sha256 = "9a05e177ce4a0d39f117e89af2390c42a09ec7ef1be39c66c6f45c59a4c9d247";
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq filepath process split
             temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abarbu/matplotlib-haskell";
           description = "Bindings to Matplotlib; a Python plotting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrices" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv, vector }:
         mkDerivation {
           pname = "matrices";
           version = "0.5.0";
           sha256 = "fd013f0b061f7fd006242340fb6bc936114c8fc7d255ba58bd54cd1d66391d4d";
           libraryHaskellDepends = [ base deepseq primitive vector ];
           doHaddock = false;
           doCheck = false;
           description = "native matrix based on vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrix" = callPackage
        ({ mkDerivation, base, deepseq, loop, primitive, semigroups, stdenv
         , vector
         }:
         mkDerivation {
           pname = "matrix";
           version = "0.3.6.1";
           sha256 = "fa976ca3bc98149ce59b7ae37869eda615562711e1fef90889f6e0c4f2093b2c";
           revision = "1";
           editedCabalFile = "0iy0gdgg68ldhgm4lzvzl5pmzflx0r4brdbdkq75rkarm7cigawn";
           libraryHaskellDepends = [
             base deepseq loop primitive semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "A native implementation of matrix operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrix-market-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, exceptions
         , scientific, stdenv
         }:
         mkDerivation {
           pname = "matrix-market-attoparsec";
           version = "0.1.1.3";
           sha256 = "32b79a75c8cf5b21a40ea51bc091ee5fd4809483d933b0dbc578528ccf8e924d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring exceptions scientific
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/matrix-market-attoparsec";
           description = "Parsing and serialization functions for the NIST Matrix Market format";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "matrix-static" = callPackage
        ({ mkDerivation, base, deepseq, ghc-typelits-natnormalise, matrix
         , stdenv, vector
         }:
         mkDerivation {
           pname = "matrix-static";
           version = "0.2.1";
           sha256 = "36f4106836350932425e985472b54d913d679496c3758b7efa00a3a0d57006cb";
           libraryHaskellDepends = [
             base deepseq ghc-typelits-natnormalise matrix vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wchresta/matrix-static#readme";
           description = "Type-safe matrix operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "maximal-cliques" = callPackage
        ({ mkDerivation, base, containers, stdenv, vector }:
         mkDerivation {
           pname = "maximal-cliques";
           version = "0.1.1";
           sha256 = "709d05c753c7d2d7466ade515da0255fc79241432d0118b3182dd3b2def475e9";
           libraryHaskellDepends = [ base containers vector ];
           doHaddock = false;
           doCheck = false;
           description = "Enumerate all maximal cliques of a graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mbox" = callPackage
        ({ mkDerivation, base, safe, stdenv, text, time, time-locale-compat
         }:
         mkDerivation {
           pname = "mbox";
           version = "0.3.4";
           sha256 = "dce4b538bbe03928a1d1438bf80b4d341ffb1a9d23ead1c2b16a04b0fa5371de";
           revision = "1";
           editedCabalFile = "11jikczq21fnhsvr6n33qbb5q6ixbhab4s0js8n39zwgmglighz5";
           libraryHaskellDepends = [ base safe text time time-locale-compat ];
           doHaddock = false;
           doCheck = false;
           description = "Read and write standard mailbox files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mbtiles" = callPackage
        ({ mkDerivation, base, bytestring, directory, monad-control, mtl
         , resource-pool, sqlite-simple, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "mbtiles";
           version = "0.6.0.0";
           sha256 = "b8a82f0a1c551a59961449587f031f679dd2f5f082ce45b6f7d88d81f99ad62f";
           libraryHaskellDepends = [
             base bytestring directory monad-control mtl resource-pool
             sqlite-simple text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/mbtiles#readme";
           description = "Haskell MBTiles client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mcmc-types" = callPackage
        ({ mkDerivation, base, containers, mwc-probability, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "mcmc-types";
           version = "1.0.3";
           sha256 = "3c4b25030b05567694ddc313ca808a32133ad5433b4d89837e1ed00bbfcefc6e";
           libraryHaskellDepends = [
             base containers mwc-probability transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mcmc-types";
           description = "Common types for sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "median-stream" = callPackage
        ({ mkDerivation, base, heap, stdenv }:
         mkDerivation {
           pname = "median-stream";
           version = "0.7.0.0";
           sha256 = "e92fc44be8189dafe9190aad225462780f26d0b1fe1823376342329db6c71f3d";
           libraryHaskellDepends = [ base heap ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/median-stream#readme";
           description = "Constant-time queries for the median of a stream of numeric data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mega-sdist" = callPackage
        ({ mkDerivation, base, bytestring, optparse-simple, pantry, path
         , path-io, rio, rio-orphans, stdenv, yaml
         }:
         mkDerivation {
           pname = "mega-sdist";
           version = "0.4.0.1";
           sha256 = "1bc911e2570014615a7147f195f8fe62ffc63e3e9f9ec8602ee00cd86a573aa4";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring optparse-simple pantry path path-io rio rio-orphans
             yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mega-sdist#readme";
           description = "Handles uploading to Hackage from mega repos";
           license = stdenv.lib.licenses.mit;
         }) {};
      "megaparsec" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , deepseq, mtl, parser-combinators, scientific, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "megaparsec";
           version = "7.0.5";
           sha256 = "f2dc2ea9da25f726c0650051f4fe3cec0003a97dfa37b62a3f1acdba580c1d2f";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers deepseq mtl
             parser-combinators scientific text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/megaparsec";
           description = "Monadic parser combinators";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "megaparsec-tests" = callPackage
        ({ mkDerivation, base, bytestring, containers, hspec
         , hspec-expectations, hspec-megaparsec, megaparsec, mtl, QuickCheck
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "megaparsec-tests";
           version = "7.0.5";
           sha256 = "d847a88de94968ba7d7a95ce13799afeecf5f1bc61c17de7c668e02544707c86";
           revision = "2";
           editedCabalFile = "087r77bm475g51y1fxwz3yz7a7c80r3qrdj0ngm1hp6sgxmgna43";
           libraryHaskellDepends = [
             base bytestring containers hspec hspec-expectations
             hspec-megaparsec megaparsec mtl QuickCheck text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/megaparsec";
           description = "Test utilities and the test suite of Megaparsec";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "memory" = callPackage
        ({ mkDerivation, base, basement, bytestring, deepseq, ghc-prim
         , stdenv
         }:
         mkDerivation {
           pname = "memory";
           version = "0.14.18";
           sha256 = "f5458d170a291788ac8da896bb44b0cc84021c99dd596c52adf2f7a7f6c03507";
           revision = "2";
           editedCabalFile = "1kwlgsjxh4ncvc6x9rps82bm55qyzn8lvzg49s4rbyc7vjjsbmx6";
           libraryHaskellDepends = [
             base basement bytestring deepseq ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-memory";
           description = "memory and related abstraction stuff";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "menshen" = callPackage
        ({ mkDerivation, base, regex-tdfa, scientific, stdenv, text }:
         mkDerivation {
           pname = "menshen";
           version = "0.0.3";
           sha256 = "8be77ec070a9bd5b1f7ce05da19ee322bf7ecdebe04c43d767f583a52718a57f";
           revision = "1";
           editedCabalFile = "0hxj40q50pbl57dribvnk8ak907p15jnk3zycv6n9vj91la9js48";
           libraryHaskellDepends = [ base regex-tdfa scientific text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leptonyu/menshen#readme";
           description = "Data Validation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mercury-api" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, clock, hashable
         , optparse-applicative, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "mercury-api";
           version = "0.1.0.2";
           sha256 = "0f4ed76a96029413aef856a00defaa5d75be196a12a0dc1e75b9a0a866607779";
           revision = "4";
           editedCabalFile = "1bx3xrafmf82b9wlvhggv87fwqgpgqxjdgkk9r5b323m9ci2gign";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base bytestring clock hashable text
             unordered-containers
           ];
           executableHaskellDepends = [
             ansi-terminal base bytestring optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ppelleti/hs-mercury-api";
           description = "Haskell binding to Mercury API for ThingMagic RFID readers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "merkle-tree" = callPackage
        ({ mkDerivation, base, bytestring, cereal, cryptonite, memory
         , protolude, random, stdenv
         }:
         mkDerivation {
           pname = "merkle-tree";
           version = "0.1.1";
           sha256 = "215a62476230374b8bbf2f7a0a3e88345a18cf9c6f672ef7d422c3f6bd5ba2aa";
           libraryHaskellDepends = [
             base bytestring cereal cryptonite memory protolude random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/merkle-tree#readme";
           description = "An implementation of a Merkle tree and merkle tree proofs of inclusion";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "mersenne-random-pure64" = callPackage
        ({ mkDerivation, base, random, stdenv, time }:
         mkDerivation {
           pname = "mersenne-random-pure64";
           version = "0.2.2.0";
           sha256 = "ef1400ddc1ddafb0b98d4331a58bdbe3b5209a81579e17f85f180731a96d75d1";
           revision = "1";
           editedCabalFile = "0pxq0xz42x60993rl4pr4pia80jv1xcqh6njvjzfvn75018j4gw5";
           configureFlags = [ "-f-small_base" ];
           libraryHaskellDepends = [ base random time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
           description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "messagepack" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, deepseq
         , stdenv
         }:
         mkDerivation {
           pname = "messagepack";
           version = "0.5.4";
           sha256 = "939590c05d5b0831b3b4796f2e1a070e290982c92b2009f2aa1ef5f4b05b5d7c";
           revision = "2";
           editedCabalFile = "199x0hqa6h6wqysaip1wc7kivc26f3wkb8y4il70mzmz80skmm29";
           libraryHaskellDepends = [
             base bytestring cereal containers deepseq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rodrigosetti/messagepack";
           description = "Serialize instance for Message Pack Object";
           license = stdenv.lib.licenses.mit;
         }) {};
      "metrics" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, containers, lens
         , mwc-random, primitive, stdenv, text, time, transformers
         , transformers-base, unix-compat, unordered-containers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "metrics";
           version = "0.4.1.1";
           sha256 = "d55f6e704ec6f0c6bab0da46417049b7de3e76ca69a0be4c49a790db28c75bb8";
           libraryHaskellDepends = [
             ansi-terminal base bytestring containers lens mwc-random primitive
             text time transformers transformers-base unix-compat
             unordered-containers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           description = "High-performance application metric tracking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mfsolve" = callPackage
        ({ mkDerivation, base, hashable, mtl, mtl-compat, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "mfsolve";
           version = "0.3.2.0";
           sha256 = "232167442f9c0f326b7514b362d4521b3937b716fd4155c65060d34430aa42f1";
           libraryHaskellDepends = [
             base hashable mtl mtl-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Equation solver and calculator à la metafont";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microformats2-parser" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec, base
         , base-compat, blaze-html, blaze-markup, bytestring, containers
         , data-default, either, errors, html-conduit, lens-aeson, network
         , network-uri, options, pcre-heavy, safe, scotty, stdenv, tagsoup
         , text, time, transformers, unordered-containers, vector, wai-cli
         , wai-extra, xml-lens, xss-sanitize
         }:
         mkDerivation {
           pname = "microformats2-parser";
           version = "1.0.1.9";
           sha256 = "50c71d9cd57991011855ad16759a6d43f56abc0e7424475db5263c5f04e2abd3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-qq attoparsec base base-compat blaze-markup bytestring
             containers data-default either errors html-conduit lens-aeson
             network-uri pcre-heavy safe tagsoup text time transformers
             unordered-containers vector xml-lens xss-sanitize
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base base-compat blaze-html blaze-markup
             data-default network network-uri options scotty text wai-cli
             wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/microformats2-parser";
           description = "A Microformats 2 parser";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "microlens" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "microlens";
           version = "0.4.10";
           sha256 = "9c55a89d1c91fddcafca4bb1fa99a3ef29223436d75191fb29385de2bd3f47ec";
           revision = "1";
           editedCabalFile = "1qh5ifbwh62v14ygg3fj22wqimylph17ykng70vqv5x2rkp630jq";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/monadfix/microlens";
           description = "A tiny lens library with no dependencies. If you're writing an app, you probably want microlens-platform, not this.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, deepseq
         , hashable, microlens, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "microlens-aeson";
           version = "2.3.0.4";
           sha256 = "dcdf98e5c86259fe524241345560a6baf2f5f00b08040271f034da55e604c370";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring deepseq hashable microlens
             scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fosskers/microlens-aeson/";
           description = "Law-abiding lenses for Aeson, using microlens";
           license = stdenv.lib.licenses.mit;
         }) {};
      "microlens-contra" = callPackage
        ({ mkDerivation, base, microlens, stdenv }:
         mkDerivation {
           pname = "microlens-contra";
           version = "0.1.0.2";
           sha256 = "b57848cf35305f972f450fb6fb743605a9e82a818f3549f06cdfe5d336c4c9db";
           libraryHaskellDepends = [ base microlens ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/monadfix/microlens";
           description = "True folds and getters for microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-ghc" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, microlens
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "microlens-ghc";
           version = "0.4.10";
           sha256 = "63784af17969f63fee64684d7ad43187a0b978d85ba1bee15abda9a65b5e4d80";
           libraryHaskellDepends = [
             array base bytestring containers microlens transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/monadfix/microlens";
           description = "microlens + array, bytestring, containers, transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-mtl" = callPackage
        ({ mkDerivation, base, microlens, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "microlens-mtl";
           version = "0.1.11.1";
           sha256 = "d3e74f46a72aad12b71d8549a98fbc023fb364766f17d75742fb32fee70bdf50";
           libraryHaskellDepends = [
             base microlens mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "microlens support for Reader/Writer/State from mtl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-platform" = callPackage
        ({ mkDerivation, base, hashable, microlens, microlens-ghc
         , microlens-mtl, microlens-th, stdenv, text, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "microlens-platform";
           version = "0.3.11";
           sha256 = "8b77f0630d022e42deb8438d8383c361555975d07f44efb79ee5e9fa3a0525a1";
           revision = "1";
           editedCabalFile = "14v7ffibzsa1fhf4pwvpw9ia67kgmk8wmxwibj7vr9rayrxy1ffv";
           libraryHaskellDepends = [
             base hashable microlens microlens-ghc microlens-mtl microlens-th
             text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/monadfix/microlens";
           description = "Feature-complete microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-process" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, filepath, microlens
         , process, stdenv
         }:
         mkDerivation {
           pname = "microlens-process";
           version = "0.2.0.1";
           sha256 = "b9f03fee93e2c9cf84c65de88159068bbde9b095b92a4331228a9ab380c6363f";
           revision = "3";
           editedCabalFile = "01p3glv58jhiw6znjba247r6d6b63illnjfx26yxlqk2bhib90ap";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base filepath microlens process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emilypi/lens-process/tree/master/microlens";
           description = "Micro-optics for the process library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-th" = callPackage
        ({ mkDerivation, base, containers, microlens, stdenv
         , template-haskell, th-abstraction, transformers
         }:
         mkDerivation {
           pname = "microlens-th";
           version = "0.4.2.3";
           sha256 = "321018c6c0aad3f68eb26f6c7e7a518db43039e3f8f19c4634ceb4c7f8051c8f";
           revision = "1";
           editedCabalFile = "167in7b1qhgrspx81bdm2jyg9qji66sk7id282c0s99kmp0d01n6";
           libraryHaskellDepends = [
             base containers microlens template-haskell th-abstraction
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "Automatic generation of record lenses for microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microspec" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, time }:
         mkDerivation {
           pname = "microspec";
           version = "0.2.1.3";
           sha256 = "8bf530a4bce642431014d5395e4c8ab412bed44fe6caa6c2e1239ea9577b2518";
           libraryHaskellDepends = [ base QuickCheck time ];
           doHaddock = false;
           doCheck = false;
           description = "Tiny QuickCheck test library with minimal dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microstache" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , directory, filepath, parsec, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "microstache";
           version = "1.0.1.1";
           sha256 = "5de98542313eb75f84961366ff8a70ed632387ba6518215035b2dd1b32d6a120";
           revision = "6";
           editedCabalFile = "054ny1rsqz682k4x36dqj6wqbj6arwxp75xpsss8lc7j145d0qn3";
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq directory filepath parsec
             text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/microstache";
           description = "Mustache templates for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "midair" = callPackage
        ({ mkDerivation, base, containers, safe, stdenv, stm }:
         mkDerivation {
           pname = "midair";
           version = "0.2.0.1";
           sha256 = "421f941bc6b4a4d27c3de2d618557188e59e929b56860dade281e89b555172b6";
           libraryHaskellDepends = [ base containers safe stm ];
           doHaddock = false;
           doCheck = false;
           description = "Hot-swappable FRP";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "midi" = callPackage
        ({ mkDerivation, base, binary, bytestring, event-list
         , explicit-exception, monoid-transformer, non-negative, QuickCheck
         , random, semigroups, stdenv, transformers, utility-ht
         }:
         mkDerivation {
           pname = "midi";
           version = "0.2.2.2";
           sha256 = "de7cb58971a43f23e2a1ec0c4c01f690c1dd11ba55bc71264e1b9731014a693b";
           libraryHaskellDepends = [
             base binary bytestring event-list explicit-exception
             monoid-transformer non-negative QuickCheck random semigroups
             transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/MIDI";
           description = "Handling of MIDI messages and files";
           license = "GPL";
         }) {};
      "midi-music-box" = callPackage
        ({ mkDerivation, base, containers, diagrams-lib
         , diagrams-postscript, event-list, midi, optparse-applicative
         , stdenv, utility-ht
         }:
         mkDerivation {
           pname = "midi-music-box";
           version = "0.0.1.1";
           sha256 = "eb1f5d5627a795140e19dbebaba1396f8f97517bdde31d2372876a6d78442296";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers diagrams-lib diagrams-postscript event-list midi
             optparse-applicative utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/midi-music-box";
           description = "Convert MIDI file to music box punch tape";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mighty-metropolis" = callPackage
        ({ mkDerivation, base, kan-extensions, mcmc-types, mwc-probability
         , pipes, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "mighty-metropolis";
           version = "1.2.0";
           sha256 = "8d3c0b4b65024846291c4f547c45e5c04f587aefd0e8d041d54679bb519871c0";
           libraryHaskellDepends = [
             base kan-extensions mcmc-types mwc-probability pipes primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mighty-metropolis";
           description = "The Metropolis algorithm";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-mail" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , filepath, process, random, stdenv, text
         }:
         mkDerivation {
           pname = "mime-mail";
           version = "0.5.0";
           sha256 = "10b038e6c11fd1beacd3c9a429a9a244e3c50e1715f8d92d2a1eb9b6b600436f";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring filepath process
             random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/mime-mail";
           description = "Compose MIME email messages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-mail-ses" = callPackage
        ({ mkDerivation, base, base64-bytestring, byteable, bytestring
         , conduit, cryptohash, http-client, http-client-tls, http-conduit
         , http-types, mime-mail, old-locale, stdenv, text, time
         , transformers, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "mime-mail-ses";
           version = "0.4.1";
           sha256 = "a76f29d1e52d8fbfc7ea8119f6ede5ed87f9e5b9d5587f1e6c69295f2a23d3f0";
           libraryHaskellDepends = [
             base base64-bytestring byteable bytestring conduit cryptohash
             http-client http-client-tls http-conduit http-types mime-mail
             old-locale text time transformers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/mime-mail";
           description = "Send mime-mail messages via Amazon SES";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-types" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text }:
         mkDerivation {
           pname = "mime-types";
           version = "0.1.0.9";
           sha256 = "0a32435169ef4ba59f4a4b8addfd0c04479410854d1b8d69a1e38fb389ba71d2";
           libraryHaskellDepends = [ base bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Basic mime-type handling types and functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "minimorph" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "minimorph";
           version = "0.2.1.0";
           sha256 = "127eb21b889ca9411bee0612ac8aebac7992b9f790dc94b83e28312441d317de";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Mikolaj/minimorph";
           description = "English spelling functions with an emphasis on simplicity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "minio-hs" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, binary, bytestring
         , case-insensitive, conduit, conduit-extra, connection, cryptonite
         , cryptonite-conduit, digest, directory, exceptions, filepath
         , http-client, http-client-tls, http-conduit, http-types, ini
         , memory, protolude, raw-strings-qq, resourcet, retry, stdenv, text
         , time, transformers, unliftio, unliftio-core, unordered-containers
         , xml-conduit
         }:
         mkDerivation {
           pname = "minio-hs";
           version = "1.5.2";
           sha256 = "b4aee64d3dadad5ed748d650bb96ffc4e8f04249ddeee6c0e7ef2b06be8c0afa";
           configureFlags = [ "-f-live-test" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring binary bytestring case-insensitive
             conduit conduit-extra connection cryptonite cryptonite-conduit
             digest directory exceptions filepath http-client http-client-tls
             http-conduit http-types ini memory protolude raw-strings-qq
             resourcet retry text time transformers unliftio unliftio-core
             unordered-containers xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minio/minio-hs#readme";
           description = "A MinIO Haskell Library for Amazon S3 compatible cloud storage";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "miniutter" = callPackage
        ({ mkDerivation, base, binary, containers, minimorph, stdenv, text
         }:
         mkDerivation {
           pname = "miniutter";
           version = "0.5.0.0";
           sha256 = "ee30db437e6f7012b8862061c842dfaae7e52ea46832fd743e891ca04999fa41";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base binary containers minimorph text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Mikolaj/miniutter";
           description = "Simple English clause creation from arbitrary words";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mintty" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "mintty";
           version = "0.1.2";
           sha256 = "7c8af77bcde4e9b54692e3761f41adf35a50664974ba77f2ba65ea2af9f950da";
           configureFlags = [ "-fwin32-2-5-3" ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/mintty";
           description = "A reliable way to detect the presence of a MinTTY console on Windows";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "miso" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, http-api-data
         , http-types, lucid, network-uri, servant, servant-lucid, stdenv
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "miso";
           version = "1.2.0.0";
           sha256 = "c224712081c23397499ba351e6ff2a18e9d3631d527c2f066bf8eddc61c9d023";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers http-api-data http-types lucid
             network-uri servant servant-lucid text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dmjio/miso";
           description = "A tasty Haskell front-end framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "missing-foreign" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "missing-foreign";
           version = "0.1.1";
           sha256 = "9e1b36cdb8626d848386c1c4d54f3b9f80b3458398aa6a4d499266b5ecbcc885";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Convenience functions for FFI work";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mixed-types-num" = callPackage
        ({ mkDerivation, base, hspec, hspec-smallcheck, mtl, QuickCheck
         , smallcheck, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "mixed-types-num";
           version = "0.4.0.1";
           sha256 = "af304e7ef49d57a42a10af6312e7968eaaf156de75f9867dc9968cd2c8c2d381";
           libraryHaskellDepends = [
             base hspec hspec-smallcheck mtl QuickCheck smallcheck
             template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michalkonecny/mixed-types-num";
           description = "Alternative Prelude with numeric and logic expressions typed bottom-up";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mltool" = callPackage
        ({ mkDerivation, ascii-progress, base, deepseq, hmatrix
         , hmatrix-gsl, hmatrix-morpheus, MonadRandom, random, stdenv
         , vector
         }:
         mkDerivation {
           pname = "mltool";
           version = "0.2.0.1";
           sha256 = "716ec75fc8eb573c9c6ab327a9658685f5131eacff69fbbc72289cdd0133e0ff";
           libraryHaskellDepends = [
             ascii-progress base deepseq hmatrix hmatrix-gsl hmatrix-morpheus
             MonadRandom random vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aligusnet/mltool";
           description = "Machine Learning Toolbox";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmap" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "mmap";
           version = "0.5.9";
           sha256 = "58fcbb04e1cb8e7c36c05823b02dce2faaa989c53d745a7f36192de2fc98b5f8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Memory mapped files for POSIX and Windows";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmark" = callPackage
        ({ mkDerivation, aeson, base, case-insensitive, containers, deepseq
         , dlist, email-validate, foldl, hashable, html-entity-map, lucid
         , megaparsec, microlens, microlens-th, modern-uri, mtl
         , parser-combinators, stdenv, text, text-metrics
         , unordered-containers, yaml
         }:
         mkDerivation {
           pname = "mmark";
           version = "0.0.7.1";
           sha256 = "d60458bd46649a5fa43da3ca25ccb38618adb7d392b29b018ce581c9042aec2a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base case-insensitive containers deepseq dlist email-validate
             foldl hashable html-entity-map lucid megaparsec microlens
             microlens-th modern-uri mtl parser-combinators text text-metrics
             unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mmark-md/mmark";
           description = "Strict markdown processor for writers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmark-cli" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory
         , ghc-syntax-highlighter, gitrev, lucid, megaparsec, mmark
         , mmark-ext, optparse-applicative, stache, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "mmark-cli";
           version = "0.0.5.0";
           sha256 = "7ec1e69f4ce0ed638f8a979f0da2e3173d2c034ffd23b9b166a95317b0b81997";
           revision = "2";
           editedCabalFile = "1kpxrf3gwcl0l8jqq3dic49705p338rcvach95vp1g1jjpwd8kbj";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base bytestring directory ghc-syntax-highlighter gitrev lucid
             megaparsec mmark mmark-ext optparse-applicative stache text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mmark-md/mmark-cli";
           description = "Command line interface to the MMark markdown processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmark-ext" = callPackage
        ({ mkDerivation, base, foldl, ghc-syntax-highlighter, lucid
         , microlens, mmark, modern-uri, skylighting, stdenv, text
         }:
         mkDerivation {
           pname = "mmark-ext";
           version = "0.2.1.2";
           sha256 = "2ca4d826e1714a0079f409a35a1f413870dbe95b9f7d5b7d3c734224eddf84e8";
           revision = "1";
           editedCabalFile = "10dlh96l6fdbpl1slr8v022735z9zkdszd1aziid5ml3gf63ssd8";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base foldl ghc-syntax-highlighter lucid microlens mmark modern-uri
             skylighting text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mmark-md/mmark-ext";
           description = "Commonly useful extensions for the MMark markdown processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmorph" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "mmorph";
           version = "1.1.3";
           sha256 = "7923f7ad6260a05aaa8175b9f2a250f5bb63187427681171bd36d29a6cf2da65";
           libraryHaskellDepends = [
             base mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Monad morphisms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmtf" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , data-msgpack, deepseq, http-conduit, stdenv, text
         }:
         mkDerivation {
           pname = "mmtf";
           version = "0.1.3.1";
           sha256 = "2c4260e96f7d38ceeec26f5b73a9373943344ae2ceba667228aa508c3a926ff6";
           libraryHaskellDepends = [
             array base binary bytestring containers data-msgpack deepseq
             http-conduit text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/zmactep/mmtf#readme";
           description = "Macromolecular Transmission Format implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mnist-idx" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "mnist-idx";
           version = "0.1.2.8";
           sha256 = "42ff167e84414821ed47d783042cad20a0bd198f935648aa6cdf97bdc291b2fe";
           libraryHaskellDepends = [ base binary bytestring vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kryoxide/mnist-idx/";
           description = "Read and write IDX data that is used in e.g. the MNIST database.";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "mockery" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, directory, filepath
         , logging-facade, stdenv, temporary
         }:
         mkDerivation {
           pname = "mockery";
           version = "0.3.5";
           sha256 = "b7a1edacd3d32dc7f0e28c67877209d3ca3551d1da186f6445f825f3477dd727";
           libraryHaskellDepends = [
             base base-compat bytestring directory filepath logging-facade
             temporary
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support functions for automated testing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "modern-uri" = callPackage
        ({ mkDerivation, base, bytestring, containers, contravariant
         , deepseq, exceptions, megaparsec, mtl, profunctors, QuickCheck
         , reflection, stdenv, tagged, template-haskell, text
         }:
         mkDerivation {
           pname = "modern-uri";
           version = "0.3.1.0";
           sha256 = "05220a231996dc75fbfe126639499d0ac6765a23f59fff354ecadd9c85a227de";
           revision = "2";
           editedCabalFile = "0slfswzl4khpn0z8g7frn63gx7hw9n7nc3yff659q18nq7c6vjxd";
           libraryHaskellDepends = [
             base bytestring containers contravariant deepseq exceptions
             megaparsec mtl profunctors QuickCheck reflection tagged
             template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/modern-uri";
           description = "Modern library for working with URIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "modular" = callPackage
        ({ mkDerivation, base, ghc-typelits-knownnat, stdenv }:
         mkDerivation {
           pname = "modular";
           version = "0.1.0.8";
           sha256 = "430b462330bd795c554f1fe87073022216abb0cea3a872fddd6e864faa3aefc5";
           libraryHaskellDepends = [ base ghc-typelits-knownnat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pgujjula/modular#readme";
           description = "Type-safe modular arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-control" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-control";
           version = "1.0.2.3";
           sha256 = "6c1034189d237ae45368c70f0e68f714dd3beda715dd265b6c8a99fcc64022b1";
           libraryHaskellDepends = [
             base stm transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/monad-control";
           description = "Lift control operations, like exception catching, through monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-control-aligned" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-control-aligned";
           version = "0.0.1.1";
           sha256 = "44e78fd32d6644e974ab0644dc79331643c8ada4837c8f3c94f4a30b5ee011f6";
           libraryHaskellDepends = [
             base stm transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/monad-control#readme";
           description = "Just like monad-control, except less efficient, and the monadic state terms are all * -> *";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-coroutine" = callPackage
        ({ mkDerivation, base, monad-parallel, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-coroutine";
           version = "0.9.0.4";
           sha256 = "13e0ff12046296390ea69dda5001aa02b1b57e968447d27712a24c8c7cfe5de7";
           libraryHaskellDepends = [
             base monad-parallel transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
           description = "Coroutine monad transformer for suspending and resuming monadic computations";
           license = "GPL";
         }) {};
      "monad-extras" = callPackage
        ({ mkDerivation, base, mmorph, monad-control, stdenv, stm
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-extras";
           version = "0.6.0";
           sha256 = "df33d7c51a97d16226b8160d9bc09686cb6f7b7bf5c54557381c6fe4a3c84f2c";
           libraryHaskellDepends = [
             base mmorph monad-control stm transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jwiegley/monad-extras";
           description = "Extra utility functions for working with monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-journal" = callPackage
        ({ mkDerivation, base, monad-control, mtl, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "monad-journal";
           version = "0.8.1";
           sha256 = "e20ac220086081b5cf1964e9486e04113ec03b15f247512a2193898100a105ac";
           libraryHaskellDepends = [
             base monad-control mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phaazon/monad-journal";
           description = "Pure logger typeclass and monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-logger" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , exceptions, fast-logger, lifted-base, monad-control, monad-loops
         , mtl, resourcet, stdenv, stm, stm-chans, template-haskell, text
         , transformers, transformers-base, transformers-compat
         , unliftio-core
         }:
         mkDerivation {
           pname = "monad-logger";
           version = "0.3.31";
           sha256 = "adde9c21da5ca159c0240a91daccd228c18dc990ba0b2e229ba1b4029701992b";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra exceptions fast-logger
             lifted-base monad-control monad-loops mtl resourcet stm stm-chans
             template-haskell text transformers transformers-base
             transformers-compat unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/monad-logger#readme";
           description = "A class of monads which can log messages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-logger-json" = callPackage
        ({ mkDerivation, aeson, base, monad-logger, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "monad-logger-json";
           version = "0.1.0.0";
           sha256 = "10871c4aef838c01c8fdd7586161367b4d66907a53cbd9737efb717a1041e9aa";
           libraryHaskellDepends = [
             aeson base monad-logger template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fpco/monad-logger-json";
           description = "JSON-friendly Logging APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-logger-prefix" = callPackage
        ({ mkDerivation, base, exceptions, monad-control, monad-logger, mtl
         , resourcet, stdenv, text, transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-logger-prefix";
           version = "0.1.11";
           sha256 = "dba2d125ecebdee0600fd5f1b750f7ccec5345f3be6e20f7191efb876d48857f";
           libraryHaskellDepends = [
             base exceptions monad-control monad-logger mtl resourcet text
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/parsonsmatt/monad-logger-prefix#readme";
           description = "Add prefixes to your monad-logger output";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "monad-logger-syslog" = callPackage
        ({ mkDerivation, base, bytestring, fast-logger, hsyslog
         , monad-logger, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "monad-logger-syslog";
           version = "0.1.6.0";
           sha256 = "43e6348cb27c128062b7f5c9ef3ae5698ddaf40073543f9041210f02a80399d8";
           libraryHaskellDepends = [
             base bytestring fast-logger hsyslog monad-logger text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-logger-syslog";
           description = "syslog output for monad-logger";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-loops" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monad-loops";
           version = "0.4.3";
           sha256 = "7eaaaf6bc43661e9e86e310ff8c56fbea16eb6bf13c31a2e28103138ac164c18";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/monad-loops";
           description = "Monadic loops";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "monad-memo" = callPackage
        ({ mkDerivation, array, base, containers, primitive, stdenv
         , transformers, vector
         }:
         mkDerivation {
           pname = "monad-memo";
           version = "0.5.1";
           sha256 = "c65a4a3c3e05757c251557b392f2cc7edcc09c2c46cbb0e72f4efe291eb85bff";
           libraryHaskellDepends = [
             array base containers primitive transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/EduardSergeev/monad-memo";
           description = "Memoization monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-metrics" = callPackage
        ({ mkDerivation, base, clock, ekg-core, exceptions, hashable
         , microlens, mtl, stdenv, text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "monad-metrics";
           version = "0.2.1.4";
           sha256 = "8e1d9222f8ea7cd3c08f78d8cfaf436e3bb3e247294d44414c8e0f86039c0341";
           libraryHaskellDepends = [
             base clock ekg-core exceptions hashable microlens mtl text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/parsonsmatt/monad-metrics#readme";
           description = "A convenient wrapper around EKG metrics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-par" = callPackage
        ({ mkDerivation, abstract-deque, abstract-par, array, base
         , containers, deepseq, monad-par-extras, mtl, mwc-random, parallel
         , stdenv
         }:
         mkDerivation {
           pname = "monad-par";
           version = "0.3.5";
           sha256 = "823ad5666cbcaefe2c6e0ff131daa0713dff9b3b534fb809643b869e5e4a15a9";
           revision = "1";
           editedCabalFile = "17l7zjykf5iqjmw1pq4iwls7v9x9d3in94iikxabx43q5l2iccsm";
           libraryHaskellDepends = [
             abstract-deque abstract-par array base containers deepseq
             monad-par-extras mtl mwc-random parallel
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "A library for parallel programming based on a monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-par-extras" = callPackage
        ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "monad-par-extras";
           version = "0.3.3";
           sha256 = "e21e33190bc248afa4ae467287ac37d24037ef3de6050c44fd85b52f4d5b842e";
           libraryHaskellDepends = [
             abstract-par base cereal deepseq mtl random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "Combinators and extra features for Par monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-parallel" = callPackage
        ({ mkDerivation, base, parallel, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-parallel";
           version = "0.7.2.3";
           sha256 = "128fb8c36be717f82aa3146d855303f48d04c56ba025078e6cd35d6050b45089";
           libraryHaskellDepends = [
             base parallel transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
           description = "Parallel execution of monadic computations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-peel" = callPackage
        ({ mkDerivation, base, extensible-exceptions, stdenv, transformers
         }:
         mkDerivation {
           pname = "monad-peel";
           version = "0.2.1.2";
           sha256 = "2dd5e9090f3951dbc298e35c3cea7099818aba0485a55059475c4f346fc933f4";
           libraryHaskellDepends = [
             base extensible-exceptions transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://andersk.mit.edu/haskell/monad-peel/";
           description = "Lift control operations like exception catching through monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-products" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "monad-products";
           version = "4.0.1";
           sha256 = "02bfe1db2ae1a5cff19f73736a219605b1f0649f6af44ca848d09160a7946cea";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monad-products";
           description = "Monad products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-skeleton" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monad-skeleton";
           version = "0.1.5";
           sha256 = "a96840713ffdbb97d58e8dc7a47d2b725993868f005903fa9aa26bcf6f32559e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/monad-skeleton";
           description = "Monads of program skeleta";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-st" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "monad-st";
           version = "0.2.4.1";
           sha256 = "8e1818576bc486e884b953680fe41c524ff23eef2ec382b5f28f47fa7b8abf08";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monad-st";
           description = "Provides a MonadST class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-time" = callPackage
        ({ mkDerivation, base, mtl, stdenv, time }:
         mkDerivation {
           pname = "monad-time";
           version = "0.3.1.0";
           sha256 = "0af450bfc710a9653e008de3df4cff094423e434d54ac5b7419fe2552660607c";
           libraryHaskellDepends = [ base mtl time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/monad-time";
           description = "Type class for monads which carry the notion of the current time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-unlift" = callPackage
        ({ mkDerivation, base, constraints, monad-control, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-unlift";
           version = "0.2.0";
           sha256 = "4b5e638619e4821918b4ec67aeffb581ab9df23d168fbb72164137009a15ee0f";
           libraryHaskellDepends = [
             base constraints monad-control transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-unlift";
           description = "Typeclasses for representing monad transformer unlifting";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-unlift-ref" = callPackage
        ({ mkDerivation, base, constraints, exceptions, monad-control
         , monad-unlift, mtl, mutable-containers, resourcet, stdenv, stm
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-unlift-ref";
           version = "0.2.1";
           sha256 = "0f059539297478ad8b7e861682207b37b91eaf7e36bd8fdcc3f865a3c6971d1d";
           libraryHaskellDepends = [
             base constraints exceptions monad-control monad-unlift mtl
             mutable-containers resourcet stm transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-unlift";
           description = "Typeclasses for representing monad transformer unlifting";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monadic-arrays" = callPackage
        ({ mkDerivation, array, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monadic-arrays";
           version = "0.2.2";
           sha256 = "667714c6100272b48c4377cf2e2984b67a4445521a2a2e9c37539128c7e276a0";
           libraryHaskellDepends = [
             array base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monadic-arrays/";
           description = "Boxed and unboxed arrays for monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monads-tf" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "monads-tf";
           version = "0.1.0.3";
           sha256 = "249dd2aa55c4dd6530f1e49f6b052ec91bc590ecfef2bd24c58837a3f8d4b0f1";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Monad classes, using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mongoDB" = callPackage
        ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
         , binary, bson, bytestring, conduit, conduit-extra, containers
         , cryptohash, data-default-class, hashtables, lifted-base
         , monad-control, mtl, network, nonce, parsec, pureMD5, random
         , random-shuffle, resourcet, stdenv, stm, tagged, text, time, tls
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "mongoDB";
           version = "2.5.0.0";
           sha256 = "ed7bbd423d5c14f262c43fd4c61e5146de4cc94a49bc70736942efa4b980f497";
           libraryHaskellDepends = [
             array base base16-bytestring base64-bytestring binary bson
             bytestring conduit conduit-extra containers cryptohash
             data-default-class hashtables lifted-base monad-control mtl network
             nonce parsec pureMD5 random random-shuffle resourcet stm tagged
             text time tls transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mongodb-haskell/mongodb";
           description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "mono-traversable" = callPackage
        ({ mkDerivation, base, bytestring, containers, hashable, split
         , stdenv, text, transformers, unordered-containers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "mono-traversable";
           version = "1.0.15.1";
           sha256 = "c2df5b79ed2f88f2ee313e57c1d591d4463788e20d39e439297eec5ba5835ddf";
           libraryHaskellDepends = [
             base bytestring containers hashable split text transformers
             unordered-containers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Type classes for mapping, folding, and traversing monomorphic containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mono-traversable-instances" = callPackage
        ({ mkDerivation, base, comonad, containers, dlist, dlist-instances
         , mono-traversable, semigroupoids, semigroups, stdenv, transformers
         , vector-instances
         }:
         mkDerivation {
           pname = "mono-traversable-instances";
           version = "0.1.0.0";
           sha256 = "b5ff2b8bcebe31ffcc652a8dd3adde6aa7cd7f27a1cf6d058d4c658b370c087e";
           libraryHaskellDepends = [
             base comonad containers dlist dlist-instances mono-traversable
             semigroupoids semigroups transformers vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Extra typeclass instances for mono-traversable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mono-traversable-keys" = callPackage
        ({ mkDerivation, base, bytestring, containers, hashable, keys
         , mono-traversable, semigroups, stdenv, text, transformers
         , unordered-containers, vector, vector-instances
         }:
         mkDerivation {
           pname = "mono-traversable-keys";
           version = "0.1.0";
           sha256 = "bc85929322e287a8d6c4ab2f8beede6d99417fc8c23c519b9719bbe68125d477";
           libraryHaskellDepends = [
             base bytestring containers hashable keys mono-traversable
             semigroups text transformers unordered-containers vector
             vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/recursion-ninja/mono-traversable-keys#readme";
           description = "Type-classes for interacting with monomorphic containers with a key";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoid-extras" = callPackage
        ({ mkDerivation, base, groups, semigroupoids, semigroups, stdenv }:
         mkDerivation {
           pname = "monoid-extras";
           version = "0.5.1";
           sha256 = "67b8b06e1d14ff3ff221827ab2e44eb5b439071ff5044349f961b464f19bd975";
           revision = "1";
           editedCabalFile = "0b8x5d6vh7mpigvjvcd8f38a1nyzn1vfdqypslw7z9fgsr742913";
           libraryHaskellDepends = [ base groups semigroupoids semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Various extra monoid-related definitions and utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoid-subclasses" = callPackage
        ({ mkDerivation, base, bytestring, containers, primes, stdenv, text
         , vector
         }:
         mkDerivation {
           pname = "monoid-subclasses";
           version = "0.4.6.1";
           sha256 = "d097876d8778fc550a071fc5fb564e8969903e8022c5f2dc25697bd8269daea6";
           libraryHaskellDepends = [
             base bytestring containers primes text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blamario/monoid-subclasses/";
           description = "Subclasses of Monoid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoid-transformer" = callPackage
        ({ mkDerivation, base, semigroups, stdenv }:
         mkDerivation {
           pname = "monoid-transformer";
           version = "0.0.4";
           sha256 = "43abf147e4d1b57c5d306d9533e42fb52828d64e761e0e3d8797fb52cfc98388";
           libraryHaskellDepends = [ base semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Monoid counterparts to some ubiquitous monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoidal-containers" = callPackage
        ({ mkDerivation, aeson, base, containers, deepseq, hashable, lens
         , newtype, semigroups, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "monoidal-containers";
           version = "0.4.0.0";
           sha256 = "a132b8adc82cd132ffdf1079b137176a2ccb9c80603cb17ec92f0c753a14b096";
           revision = "1";
           editedCabalFile = "18m2r5kfvkss8vh537vh2k4zbpncmwadg1g4pzsw0rdmkyn7lyjd";
           libraryHaskellDepends = [
             aeson base containers deepseq hashable lens newtype semigroups
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bgamari/monoidal-containers";
           description = "Containers with monoidal accumulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "more-containers" = callPackage
        ({ mkDerivation, base, binary, containers, stdenv }:
         mkDerivation {
           pname = "more-containers";
           version = "0.2.2.0";
           sha256 = "07295037809930acccd73c8b15e73b28ac0342db18d780bc46c0f0c7dda693c4";
           libraryHaskellDepends = [ base binary containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtth/more-containers";
           description = "A few more collections";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mountpoints" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "mountpoints";
           version = "1.0.2";
           sha256 = "67fcdf64fdb8111f58939c64b168a9dfa519d7068e0f439887d739866f18d5c2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "list mount points";
           license = "LGPL";
         }) {};
      "msgpack" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-binary-ieee754, deepseq, hashable, mtl, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "msgpack";
           version = "1.0.1.0";
           sha256 = "e7b4ac6e6cd8e5d062fd95e46b68f6e78f8d98208de7bcc4d0b8af065b4e4bd2";
           revision = "1";
           editedCabalFile = "1gdn6cwkczn4i9ssx4m5v352hh5k20pd4c93am0inrldq8zncyx8";
           libraryHaskellDepends = [
             base binary bytestring containers data-binary-ieee754 deepseq
             hashable mtl text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://msgpack.org/";
           description = "A Haskell implementation of MessagePack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "msgpack-aeson" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, msgpack
         , scientific, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "msgpack-aeson";
           version = "0.1.0.0";
           sha256 = "72605d87d66c25cfce95e361fe6eba526fb2ed23ccea727c28c948564a9cf6f9";
           libraryHaskellDepends = [
             aeson base bytestring deepseq msgpack scientific text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://msgpack.org/";
           description = "Aeson adapter for MessagePack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "mtl";
           version = "2.2.2";
           sha256 = "8803f48a8ed33296c3a3272f448198737a287ec31baa901af09e2118c829bef6";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell/mtl";
           description = "Monad classes, using functional dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl-compat" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "mtl-compat";
           version = "0.2.2";
           sha256 = "1955398fe2115674f47f553b2caaf928c6aa3424271a5cd13bc191e54bfe3a9e";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/mtl-compat";
           description = "Backported Control.Monad.Except module from mtl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl-prelude" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "mtl-prelude";
           version = "2.0.3.1";
           sha256 = "c4a6dda093d63bd2161f55030c5825903dfa9b7d5e766c487fd848cb2aa01233";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/mtl-prelude";
           description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
           license = stdenv.lib.licenses.mit;
         }) {};
      "multiarg" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "multiarg";
           version = "0.30.0.10";
           sha256 = "c9fa623a8e06d62addc2b7ad5102ceac3a6f0db6a67afbc8e693d0d0aec417a1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/massysett/multiarg";
           description = "Command lines for options that take multiple arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multimap" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "multimap";
           version = "1.2.1";
           sha256 = "6332c529475177b9e08d762d5701804dc2edc0ff26dd98a2a1dcd7ed092e7434";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/scravy/multimap";
           description = "A multimap";
           license = stdenv.lib.licenses.mit;
         }) {};
      "multipart" = callPackage
        ({ mkDerivation, base, bytestring, parsec, stdenv, stringsearch }:
         mkDerivation {
           pname = "multipart";
           version = "0.1.3";
           sha256 = "9f60512e7b04c78442bd7c9de621597f6f2c4288b3bc1bb2834d08b5bd2796f4";
           revision = "1";
           editedCabalFile = "037ngpayaisc1jgcxyixy7lx42p2mz950k6wb0pl6dkc951hl88c";
           libraryHaskellDepends = [ base bytestring parsec stringsearch ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/silkapp/multipart";
           description = "HTTP multipart split out of the cgi package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multiset" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "multiset";
           version = "0.3.4.3";
           sha256 = "79fcae15a5d3ce28f0b973ad90290f7451396e81cc92007456ce2bb49b9415c4";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "The Data.MultiSet container type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multistate" = callPackage
        ({ mkDerivation, base, monad-control, mtl, stdenv, tagged
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "multistate";
           version = "0.8.0.2";
           sha256 = "c5422b078a17b6057c83d18c984d84e7b7974b73e658b9dfbc4f5ea6a49ed743";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base monad-control mtl tagged transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/multistate";
           description = "like mtl's ReaderT / WriterT / StateT, but more than one contained value/type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "murmur-hash" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "murmur-hash";
           version = "0.1.0.9";
           sha256 = "89b9db94ead4cc0784dbcfb47c51b5664c1718860db00cd8ada3ef6fdd4465ad";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/murmur-hash";
           description = "MurmurHash2 implementation for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "murmur3" = callPackage
        ({ mkDerivation, base, bytestring, cereal, stdenv }:
         mkDerivation {
           pname = "murmur3";
           version = "1.0.3";
           sha256 = "102c81e0e6ae604f51bccced6d2d493f4de0b65e856cd0492a17f9f8e4d51f2a";
           libraryHaskellDepends = [ base bytestring cereal ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/plaprade/murmur3";
           description = "Pure Haskell implementation of the MurmurHash3 x86_32 algorithm";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "mustache" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
         , directory, either, filepath, mtl, parsec, scientific, stdenv
         , template-haskell, text, th-lift, unordered-containers, vector
         , yaml
         }:
         mkDerivation {
           pname = "mustache";
           version = "2.3.1";
           sha256 = "ac8bf93d36fc766f54a54b72ddf71d1ab90864ca86bdce3415d2e69823fdb348";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers directory either filepath mtl
             parsec scientific template-haskell text th-lift
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring cmdargs filepath text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/JustusAdam/mustache";
           description = "A mustache template parser library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mutable-containers" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, mono-traversable
         , primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "mutable-containers";
           version = "0.3.4";
           sha256 = "641966e0adee48badb8bf07037af6c879480e4e97f673d9e2b84fbf43685137e";
           libraryHaskellDepends = [
             base containers ghc-prim mono-traversable primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Abstactions and concrete implementations of mutable containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mwc-probability" = callPackage
        ({ mkDerivation, base, mwc-random, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "mwc-probability";
           version = "2.1.0";
           sha256 = "a3ae5a66ae4be6d098f9194e7c83b3c21e885821a47a692c50885c4045be8429";
           libraryHaskellDepends = [ base mwc-random primitive transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mwc-probability";
           description = "Sampling function-based probability distributions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mwc-probability-transition" = callPackage
        ({ mkDerivation, base, exceptions, ghc-prim, hspec, logging-effect
         , mtl, mwc-probability, primitive, QuickCheck, stdenv, transformers
         }:
         mkDerivation {
           pname = "mwc-probability-transition";
           version = "0.4";
           sha256 = "3e44b6f3f3b2a739776484e7d4ab98ab1d5c7e50bcba53a40d2f0ac96003e768";
           libraryHaskellDepends = [
             base exceptions ghc-prim hspec logging-effect mtl mwc-probability
             primitive QuickCheck transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/mwc-probability-transition";
           description = "A Markov stochastic transition operator with logging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mwc-random" = callPackage
        ({ mkDerivation, base, math-functions, primitive, stdenv, time
         , vector
         }:
         mkDerivation {
           pname = "mwc-random";
           version = "0.14.0.0";
           sha256 = "00370edaa60a51c86663868ecc2b1995824970001875cec458e9acc13511efa2";
           libraryHaskellDepends = [
             base math-functions primitive time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/mwc-random";
           description = "Fast, high quality pseudo random number generation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, mysql, stdenv
         }:
         mkDerivation {
           pname = "mysql";
           version = "0.1.7";
           sha256 = "ef2d7bc6791171f0c5efa8a6b40c2be386867e8b0c72580343a6646d514972d9";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring containers ];
           librarySystemDepends = [ mysql ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/mysql";
           description = "A low-level MySQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mysql;};
      "mysql-haskell" = callPackage
        ({ mkDerivation, base, binary, binary-ieee754, binary-parsers
         , blaze-textual, bytestring, bytestring-lexing, cryptonite
         , io-streams, memory, monad-loops, network, scientific, stdenv
         , tcp-streams, text, time, tls, vector, wire-streams, word24
         }:
         mkDerivation {
           pname = "mysql-haskell";
           version = "0.8.4.2";
           sha256 = "5f51eb5a77934cd9046d85bce7477288752e3de0d4119111493d5bc967e2e9d1";
           libraryHaskellDepends = [
             base binary binary-ieee754 binary-parsers blaze-textual bytestring
             bytestring-lexing cryptonite io-streams memory monad-loops network
             scientific tcp-streams text time tls vector wire-streams word24
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/mysql-haskell";
           description = "pure haskell MySQL driver";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql-haskell-nem" = callPackage
        ({ mkDerivation, base, bytestring, io-streams, mysql-haskell
         , scientific, stdenv, text, time
         }:
         mkDerivation {
           pname = "mysql-haskell-nem";
           version = "0.1.0.0";
           sha256 = "7a0868b76edc96a7aff7860f96436b9040f6cb9319dd67f68bfd700948721f0d";
           libraryHaskellDepends = [
             base bytestring io-streams mysql-haskell scientific text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lorenzo/mysql-haskell-nem#readme";
           description = "Adds a interface like mysql-simple to mysql-haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql-simple" = callPackage
        ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
         , blaze-textual, bytestring, containers, mysql, old-locale
         , pcre-light, stdenv, text, time
         }:
         mkDerivation {
           pname = "mysql-simple";
           version = "0.4.5";
           sha256 = "b03c422ed8a62fa7f98b62634a06da8454980c6a733e275020ca7cedbb6e7cb1";
           libraryHaskellDepends = [
             attoparsec base base16-bytestring blaze-builder blaze-textual
             bytestring containers mysql old-locale pcre-light text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/mysql-simple";
           description = "A mid-level MySQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "n2o" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, stdenv, text
         }:
         mkDerivation {
           pname = "n2o";
           version = "0.11.1";
           sha256 = "674d30b2971f7aaf9fee85b82767895fdcb012ab1df90b8ab7ed49b1858e6f7b";
           libraryHaskellDepends = [ base binary bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xafizoff/n2o#readme";
           description = "Abstract Protocol Loop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nagios-check" = callPackage
        ({ mkDerivation, base, bifunctors, exceptions, mtl, stdenv, text }:
         mkDerivation {
           pname = "nagios-check";
           version = "0.3.2";
           sha256 = "1bc9b85cb10c396943d53c44e2701c5bc2a02ecdf3e8f46da238981f8b7860b7";
           libraryHaskellDepends = [ base bifunctors exceptions mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/olorin/haskell-nagios-check";
           description = "Package for writing monitoring plugins";
           license = stdenv.lib.licenses.mit;
         }) {};
      "named" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "named";
           version = "0.3.0.1";
           sha256 = "3262c1c6120fa5c27c0dd1aa48c5e246fcc210be0f0c71691391190b1726d736";
           revision = "1";
           editedCabalFile = "01hay5wlp803f35qp3wab1gjxrcv5lyk1hgz4r80k22xkh6dax99";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/monadfix/named";
           description = "Named parameters (keyword arguments) for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "names-th" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell }:
         mkDerivation {
           pname = "names-th";
           version = "0.3.0.0";
           sha256 = "0be38f6a22afb69ddda5a3cae095b51835bdae853256403e97078679a9fba526";
           libraryHaskellDepends = [ base containers template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Manipulate name strings for TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nano-erl" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "nano-erl";
           version = "0.1.0.1";
           sha256 = "370a60682b38ca77b793ee7326c54d5e74dd688f316f31fdd5cf999ad498ee12";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           description = "Small library for Erlang-style actor semantics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nanospec" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "nanospec";
           version = "0.2.2";
           sha256 = "cf14ccc2b296c910000cdc3eb51b37389b3eb94139384b9555db79b8128595e5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/nanospec#readme";
           description = "A lightweight implementation of a subset of Hspec's API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nats" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "nats";
           version = "1.1.2";
           sha256 = "b9d2d85d8612f9b06f8c9bfd1acecd848e03ab82cfb53afe1d93f5086b6e80ec";
           revision = "3";
           editedCabalFile = "02ww45nskca28fsbh74iy0z4rm0yshws7lrxld45y053hrn1jdzc";
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/nats/";
           description = "Natural numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "natural-induction" = callPackage
        ({ mkDerivation, base, peano, stdenv }:
         mkDerivation {
           pname = "natural-induction";
           version = "0.2.0.0";
           sha256 = "99aa944a9bf54f549a867b73de56e56adf95d67408822054ee1abfcbe7ae33af";
           revision = "1";
           editedCabalFile = "012kjygd54rxinmaplqnbw0hkfm4wp829j0afjxr6h40x22gwzn5";
           libraryHaskellDepends = [ base peano ];
           doHaddock = false;
           doCheck = false;
           description = "Induction over natural numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "natural-sort" = callPackage
        ({ mkDerivation, base, bytestring, parsec, stdenv, text }:
         mkDerivation {
           pname = "natural-sort";
           version = "0.1.2";
           sha256 = "7b72b734680827ab07df38a004d4f523540055389d62fcd587edd2fcf19a6b50";
           libraryHaskellDepends = [ base bytestring parsec text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/natural-sort/";
           description = "User-friendly text collation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "natural-transformation" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "natural-transformation";
           version = "0.4";
           sha256 = "aac28e2c1147ed77c1ec0f0eb607a577fa26d0fd67474293ba860ec124efc8af";
           revision = "7";
           editedCabalFile = "03nkhdrwki9j81clgfck4yl7ylv6dwa7gi77kknzq3s3nqlp728v";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/natural-transformation";
           description = "A natural transformation package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ndjson-conduit" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , stdenv
         }:
         mkDerivation {
           pname = "ndjson-conduit";
           version = "0.1.0.5";
           sha256 = "c037b8f7c47b146f1384585541ae8a4f9218bc4456f428935f973ae07da49db1";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-ndjson-conduit";
           description = "Conduit-based parsing and serialization for newline delimited JSON";
           license = stdenv.lib.licenses.mit;
         }) {};
      "neat-interpolation" = callPackage
        ({ mkDerivation, base, megaparsec, stdenv, template-haskell, text
         }:
         mkDerivation {
           pname = "neat-interpolation";
           version = "0.3.2.6";
           sha256 = "e2a36fd500f64a1cac45d2ee610caf27eebbc24634984b0a65de12140fe96582";
           libraryHaskellDepends = [ base megaparsec template-haskell text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/neat-interpolation";
           description = "A quasiquoter for neat and simple multiline text interpolation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "netlib-carray" = callPackage
        ({ mkDerivation, array, base, carray, netlib-ffi, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "netlib-carray";
           version = "0.1";
           sha256 = "a577d19a79f7360d7916185e92feabdc42723a130ac3794e011655de3ba90466";
           libraryHaskellDepends = [
             array base carray netlib-ffi transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/netlib-carray/";
           description = "Helper modules for CArray wrappers to BLAS and LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "netlib-comfort-array" = callPackage
        ({ mkDerivation, base, comfort-array, netlib-ffi, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "netlib-comfort-array";
           version = "0.0.0.1";
           sha256 = "e32e5eabca4549cdd8dbd71c58acf14377d389317b999b25b37d62f9100d976c";
           libraryHaskellDepends = [
             base comfort-array netlib-ffi transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/netlib-comfort-array/";
           description = "Helper modules for comfort-array wrappers to BLAS and LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "netlib-ffi" = callPackage
        ({ mkDerivation, base, guarded-allocation, stdenv, storable-complex
         , transformers
         }:
         mkDerivation {
           pname = "netlib-ffi";
           version = "0.1.1";
           sha256 = "211016f9dc28f0519b1151ce5b1f74e8371a32f53fdb34c69277f099d82b2e47";
           libraryHaskellDepends = [
             base guarded-allocation storable-complex transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/netlib-ffi/";
           description = "Helper modules for FFI to BLAS and LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "netpbm" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-binary, base, bytestring
         , stdenv, storable-record, unordered-containers, vector
         , vector-th-unbox
         }:
         mkDerivation {
           pname = "netpbm";
           version = "1.0.3";
           sha256 = "68fcb39e7097ccfd0327d36588d18faea438c389a5310d9ea4a91ec74b809d9d";
           libraryHaskellDepends = [
             attoparsec attoparsec-binary base bytestring storable-record
             unordered-containers vector vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/haskell-netpbm";
           description = "Loading PBM, PGM, PPM image files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "netrc" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, parsec, stdenv }:
         mkDerivation {
           pname = "netrc";
           version = "0.2.0.0";
           sha256 = "9a5e07efa44f4b715b110aa4f9687e2b75458fb7537a2f4f1a3582c9e2e82a86";
           revision = "6";
           editedCabalFile = "0mn0ar2xhjdsm50kmpw5ndvbyfmc30b3x0bx291d2ml7hqspnnsw";
           libraryHaskellDepends = [ base bytestring deepseq parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/netrc";
           description = "Parser for .netrc files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "nettle" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , nettle, securemem, stdenv, tagged
         }:
         mkDerivation {
           pname = "nettle";
           version = "0.3.0";
           sha256 = "cf3f08980e8e52190301d33db3b1fe7f02bcf5d276a74a8b8283b79e72bf7d5d";
           revision = "1";
           editedCabalFile = "1j8h6m4cj1ykxrsxmjiyb1c4mv6cawssgb8phl0aijrjn3b79f2b";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem tagged
           ];
           libraryPkgconfigDepends = [ nettle ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stbuehler/haskell-nettle";
           description = "safe nettle binding";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) nettle;};
      "netwire" = callPackage
        ({ mkDerivation, base, containers, deepseq, parallel, profunctors
         , random, semigroups, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "netwire";
           version = "5.0.3";
           sha256 = "f1dde7293efe9cdb3080f53a1be702f473ef0bcc0d3e4ea2d23b847fa3ef222e";
           libraryHaskellDepends = [
             base containers deepseq parallel profunctors random semigroups time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/esoeylemez/netwire";
           description = "Functional reactive programming library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "netwire-input" = callPackage
        ({ mkDerivation, base, deepseq, netwire, stdenv }:
         mkDerivation {
           pname = "netwire-input";
           version = "0.0.7";
           sha256 = "29c6b087c2092ca409442b28aca500642b870461ad820d8bc579097f19ed3db9";
           libraryHaskellDepends = [ base deepseq netwire ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/Mokosha/netwire-input";
           description = "Input handling abstractions for netwire";
           license = stdenv.lib.licenses.mit;
         }) {};
      "netwire-input-glfw" = callPackage
        ({ mkDerivation, base, containers, deepseq, GLFW-b, mtl
         , netwire-input, stdenv, stm
         }:
         mkDerivation {
           pname = "netwire-input-glfw";
           version = "0.0.10";
           sha256 = "1ea458273055fa2f82451b889b9a2c54e0b5bbdf55a16c35d0ccd392793728e4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers deepseq GLFW-b mtl netwire-input stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/Mokosha/netwire-input-glfw";
           description = "GLFW instance of netwire-input";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "network";
           version = "2.8.0.1";
           sha256 = "61f55dbfed0f0af721a8ea36079e9309fcc5a1be20783b44ae500d9e4399a846";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/network";
           description = "Low-level networking interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-anonymous-i2p" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, exceptions, mtl
         , network, network-attoparsec, network-simple, stdenv, text
         , transformers, uuid
         }:
         mkDerivation {
           pname = "network-anonymous-i2p";
           version = "0.10.0";
           sha256 = "cff5796c36c1ebbb969e5433538eb3f3979acef9825a7bfb683ed002023fff2c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring exceptions mtl network
             network-attoparsec network-simple text transformers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
           description = "Haskell API for I2P anonymous networking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, enclosed-exceptions
         , exceptions, lifted-base, monad-control, mtl, network, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "network-attoparsec";
           version = "0.12.2";
           sha256 = "9790a9bad286ab1474dadbece3e4b2e1dd068d4ede3847cb73bcd66386bf08f0";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring enclosed-exceptions exceptions
             lifted-base monad-control mtl network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solatis/haskell-network-attoparsec";
           description = "Utility functions for running a parser against a socket";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-bsd" = callPackage
        ({ mkDerivation, base, network, stdenv }:
         mkDerivation {
           pname = "network-bsd";
           version = "2.8.0.0";
           sha256 = "25ded905970d2a22bfea0427534870d890b3cfc3f7867bf8f5c62391f3e3cb35";
           libraryHaskellDepends = [ base network ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/network-bsd";
           description = "Network.BSD";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-byte-order" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "network-byte-order";
           version = "0.1.3.0";
           sha256 = "e38b5213fc01c86f4afe3be6e85a5375d028d1acab2a74522d682583d783e4ce";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Network byte order utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-conduit-tls" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , connection, data-default-class, network, stdenv
         , streaming-commons, tls, transformers, unliftio-core
         }:
         mkDerivation {
           pname = "network-conduit-tls";
           version = "1.3.2";
           sha256 = "ecfd60e162de3993a71906293dcf2ec8bd4c794471eb8dca13746c1d8fd3ad7f";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra connection data-default-class
             network streaming-commons tls transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/conduit";
           description = "Create TLS-aware network code with conduits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-house" = callPackage
        ({ mkDerivation, array, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "network-house";
           version = "0.1.0.2";
           sha256 = "071fbc22fc516175e78235d9e29ccefd8eec7c3caa2e6de74dddf62cdbffab43";
           libraryHaskellDepends = [ array base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/network-house";
           description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "network-info" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "network-info";
           version = "0.2.0.10";
           sha256 = "5680f6975d34cf4f81fa7ca0c8efd682261d6a1119e06dece0f67c7bd97fd52a";
           revision = "1";
           editedCabalFile = "07kiw56lhc56kqrnvpa11f5nnnid6by3aq00jrkcbbg7w0q71a6d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jacobstanley/network-info";
           description = "Access the local computer's basic network configuration";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-ip" = callPackage
        ({ mkDerivation, base, data-default-class, data-dword, data-endian
         , data-serializer, data-textual, hashable, parsers, stdenv
         , text-printer, type-hint
         }:
         mkDerivation {
           pname = "network-ip";
           version = "0.3.0.3";
           sha256 = "e01dcc4389f3800536066ca150b6b5130d9d4b7fe7ed8e98ae7d92f3f7b1955c";
           libraryHaskellDepends = [
             base data-default-class data-dword data-endian data-serializer
             data-textual hashable parsers text-printer type-hint
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/network-ip";
           description = "Internet Protocol data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-messagepack-rpc" = callPackage
        ({ mkDerivation, base, bytestring, data-msgpack, safe-exceptions
         , stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "network-messagepack-rpc";
           version = "0.1.2.0";
           sha256 = "7ed2442333de97512d92cd029bf802fc68a0d757df9787cdb4debbbde67c0a85";
           libraryHaskellDepends = [
             base bytestring data-msgpack safe-exceptions text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iij-ii/direct-hs/tree/master/network-messagepack-rpc";
           description = "MessagePack RPC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-multicast" = callPackage
        ({ mkDerivation, base, network, network-bsd, stdenv }:
         mkDerivation {
           pname = "network-multicast";
           version = "0.3.2";
           sha256 = "830a4ae819e50d83f945eae0715d6574643f64d839b9e6f86ac64bbe2e881b72";
           libraryHaskellDepends = [ base network network-bsd ];
           doHaddock = false;
           doCheck = false;
           description = "Simple multicast library";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "network-simple" = callPackage
        ({ mkDerivation, base, bytestring, network, network-bsd
         , safe-exceptions, socks, stdenv, transformers
         }:
         mkDerivation {
           pname = "network-simple";
           version = "0.4.5";
           sha256 = "07a0bf25972a5fb42ab68f71db00b2758c6b15f09f73b1324550749d397b179e";
           libraryHaskellDepends = [
             base bytestring network network-bsd safe-exceptions socks
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/network-simple";
           description = "Simple network sockets usage patterns";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-simple-tls" = callPackage
        ({ mkDerivation, base, bytestring, data-default, network
         , network-simple, safe-exceptions, stdenv, tls, transformers, x509
         , x509-store, x509-system, x509-validation
         }:
         mkDerivation {
           pname = "network-simple-tls";
           version = "0.3.2";
           sha256 = "5077aed7b57c25001f8f5305fce93b4e184399e5d3dc6805931cf8bcad3fdc25";
           libraryHaskellDepends = [
             base bytestring data-default network network-simple safe-exceptions
             tls transformers x509 x509-store x509-system x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/network-simple-tls";
           description = "Simple interface to TLS secured network sockets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, hashable
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "network-transport";
           version = "0.5.4";
           sha256 = "5b870bffb4a61b29616bf9520733c7f16fd455ac2e678cc156d61ffa47c4ec47";
           libraryHaskellDepends = [
             base binary bytestring deepseq hashable transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Network abstraction layer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-composed" = callPackage
        ({ mkDerivation, base, bytestring, network-transport, stdenv }:
         mkDerivation {
           pname = "network-transport-composed";
           version = "0.2.1";
           sha256 = "a35bbfbe35a7a6c6e20e9d839f9f5b30f82f3680863968f73ce82e0e03e55944";
           libraryHaskellDepends = [ base bytestring network-transport ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Compose network transports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-uri" = callPackage
        ({ mkDerivation, base, deepseq, parsec, stdenv, template-haskell }:
         mkDerivation {
           pname = "network-uri";
           version = "2.6.2.0";
           sha256 = "dc0e1cf4662afb1e19ab00299fc1fdf8aec609ece75e319eeff2db6b2e61b23a";
           revision = "1";
           editedCabalFile = "14ab4k2biga40z7nyksy0ca56zwghmrlab2fxhnq1km3rj7qa4k6";
           libraryHaskellDepends = [ base deepseq parsec template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/network-uri";
           description = "URI manipulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "newtype" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "newtype";
           version = "0.2.2.0";
           sha256 = "3a00ffd1bb48a81e09f8be6510fa4c642ba1482b2f8d4777af1b5dd06c55ebac";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A typeclass and set of functions for working with newtypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "newtype-generics" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "newtype-generics";
           version = "0.5.4";
           sha256 = "007f3dd80d759b09534dd215b040d1a435b7d2612be3d0a365c27c60c973f932";
           revision = "1";
           editedCabalFile = "1id9a6prj2bzdsyfsfr0pnfy9p8v9wlw59x12fny6y2szfcxcrv7";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sjakobi/newtype-generics";
           description = "A typeclass and set of functions for working with newtypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nicify-lib" = callPackage
        ({ mkDerivation, base, parsec, stdenv, transformers }:
         mkDerivation {
           pname = "nicify-lib";
           version = "1.0.1";
           sha256 = "7d26f86d792dda166805e9dda17cfbc7a2101f3654fe798f4231385d8136e732";
           libraryHaskellDepends = [ base parsec transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty print the standard output of default `Show` instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nix-paths" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "nix-paths";
           version = "1.0.1";
           sha256 = "ab37163bc2970ea16c2eb6e091d1e99ab50b8e2ba93c23d24dac761803e509f8";
           configureFlags = [ "-fallow-relative-paths" ];
           libraryHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/nix-paths";
           description = "Knowledge of Nix's installation directories";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "no-value" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "no-value";
           version = "1.0.0.0";
           sha256 = "8ed237efdab93eb273596e03cc391803640acb189b35a863e4e440451aea9fc9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/no-value#readme";
           description = "A type class for choosing sentinel-like values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "non-empty" = callPackage
        ({ mkDerivation, base, containers, deepseq, QuickCheck, stdenv
         , utility-ht
         }:
         mkDerivation {
           pname = "non-empty";
           version = "0.3.2";
           sha256 = "1b10fc14386a9152e2bf9d1cc5383326ffcd96bc6a323e94b65ec4ae7a688748";
           libraryHaskellDepends = [
             base containers deepseq QuickCheck utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/non-empty/";
           description = "List-like structures with static restrictions on the number of elements";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "non-empty-sequence" = callPackage
        ({ mkDerivation, base, containers, semigroups, stdenv }:
         mkDerivation {
           pname = "non-empty-sequence";
           version = "0.2.0.4";
           sha256 = "8071a8680bd44f81e7660c74c495302a34344a42d8ccdc3e869f0e29a398dd28";
           libraryHaskellDepends = [ base containers semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/non-empty-sequence";
           description = "Non-empty sequence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "non-negative" = callPackage
        ({ mkDerivation, base, QuickCheck, semigroups, stdenv, utility-ht
         }:
         mkDerivation {
           pname = "non-negative";
           version = "0.1.2";
           sha256 = "5614acf55f3c16a21fea263e375e8993f9b859e21997b0410c74fe6642c20138";
           libraryHaskellDepends = [ base QuickCheck semigroups utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/non-negative/";
           description = "Non-negative numbers";
           license = "GPL";
         }) {};
      "nonce" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, entropy
         , stdenv, text, transformers, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "nonce";
           version = "1.0.7";
           sha256 = "4b4f6232b2cb07a6de47a838b4dc35c346a745683866dbfc6ebb8682158037e1";
           libraryHaskellDepends = [
             base base64-bytestring bytestring entropy text transformers
             unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/nonce";
           description = "Generate cryptographic nonces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nondeterminism" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "nondeterminism";
           version = "1.4";
           sha256 = "3037c93b0277037ab51ad8640f72a7975dcf48ba81570640be12d390d7b47dc5";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "A monad and monad transformer for nondeterministic computations";
           license = "LGPL";
         }) {};
      "nonempty-containers" = callPackage
        ({ mkDerivation, base, comonad, containers, deepseq, semigroupoids
         , stdenv, these
         }:
         mkDerivation {
           pname = "nonempty-containers";
           version = "0.3.1.0";
           sha256 = "d4b893c8aae14bc481ee990c6672376705d1a95856b464264707106eb6f3d495";
           libraryHaskellDepends = [
             base comonad containers deepseq semigroupoids these
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/nonempty-containers#readme";
           description = "Non-empty variants of containers data types, with full API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nonemptymap" = callPackage
        ({ mkDerivation, base, containers, semigroupoids, stdenv }:
         mkDerivation {
           pname = "nonemptymap";
           version = "0.0.6.0";
           sha256 = "24bd4c4c3569ca103352493fc61739574eda0587532f8c85d959795d6728fadf";
           libraryHaskellDepends = [ base containers semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChristopherDavenport/nonemptymap#readme";
           description = "A NonEmptyMap Implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "not-gloss" = callPackage
        ({ mkDerivation, base, binary, bmp, bytestring, GLUT, OpenGL
         , OpenGLRaw, spatial-math, stdenv, time, vector
         , vector-binary-instances
         }:
         mkDerivation {
           pname = "not-gloss";
           version = "0.7.7.0";
           sha256 = "4740d1ee04015bca98092f72c11414326d1bd08473aead61f6678773fb8b835f";
           libraryHaskellDepends = [
             base binary bmp bytestring GLUT OpenGL OpenGLRaw spatial-math time
             vector vector-binary-instances
           ];
           doHaddock = false;
           doCheck = false;
           description = "Painless 3D graphics, no affiliation with gloss";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nowdoc" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, template-haskell }:
         mkDerivation {
           pname = "nowdoc";
           version = "0.1.1.0";
           sha256 = "4ffe490b2c161a53f0d636d54269df357d41c7b212c70dcb1c7e2cffd33f5268";
           revision = "1";
           editedCabalFile = "074xgrxs8ynq29bsx66an03q0457f80ga9jf4sqi0q34jgfpmbcv";
           libraryHaskellDepends = [ base bytestring template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoshikuniJujo/nowdoc#readme";
           description = "Here document without variable expansion like PHP Nowdoc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nqe" = callPackage
        ({ mkDerivation, base, conduit, containers, hashable, mtl, stdenv
         , stm, unique, unliftio
         }:
         mkDerivation {
           pname = "nqe";
           version = "0.6.1";
           sha256 = "adf772bca05f8445e585537e3807df394a8d7c7e3a095fd532ee55cc60f30dd0";
           libraryHaskellDepends = [
             base conduit containers hashable mtl stm unique unliftio
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xenog/nqe#readme";
           description = "Concurrency library in the style of Erlang/OTP";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "nsis" = callPackage
        ({ mkDerivation, base, stdenv, transformers, uniplate }:
         mkDerivation {
           pname = "nsis";
           version = "0.3.3";
           sha256 = "bda68ef2893202432be55a7749269ec7660781cba5e2049f9ad474531e21778b";
           libraryHaskellDepends = [ base transformers uniplate ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/nsis#readme";
           description = "DSL for producing Windows Installer using NSIS";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numbers" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numbers";
           version = "3000.2.0.2";
           sha256 = "f0cee40b90c3746bd0bc0559d3827d3cf1b1e2c43270b7ec9bf4fa458fcb5a77";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/numbers#readme";
           description = "Various number types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numeric-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numeric-extras";
           version = "0.1";
           sha256 = "c700711021d96334be43a21fbd80a5f7146fdd6706ef8656f1d287ff000b61d6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/numeric-extras";
           description = "Useful tools from the C standard library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numeric-prelude" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, non-negative
         , parsec, QuickCheck, random, semigroups, stdenv, storable-record
         , utility-ht
         }:
         mkDerivation {
           pname = "numeric-prelude";
           version = "0.4.3.1";
           sha256 = "c9e4b6f20c47ab38faea9a6a230a722f3b50462989d1b0ad1e7bfd1cb8f46114";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base containers deepseq non-negative parsec QuickCheck random
             semigroups storable-record utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Numeric_Prelude";
           description = "An experimental alternative hierarchy of numeric type classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numhask" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numhask";
           version = "0.3.1";
           sha256 = "e7bc2f55f642ee9ef06c19a23545f58dbce9ae9387ceb17ab96626ae8f52f964";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonyday567/numhask#readme";
           description = "numeric classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numtype-dk" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numtype-dk";
           version = "0.5.0.2";
           sha256 = "98787dc0dd1757e6ed9c37e7d735b448fb9a9281988d97625292c9d8e16a732b";
           revision = "1";
           editedCabalFile = "0892xm8vyyvl1glg4vniz8r5ydg1nz3zmbpgk5mxdih6wi6nmpy4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/numtype-dk";
           description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nuxeo" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , conduit-extra, http-conduit, http-types, optparse-applicative
         , stdenv, text, time, url
         }:
         mkDerivation {
           pname = "nuxeo";
           version = "0.3.2";
           sha256 = "e230a92a3f4b2f56128bfce8b478cdedcbb68b5a8b99d60e895b24af58b61954";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit conduit-extra http-conduit
             http-types text time url
           ];
           executableHaskellDepends = [ base optparse-applicative text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/apeyroux/nuxeo#readme";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nvim-hs" = callPackage
        ({ mkDerivation, base, bytestring, cereal, cereal-conduit, conduit
         , containers, data-default, deepseq, foreign-store, hslogger
         , megaparsec, messagepack, mtl, network, optparse-applicative, path
         , path-io, prettyprinter, prettyprinter-ansi-terminal, resourcet
         , stdenv, stm, streaming-commons, template-haskell, text, time
         , time-locale-compat, transformers, transformers-base
         , typed-process, unliftio, unliftio-core, utf8-string, vector, void
         }:
         mkDerivation {
           pname = "nvim-hs";
           version = "2.1.0.2";
           sha256 = "36870c61715effedd59a124ecd60c2a8b981fff1ec95aeb063c98e2060deb42a";
           revision = "1";
           editedCabalFile = "1v52rmk7hbdn40964r50jjz3lanfc5q8xrdqpv1wmwviw3j4rip8";
           libraryHaskellDepends = [
             base bytestring cereal cereal-conduit conduit containers
             data-default deepseq foreign-store hslogger megaparsec messagepack
             mtl network optparse-applicative path path-io prettyprinter
             prettyprinter-ansi-terminal resourcet stm streaming-commons
             template-haskell text time time-locale-compat transformers
             transformers-base typed-process unliftio unliftio-core utf8-string
             vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/neovimhaskell/nvim-hs";
           description = "Haskell plugin backend for neovim";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "nvim-hs-contrib" = callPackage
        ({ mkDerivation, base, bytestring, data-default, directory
         , filepath, messagepack, mtl, nvim-hs, prettyprinter
         , prettyprinter-ansi-terminal, stdenv, text, time, utf8-string
         , yaml
         }:
         mkDerivation {
           pname = "nvim-hs-contrib";
           version = "2.0.0.0";
           sha256 = "f9affcb5770d32479ac8cabb21397569d2d4619c9638db0c09ea2ea1e1de1c77";
           libraryHaskellDepends = [
             base bytestring data-default directory filepath messagepack mtl
             nvim-hs prettyprinter prettyprinter-ansi-terminal text time
             utf8-string yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/neovimhaskell/nvim-hs-contrib";
           description = "Haskell plugin backend for neovim";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "nvvm" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, Cabal, cuda, directory
         , filepath, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "nvvm";
           version = "0.9.0.0";
           sha256 = "0bc2367b662ce414aa5f989cc1d1266daa0c552868cb374f304bfca29957ef01";
           setupHaskellDepends = [
             base Cabal cuda directory filepath template-haskell
           ];
           libraryHaskellDepends = [ base bytestring cuda template-haskell ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcdonell/nvvm";
           description = "FFI bindings to NVVM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "oauthenticated" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, blaze-builder
         , bytestring, case-insensitive, cryptonite, exceptions, http-client
         , http-types, memory, mtl, network, network-uri, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "oauthenticated";
           version = "0.2.1.0";
           sha256 = "d44cd060a4bfb26b0b958a8a203fb25dc171c146093eab82827542264f57d222";
           libraryHaskellDepends = [
             aeson base base64-bytestring blaze-builder bytestring
             case-insensitive cryptonite exceptions http-client http-types
             memory mtl network network-uri text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tel/oauthenticated.git#readme";
           description = "Simple OAuth for http-client";
           license = stdenv.lib.licenses.mit;
         }) {};
      "oblivious-transfer" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, memory, protolude
         , random, stdenv
         }:
         mkDerivation {
           pname = "oblivious-transfer";
           version = "0.1.0";
           sha256 = "5f1fcaf951a7828bbac3aef6ff8c540b187b0117f51b49428d018712eabd05cf";
           revision = "1";
           editedCabalFile = "1v9js45kc94zirg530d0f3r9wwsx60xnz7diqzvfxlbvw01649yk";
           libraryHaskellDepends = [
             base bytestring cryptonite memory protolude random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/oblivious-transfer#readme";
           description = "An implementation of the Oblivious Transfer protocol in Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "odbc" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, deepseq
         , formatting, optparse-applicative, parsec, semigroups, stdenv
         , template-haskell, text, time, transformers, unixODBC
         , unliftio-core
         }:
         mkDerivation {
           pname = "odbc";
           version = "0.2.2";
           sha256 = "659a124883696168daf3cd20403394616a56837c904810073183ce41769e7336";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring containers deepseq formatting parsec
             semigroups template-haskell text time transformers unliftio-core
           ];
           librarySystemDepends = [ unixODBC ];
           executableHaskellDepends = [
             base bytestring optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/odbc";
           description = "Haskell binding to the ODBC API, aimed at SQL Server driver";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) unixODBC;};
      "oeis" = callPackage
        ({ mkDerivation, base, HTTP, network, network-uri, stdenv }:
         mkDerivation {
           pname = "oeis";
           version = "0.3.10";
           sha256 = "bbfa724d9f69f14bcc95a5ecbd94a3e0ec1b072b69a5413c70174d2406884529";
           libraryHaskellDepends = [ base HTTP network network-uri ];
           doHaddock = false;
           doCheck = false;
           description = "Interface to the Online Encyclopedia of Integer Sequences (OEIS)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "oeis2" = callPackage
        ({ mkDerivation, aeson, base, containers, http-conduit, lens
         , lens-aeson, stdenv, text, vector
         }:
         mkDerivation {
           pname = "oeis2";
           version = "1.0.3";
           sha256 = "97ef0e95f3b78efd696eb0d4f0cab27e37a3f45aa9831057f0b5a9f78ca7ab11";
           libraryHaskellDepends = [
             aeson base containers http-conduit lens lens-aeson text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/23prime/oeis2#readme";
           description = "Interface for Online Encyclopedia of Integer Sequences (OEIS)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ofx" = callPackage
        ({ mkDerivation, base, parsec, pretty, stdenv, time }:
         mkDerivation {
           pname = "ofx";
           version = "0.4.4.0";
           sha256 = "798ceb6b799c22811ad40289f0eaa54037028cc637cbd0df35a770bcf2efecf2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec pretty time ];
           executableHaskellDepends = [ base parsec pretty time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/ofx";
           description = "Parser for OFX data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "old-locale" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "old-locale";
           version = "1.0.0.7";
           sha256 = "dbaf8bf6b888fb98845705079296a23c3f40ee2f449df7312f7f7f1de18d7b50";
           revision = "2";
           editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "locale library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "old-time" = callPackage
        ({ mkDerivation, base, old-locale, stdenv }:
         mkDerivation {
           pname = "old-time";
           version = "1.1.0.3";
           sha256 = "1ccb158b0f7851715d36b757c523b026ca1541e2030d02239802ba39b4112bc1";
           revision = "2";
           editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
           libraryHaskellDepends = [ base old-locale ];
           doHaddock = false;
           doCheck = false;
           description = "Time library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "once" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , template-haskell, unordered-containers
         }:
         mkDerivation {
           pname = "once";
           version = "0.4";
           sha256 = "30bd9195db5c55bc6f9252d10ac03855c792c6dd2ff401f757c155f2d838e92b";
           libraryHaskellDepends = [
             base containers hashable template-haskell unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/kaction/haskell-once";
           description = "memoization for IO actions and functions";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "one-liner" = callPackage
        ({ mkDerivation, base, bifunctors, contravariant, ghc-prim
         , profunctors, stdenv, tagged, transformers
         }:
         mkDerivation {
           pname = "one-liner";
           version = "1.0";
           sha256 = "c7f4fbea856adcaa145eb4ff9c81bb730f0a1796b24f4075c0a8028ae87a31b6";
           revision = "1";
           editedCabalFile = "1ijc5mj93zyfj7hh12aw3xh30kc1xsp7wf6rbbfal36yllnl2xhs";
           libraryHaskellDepends = [
             base bifunctors contravariant ghc-prim profunctors tagged
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sjoerdvisscher/one-liner";
           description = "Constraint-based generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "one-liner-instances" = callPackage
        ({ mkDerivation, base, one-liner, random, stdenv }:
         mkDerivation {
           pname = "one-liner-instances";
           version = "0.1.2.1";
           sha256 = "9384f47a3bdd5be17fa8ac3deca8e406794a1e9e140ec3b173ccd8d22c00c9bf";
           libraryHaskellDepends = [ base one-liner random ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/one-liner-instances#readme";
           description = "Generics-based implementations for common typeclasses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "oo-prototypes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "oo-prototypes";
           version = "0.1.0.0";
           sha256 = "9eaee40e3221f817b957e472917977bdb06ac0e163a0c6ef87941de29a12f576";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/oo-prototypes";
           description = "Support for OO-like prototypes";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "opaleye" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , case-insensitive, contravariant, postgresql-simple, pretty
         , product-profunctors, profunctors, scientific, semigroups, stdenv
         , text, time, time-locale-compat, transformers, uuid, void
         }:
         mkDerivation {
           pname = "opaleye";
           version = "0.6.7004.1";
           sha256 = "e12d1fdf762524997713db4538fe4b9477ff0c48e939d0c712e842c4276e4f26";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring case-insensitive
             contravariant postgresql-simple pretty product-profunctors
             profunctors scientific semigroups text time time-locale-compat
             transformers uuid void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
           description = "An SQL-generating DSL targeting PostgreSQL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "open-browser" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "open-browser";
           version = "0.2.1.0";
           sha256 = "0bed2e63800f738e78a4803ed22902accb50ac02068b96c17ce83a267244ca66";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base process ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rightfold/open-browser";
           description = "Open a web browser from Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "open-witness" = callPackage
        ({ mkDerivation, base, constraints, hashable, random, stdenv
         , template-haskell, transformers, witness
         }:
         mkDerivation {
           pname = "open-witness";
           version = "0.4.0.1";
           sha256 = "0770500d6eeb301fc92d30bec2ccef55b05beb0200125fcbddb6b50836034111";
           libraryHaskellDepends = [
             base constraints hashable random template-haskell transformers
             witness
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AshleyYakeley/open-witness";
           description = "open witnesses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "openexr-write" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
         , deepseq, split, stdenv, vector, vector-split, zlib
         }:
         mkDerivation {
           pname = "openexr-write";
           version = "0.1.0.2";
           sha256 = "2b0655a64ee36d529030df04f09b6fdf63749f64ec3d29b4f1861cf9c69a05e2";
           libraryHaskellDepends = [
             base binary bytestring data-binary-ieee754 deepseq split vector
             vector-split zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "git://klacansky.com/openexr-write.git";
           description = "Library for writing images in OpenEXR HDR file format";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "openpgp-asciiarmor" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, binary
         , bytestring, stdenv
         }:
         mkDerivation {
           pname = "openpgp-asciiarmor";
           version = "0.1.2";
           sha256 = "5342621eaed3cacada7304aae0e3537e8c18b34d35e1457b00f95c7c27a529bd";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring binary bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/openpgp-asciiarmor";
           description = "OpenPGP (RFC4880) ASCII Armor codec";
           license = stdenv.lib.licenses.mit;
         }) {};
      "opensource" = callPackage
        ({ mkDerivation, aeson, base, http-client, http-client-tls, stdenv
         , text, transformers
         }:
         mkDerivation {
           pname = "opensource";
           version = "0.1.1.0";
           sha256 = "1ef36be24b2a1d2aee892891e6c7bd975830c38900dbb96a80e5df95c37c5482";
           libraryHaskellDepends = [
             aeson base http-client http-client-tls text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://api.opensource.org/";
           description = "Haskell API Wrapper for the Open Source License API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "openssl-streams" = callPackage
        ({ mkDerivation, base, bytestring, HsOpenSSL, io-streams, network
         , stdenv
         }:
         mkDerivation {
           pname = "openssl-streams";
           version = "1.2.2.0";
           sha256 = "b966b06f579bc9d1f4698408deff77ff6f7047a083d7d44fbeb379af4cf5f466";
           revision = "1";
           editedCabalFile = "125bxb2axgpcq7rrpamfq0yz017i0ks9zsykh6hn0ifw3lxj1k29";
           libraryHaskellDepends = [
             base bytestring HsOpenSSL io-streams network
           ];
           doHaddock = false;
           doCheck = false;
           description = "OpenSSL network support for io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "operational" = callPackage
        ({ mkDerivation, base, mtl, random, stdenv }:
         mkDerivation {
           pname = "operational";
           version = "0.2.3.5";
           sha256 = "91d479063ae7ed3d0a6ae911bdee550fbf31cf341910f9778046b484c55b4af4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base mtl ];
           executableHaskellDepends = [ base mtl random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Operational";
           description = "Implementation of difficult monads made easy with operational semantics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "operational-class" = callPackage
        ({ mkDerivation, base, operational, stdenv, transformers }:
         mkDerivation {
           pname = "operational-class";
           version = "0.3.0.0";
           sha256 = "8b28b9cb86a2dd520196f6a563538dc2c9e8730f0a0f5e5f3bca19559631e70b";
           libraryHaskellDepends = [ base operational transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-operational-class";
           description = "MonadProgram typeclass for the operational package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "optional-args" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "optional-args";
           version = "1.0.2";
           sha256 = "2e3454ad77cba80b15c02dbe1915889fafa81a22deb7fe5e7e01b0dd8d85b0e4";
           revision = "1";
           editedCabalFile = "0fda6mhm44qpbc9hfkf6jxnm3a7qszabywsmxa2iw0dz734a9xl3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Optional function arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "options" = callPackage
        ({ mkDerivation, base, containers, monads-tf, stdenv, transformers
         }:
         mkDerivation {
           pname = "options";
           version = "1.2.1.1";
           sha256 = "283eea9ae2c539830c6c65f5c03fb00626cfd1274da0526c285c146fc3065a62";
           libraryHaskellDepends = [ base containers monads-tf transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-options/";
           description = "A powerful and easy-to-use command-line option parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "optparse-applicative" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, process, stdenv
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "optparse-applicative";
           version = "0.14.3.0";
           sha256 = "72476302fe555a508917b2d7d6121c7b58ea5434cdc08aeb5d4b652e8f0e7663";
           revision = "2";
           editedCabalFile = "1a08dqjly1xy730f6jf45frr8g8gap0n1vg9b0mpzpydv0kgzmrp";
           libraryHaskellDepends = [
             ansi-wl-pprint base process transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pcapriotti/optparse-applicative";
           description = "Utilities and combinators for parsing command line options";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-enum" = callPackage
        ({ mkDerivation, base, enum-text, fmt, optparse-applicative, stdenv
         , text
         }:
         mkDerivation {
           pname = "optparse-enum";
           version = "1.0.0.0";
           sha256 = "2340a91b5e33034bb75bf445c2182bdd1fa52719fd50642514a4daa0b5bb7c34";
           libraryHaskellDepends = [
             base enum-text fmt optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/optparse-enum#readme";
           description = "An enum-text based toolkit for optparse-applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-generic" = callPackage
        ({ mkDerivation, base, bytestring, Only, optparse-applicative
         , semigroups, stdenv, system-filepath, text, time, transformers
         , void
         }:
         mkDerivation {
           pname = "optparse-generic";
           version = "1.3.1";
           sha256 = "009bf703d13e1e5833c74ac5bbfa324b85d5180eb80e89cb3f10d94a8a874e30";
           libraryHaskellDepends = [
             base bytestring Only optparse-applicative semigroups
             system-filepath text time transformers void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Auto-generate a command-line parser for your datatype";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-simple" = callPackage
        ({ mkDerivation, base, githash, optparse-applicative, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "optparse-simple";
           version = "0.1.1.2";
           sha256 = "02716473cc57ff1212c5174cc213f5b1bb744e680c222a4ae97e0b12f38400e4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base githash optparse-applicative template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/optparse-simple#readme";
           description = "Simple interface to optparse-applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-text" = callPackage
        ({ mkDerivation, base, optparse-applicative, stdenv, text }:
         mkDerivation {
           pname = "optparse-text";
           version = "0.1.1.0";
           sha256 = "f6c081ecec880ae4124f25c1d91ba3a1a3caed9d2fde9e977bceab7d300884ef";
           libraryHaskellDepends = [ base optparse-applicative text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/passy/optparse-text#readme";
           description = "Data.Text helpers for optparse-applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ordered-containers" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "ordered-containers";
           version = "0.2.2";
           sha256 = "c75ac7330e70cd5d6ac0062b68033779cf15cd986d4ca20f838e016d466d22c9";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Set- and Map-like types that remember the order elements were inserted";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "oset" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "oset";
           version = "0.4.0.1";
           sha256 = "5b9742f6ba0cd8363779ba4a239028209278a12c903abc0e59c70c718828d12c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rcook/oset#readme";
           description = "An insertion-order-preserving set";
           license = stdenv.lib.licenses.mit;
         }) {};
      "overhang" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "overhang";
           version = "1.0.0";
           sha256 = "1d68f59354930cdb4372adb86386ca9cbd699d90d2d8c8a1042314f296772a1e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jship/overhang#readme";
           description = "Hang loose with your lambdas!";
           license = stdenv.lib.licenses.mit;
         }) {};
      "packcheck" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "packcheck";
           version = "0.4.2";
           sha256 = "da47a26a684b3541542e4f4e7095d2a6bc69e9c47d6953db4baf9084b7ca467d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/harendra-kumar/packcheck";
           description = "Universal build and CI testing for Haskell packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pager" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , directory, process, resourcet, safe, stdenv, terminfo, text
         , transformers, unix
         }:
         mkDerivation {
           pname = "pager";
           version = "0.1.1.0";
           sha256 = "3e1e4f2ca17be6dd68d2d480f29e7a770c0f7ca3109aa1980da677d96cd4eef3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra directory process resourcet
             safe terminfo text transformers unix
           ];
           executableHaskellDepends = [ base bytestring conduit-extra text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pharpend/pager";
           description = "Open up a pager, like 'less' or 'more'";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "pagination" = callPackage
        ({ mkDerivation, base, deepseq, exceptions, stdenv }:
         mkDerivation {
           pname = "pagination";
           version = "0.2.1";
           sha256 = "88dcbae69e830adac0943f24f8ae6915f9e4ba684531a76bce936767cbeb203d";
           revision = "2";
           editedCabalFile = "0wvwi3hymp2vhhpzpycdc65zbsqmi2h0c6r0nf8p5nkgsk4pm1k2";
           libraryHaskellDepends = [ base deepseq exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/pagination";
           description = "Framework-agnostic pagination boilerplate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pairing" = callPackage
        ({ mkDerivation, arithmoi, base, binary, bytestring, errors
         , galois-field, integer-logarithms, memory, MonadRandom, protolude
         , QuickCheck, random, stdenv, wl-pprint-text
         }:
         mkDerivation {
           pname = "pairing";
           version = "0.4.1";
           sha256 = "9cdde6c89769ad011b42ace04c98dda00d3051ce953d342917d9f7dc15431c5e";
           libraryHaskellDepends = [
             arithmoi base binary bytestring errors galois-field
             integer-logarithms memory MonadRandom protolude QuickCheck random
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/pairing#readme";
           description = "Bilinear pairings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "palette" = callPackage
        ({ mkDerivation, array, base, colour, containers, MonadRandom
         , stdenv
         }:
         mkDerivation {
           pname = "palette";
           version = "0.3.0.2";
           sha256 = "9114496d98873d41b8b8e4f006e78dab674a74cec2d2d80cd1c97f22d9b04020";
           revision = "1";
           editedCabalFile = "0x536r15zzxlkf5p5a2x64qr5szdf9yh04vaiiwfhsm232qb6fjq";
           libraryHaskellDepends = [
             array base colour containers MonadRandom
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Utilities for choosing and creating color schemes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pandoc" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, attoparsec, base
         , base64-bytestring, binary, blaze-html, blaze-markup, bytestring
         , case-insensitive, cmark-gfm, containers, data-default, deepseq
         , directory, doctemplates, exceptions, filepath, Glob
         , haddock-library, hslua, hslua-module-system, hslua-module-text
         , HsYAML, HTTP, http-client, http-client-tls, http-types, ipynb
         , JuicyPixels, mtl, network, network-uri, pandoc-types, parsec
         , process, random, safe, scientific, SHA, skylighting, split
         , stdenv, syb, tagsoup, temporary, texmath, text, time
         , unicode-transforms, unix, unordered-containers, vector, xml
         , zip-archive, zlib
         }:
         mkDerivation {
           pname = "pandoc";
           version = "2.7.3";
           sha256 = "a877203379ec5179716d6999f76352229d7f40f5bec70dbfa48c140848cef236";
           revision = "1";
           editedCabalFile = "124is72dmd98fk8mayzird9i9px619kzszm2qrl1dacy0wcn6ri8";
           configureFlags = [ "-fhttps" "-f-trypandoc" ];
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson aeson-pretty attoparsec base base64-bytestring binary
             blaze-html blaze-markup bytestring case-insensitive cmark-gfm
             containers data-default deepseq directory doctemplates exceptions
             filepath Glob haddock-library hslua hslua-module-system
             hslua-module-text HsYAML HTTP http-client http-client-tls
             http-types ipynb JuicyPixels mtl network network-uri pandoc-types
             parsec process random safe scientific SHA skylighting split syb
             tagsoup temporary texmath text time unicode-transforms unix
             unordered-containers vector xml zip-archive zlib
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             mkdir -p $out/share/man/man1
             mv "man/"*.1 $out/share/man/man1/
           '';
           homepage = "https://pandoc.org";
           description = "Conversion between markup formats";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "pandoc-citeproc" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
         , Cabal, containers, data-default, directory, filepath, hs-bibutils
         , libyaml, mtl, network, old-locale, pandoc, pandoc-types, parsec
         , rfc5051, safe, setenv, split, stdenv, syb, tagsoup, text, time
         , unordered-containers, vector, xml-conduit, yaml
         }:
         mkDerivation {
           pname = "pandoc-citeproc";
           version = "0.16.2";
           sha256 = "5b6725b003474f19fd7de65f3371a015a7b210b42543fe952f2bc4c7d509b596";
           revision = "2";
           editedCabalFile = "0z7ia0f89lamrvnr75j7r6jhklkly0qcyplws9ww9rpbj9j7shyk";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [
             aeson base bytestring containers data-default directory filepath
             hs-bibutils mtl network old-locale pandoc pandoc-types parsec
             rfc5051 setenv split syb tagsoup text time unordered-containers
             vector xml-conduit yaml
           ];
           executableHaskellDepends = [
             aeson aeson-pretty attoparsec base bytestring filepath libyaml
             pandoc pandoc-types safe syb text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/pandoc-citeproc";
           description = "Supports using pandoc with citeproc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pandoc-csv2table" = callPackage
        ({ mkDerivation, base, csv, pandoc, pandoc-types, stdenv, text }:
         mkDerivation {
           pname = "pandoc-csv2table";
           version = "1.0.8";
           sha256 = "eb11a1cf4bc32fad31e7457fa93b1c2580fb6f9372f618851ad195ce8453c069";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base csv pandoc pandoc-types text ];
           executableHaskellDepends = [ base csv pandoc pandoc-types ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/baig/pandoc-csv2table-filter";
           description = "Convert CSV to Pandoc Table Markdown";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pandoc-markdown-ghci-filter" = callPackage
        ({ mkDerivation, aeson, base, containers, ghcid, pandoc
         , pandoc-types, stdenv, text
         }:
         mkDerivation {
           pname = "pandoc-markdown-ghci-filter";
           version = "0.1.0.0";
           sha256 = "eabf55d6dbc7f5c4cd64b6bda194bc5a2bced33a1acdccd5f040053b398eb0d4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base containers ghcid pandoc pandoc-types text
           ];
           executableHaskellDepends = [
             aeson base containers ghcid pandoc pandoc-types text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gdevanla/pandoc-markdown-ghci-filter#readme";
           description = "Pandoc-filter to evaluate `code` section in markdown and auto-embed output";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pandoc-pyplot" = callPackage
        ({ mkDerivation, base, containers, data-default-class, deepseq
         , directory, filepath, hashable, open-browser, optparse-applicative
         , pandoc, pandoc-types, stdenv, template-haskell, temporary, text
         , typed-process, yaml
         }:
         mkDerivation {
           pname = "pandoc-pyplot";
           version = "2.1.5.1";
           sha256 = "6ece30d729524c240bb379aa70a87ca11b9b1cab4e4b6817dcfd7c5bf0b11580";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers data-default-class directory filepath hashable
             pandoc pandoc-types temporary text typed-process yaml
           ];
           executableHaskellDepends = [
             base data-default-class deepseq directory filepath open-browser
             optparse-applicative pandoc pandoc-types template-haskell temporary
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/LaurentRDC/pandoc-pyplot#readme";
           description = "A Pandoc filter to include figures generated from Python code blocks";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pandoc-types" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , ghc-prim, QuickCheck, stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "pandoc-types";
           version = "1.17.6.1";
           sha256 = "1834c2064918a21d346f399c4abcd424617a9a4f0f1e1a8e8ab9b590127edeb4";
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq ghc-prim QuickCheck syb
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://pandoc.org/";
           description = "Types for representing a structured document";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pantry" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, array, base, base-orphans
         , base64-bytestring, bytestring, Cabal, conduit, conduit-extra
         , containers, contravariant, cryptonite, cryptonite-conduit
         , deepseq, digest, directory, filelock, filepath, generic-deriving
         , ghc-prim, hackage-security, hashable, hpack, http-client
         , http-client-tls, http-conduit, http-download, http-types
         , integer-gmp, memory, mono-traversable, mtl, network, network-uri
         , path, path-io, persistent, persistent-sqlite, persistent-template
         , primitive, resourcet, rio, rio-orphans, rio-prettyprint, safe
         , stdenv, syb, tar-conduit, template-haskell, text, text-metrics
         , th-lift, th-lift-instances, th-orphans, th-reify-many
         , th-utilities, time, transformers, unix-compat, unliftio
         , unordered-containers, vector, yaml, zip-archive
         }:
         mkDerivation {
           pname = "pantry";
           version = "0.1.1.2";
           sha256 = "f1e97cf5f2d7500c1fc461f53f12417f58857ed9d420a2d6fdc81f3693be3ad4";
           libraryHaskellDepends = [
             aeson ansi-terminal array base base-orphans base64-bytestring
             bytestring Cabal conduit conduit-extra containers contravariant
             cryptonite cryptonite-conduit deepseq digest directory filelock
             filepath generic-deriving ghc-prim hackage-security hashable hpack
             http-client http-client-tls http-conduit http-download http-types
             integer-gmp memory mono-traversable mtl network network-uri path
             path-io persistent persistent-sqlite persistent-template primitive
             resourcet rio rio-orphans rio-prettyprint safe syb tar-conduit
             template-haskell text text-metrics th-lift th-lift-instances
             th-orphans th-reify-many th-utilities time transformers unix-compat
             unliftio unordered-containers vector yaml zip-archive
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/pantry#readme";
           description = "Content addressable Haskell package management";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parallel" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "parallel";
           version = "3.2.2.0";
           sha256 = "170453a71a2a8b31cca63125533f7771d7debeb639700bdabdd779c34d8a6ef6";
           revision = "2";
           editedCabalFile = "0shw96f4fc3vbr2vrnsk794qcsxyv3ra3snhw4wng81rkapp54y6";
           libraryHaskellDepends = [ array base containers deepseq ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Parallel programming library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parallel-io" = callPackage
        ({ mkDerivation, base, containers, extensible-exceptions, random
         , stdenv
         }:
         mkDerivation {
           pname = "parallel-io";
           version = "0.3.3";
           sha256 = "3a14c02b9b8b7c72577eb90a8dd72de75d99192def87d7aa79545ee4d6e80645";
           revision = "2";
           editedCabalFile = "0mggzni708nzxlsjbibdzf03s3b5lnqj2zi1hnbh1rd4j4jr07ym";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers extensible-exceptions random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://batterseapower.github.com/parallel-io";
           description = "Combinators for executing IO actions in parallel on a thread pool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "paripari" = callPackage
        ({ mkDerivation, base, bytestring, parser-combinators, stdenv, text
         }:
         mkDerivation {
           pname = "paripari";
           version = "0.6.0.1";
           sha256 = "26cc3ba2a3826e455805f6cf04dfd2f2a1971bd4362b8bbfc2f46a2f1acf02c5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring parser-combinators text
           ];
           executableHaskellDepends = [
             base bytestring parser-combinators text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/paripari#readme";
           description = "Parser combinators with fast-path and slower fallback for error reporting";
           license = stdenv.lib.licenses.mit;
         }) {};
      "parseargs" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "parseargs";
           version = "0.2.0.9";
           sha256 = "3c469ddcee3a63ef790d88f676dcf99b9d90b8815112f18c17febafc9e8025a9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/BartMassey/parseargs";
           description = "Parse command-line arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsec" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, text }:
         mkDerivation {
           pname = "parsec";
           version = "3.1.14.0";
           sha256 = "c72c92e07ee1d2ec0a423b89fdc11e0863725675f3c2d5621509d9cb84545c8c";
           revision = "1";
           editedCabalFile = "0dhg5xwqnig83hbkpawqi1k2prrps7jhkj4gb3ccram2drfmb933";
           libraryHaskellDepends = [ base bytestring mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/parsec";
           description = "Monadic parser combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsec-class" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "parsec-class";
           version = "1.0.0.0";
           sha256 = "029c4ec5e6b0efd0505f1051c29c02060ddab3018b9aef4c4ae96a99f58e1773";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/parsec-class";
           description = "Class of types that can be constructed from their text representation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "parsec-numbers" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "parsec-numbers";
           version = "0.1.0";
           sha256 = "77019a4817712f6bfc61c9d148b680579955eb40d286f7766f7b0a90c726febf";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           description = "Utilities for parsing numbers from strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsec-numeric" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "parsec-numeric";
           version = "0.1.0.0";
           sha256 = "7bdd9ae4aa63695e3072c73d99b85ef1572ffe9f5a07621edaa9515393a6e52f";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/parsec-numeric";
           description = "Parsec combinators for parsing Haskell numeric types";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "parser-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "parser-combinators";
           version = "1.1.0";
           sha256 = "ac7642972b18a47c575d2bcd0b2f6c34f33ca2ed3adb28034420d09ced823e91";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/parser-combinators";
           description = "Lightweight package providing commonly useful parser combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parser-combinators-tests" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "parser-combinators-tests";
           version = "1.1.0";
           sha256 = "bfe20f39892aa75f7a5bfbc62c395e2a6107b3c7edbeed3e1a060f1c627b7d54";
           revision = "1";
           editedCabalFile = "0adgbzpylvk9p7ylxynsdrmqhhbh5pm8ww1s3nz3czl79y8lhh47";
           isLibrary = false;
           isExecutable = false;
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/parser-combinators";
           description = "Test suite of parser-combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsers" = callPackage
        ({ mkDerivation, attoparsec, base, base-orphans, binary, charset
         , containers, mtl, parsec, scientific, semigroups, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "parsers";
           version = "0.12.10";
           sha256 = "17b91f1318ca54679395b382a056df633fdb44fbb962eca66b1787f957af1a6c";
           libraryHaskellDepends = [
             attoparsec base base-orphans binary charset containers mtl parsec
             scientific semigroups text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/parsers/";
           description = "Parsing combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "partial-handler" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "partial-handler";
           version = "1.0.3";
           sha256 = "94c72af024417ec04e3d94b5b57c7bfeb8b48acb8444e7c0fe0764ff1139c131";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/partial-handler";
           description = "A composable exception handler";
           license = stdenv.lib.licenses.mit;
         }) {};
      "partial-isomorphisms" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "partial-isomorphisms";
           version = "0.2.2.1";
           sha256 = "4c551fa69119e87de1ba0ec7b854f6ed13fb2fe2768db4afff2f8468f0f4a164";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
           description = "Partial isomorphisms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "partial-semigroup" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "partial-semigroup";
           version = "0.5.1.1";
           sha256 = "18d0ae9938707137514073ad338d6b52e22f48433c346f9062e9cd7cfdc916d8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chris-martin/partial-semigroup";
           description = "A partial binary associative operator";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "password" = callPackage
        ({ mkDerivation, base, scrypt, stdenv, text }:
         mkDerivation {
           pname = "password";
           version = "0.1.0.1";
           sha256 = "79eaf0d698e09c3ad114d6344f2cc9097ec1d2d841f8838abb46c61867b22659";
           libraryHaskellDepends = [ base scrypt text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/password/password#readme";
           description = "plain-text password and hashed password datatypes and functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "password-instances" = callPackage
        ({ mkDerivation, aeson, base, http-api-data, password, persistent
         , stdenv
         }:
         mkDerivation {
           pname = "password-instances";
           version = "0.3.0.1";
           sha256 = "23d123275a5aa23319968fe4dfc6dc01a2870e672e30a90885316414809fa90f";
           libraryHaskellDepends = [
             aeson base http-api-data password persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/password/password-instances#readme";
           description = "typeclass instances for password package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path" = callPackage
        ({ mkDerivation, aeson, base, deepseq, exceptions, filepath
         , hashable, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "path";
           version = "0.6.1";
           sha256 = "4b8bd85a13395b4240c639b9cf804371854d5dac69158f661068bd3089a25e59";
           revision = "2";
           editedCabalFile = "05pgmg0w1mfwcmx9ad4p09xqxld8njhgwmgq38v7pr58czvmd6ks";
           libraryHaskellDepends = [
             aeson base deepseq exceptions filepath hashable template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support for well-typed paths";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-extra" = callPackage
        ({ mkDerivation, attoparsec, base, path, stdenv, text }:
         mkDerivation {
           pname = "path-extra";
           version = "0.2.0";
           sha256 = "eb08be914e718762cad0e1fc7588201258bd8637c486990791e5b816f7a8043a";
           libraryHaskellDepends = [ attoparsec base path text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/path-extra#readme";
           description = "URLs without host information";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-io" = callPackage
        ({ mkDerivation, base, containers, directory, dlist, exceptions
         , filepath, path, stdenv, temporary, time, transformers
         , unix-compat
         }:
         mkDerivation {
           pname = "path-io";
           version = "1.4.2";
           sha256 = "23c7f203347bc20e5649476e9b5df662a09ffbb8c1a2f3e658935845621d1d4b";
           revision = "1";
           editedCabalFile = "02irjcw5rdcx9wvsb7mcanylp2bwaiacpfjjbcvqq1lhvqcyw73i";
           libraryHaskellDepends = [
             base containers directory dlist exceptions filepath path temporary
             time transformers unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/path-io";
           description = "Interface to ‘directory’ package for users of ‘path’";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-pieces" = callPackage
        ({ mkDerivation, base, stdenv, text, time }:
         mkDerivation {
           pname = "path-pieces";
           version = "0.2.1";
           sha256 = "080bd49f53e20597ca3e5962e0c279a3422345f5b088840a30a751cd76d4a36f";
           revision = "1";
           editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
           libraryHaskellDepends = [ base text time ];
           doHaddock = false;
           doCheck = false;
           description = "Components of paths";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-text-utf8" = callPackage
        ({ mkDerivation, base, bytestring, path, safe-exceptions, stdenv
         , text
         }:
         mkDerivation {
           pname = "path-text-utf8";
           version = "0.0.1.2";
           sha256 = "f6c2652d23171ffa87f13d2c804630499b6b2210853aaf8008f4d593b5f41cfd";
           libraryHaskellDepends = [
             base bytestring path safe-exceptions text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chris-martin/path-text-utf8";
           description = "Read and write UTF-8 text files";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "pathtype" = callPackage
        ({ mkDerivation, base, deepseq, directory, QuickCheck, semigroups
         , stdenv, tagged, time, transformers, utility-ht
         }:
         mkDerivation {
           pname = "pathtype";
           version = "0.8.1";
           sha256 = "d5e6dc557dcf53e97cc2f7f6d6ee30992920e3ea074042b6ac11f74f2792340f";
           configureFlags = [ "-f-old-time" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base deepseq directory QuickCheck semigroups tagged time
             transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/pathtype/";
           description = "Type-safe replacement for System.FilePath etc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pathwalk" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, transformers }:
         mkDerivation {
           pname = "pathwalk";
           version = "0.3.1.2";
           sha256 = "76e0d0646a3133a062dbae4e9d37d59e71d6328706bb178552a93800e4550e91";
           libraryHaskellDepends = [ base directory filepath transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Xe/pathwalk";
           description = "Path walking utilities for Haskell programs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pattern-arrows" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "pattern-arrows";
           version = "0.0.2";
           sha256 = "6fc2d972e72785d727d2b68e1f82ef94a2c93cedbc00e6a4cdc03498825c078f";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
           description = "Arrows for Pretty Printing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pcf-font" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, stdenv
         , vector, zlib
         }:
         mkDerivation {
           pname = "pcf-font";
           version = "0.2.2.0";
           sha256 = "8a67d04240a7668e669414d1b4f531d290c79a63198e0ecf02cb0339bff098ef";
           libraryHaskellDepends = [
             base binary bytestring containers vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michael-swan/pcf-font";
           description = "PCF font parsing and rendering library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pcf-font-embed" = callPackage
        ({ mkDerivation, base, bytestring, pcf-font, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "pcf-font-embed";
           version = "0.1.2.0";
           sha256 = "c55d51ee6f959c9c05bb9d9adac3aad1cd87b2bba3cca7d3667d67f1a230fd51";
           libraryHaskellDepends = [
             base bytestring pcf-font template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michael-swan/pcf-font-embed";
           description = "Template Haskell for embedding text rendered using PCF fonts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pcg-random" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cabal-doctest, entropy
         , primitive, random, stdenv
         }:
         mkDerivation {
           pname = "pcg-random";
           version = "0.1.3.6";
           sha256 = "085012ff6a319ac9d4f69b1c62ea6fe1d69e723f30200cfe5d521d2058b41dd5";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bytestring entropy primitive random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/cchalmers/pcg-random";
           description = "Haskell bindings to the PCG random number generator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pcre-heavy" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, pcre-light
         , semigroups, stdenv, string-conversions, template-haskell
         }:
         mkDerivation {
           pname = "pcre-heavy";
           version = "1.0.0.2";
           sha256 = "8a5cf697b7683127812450cef57d0d74ac5c1117ec80618d10509642f793cbd1";
           revision = "1";
           editedCabalFile = "14pprgwxkiaji3rqhsm0fv454wic6qxm7vy4a475yigadb1vz1ls";
           libraryHaskellDepends = [
             base base-compat bytestring pcre-light semigroups
             string-conversions template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/pcre-heavy";
           description = "A regexp (regex) library on top of pcre-light you can actually use";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "pcre-light" = callPackage
        ({ mkDerivation, base, bytestring, pcre, stdenv }:
         mkDerivation {
           pname = "pcre-light";
           version = "0.4.1.0";
           sha256 = "16f6bfaa320bba91cd0c1a502d871c1c7a3a2de2d58dfaa2d90dba6558d51b53";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/pcre-light";
           description = "Portable regex library for Perl 5 compatible regular expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) pcre;};
      "pcre-utils" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, mtl
         , regex-pcre-builtin, stdenv, vector
         }:
         mkDerivation {
           pname = "pcre-utils";
           version = "0.1.8.1.1";
           sha256 = "1f2a80ca63308e182542534866a844efaf880deac4145213bf1c83a560586df4";
           libraryHaskellDepends = [
             array attoparsec base bytestring mtl regex-pcre-builtin vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bartavelle/pcre-utils";
           description = "Perl-like substitute and split for PCRE regexps";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdfinfo" = callPackage
        ({ mkDerivation, base, mtl, old-locale, process-extras, stdenv
         , text, time, time-locale-compat
         }:
         mkDerivation {
           pname = "pdfinfo";
           version = "1.5.4";
           sha256 = "9a6a1f7d8ab0a5e8f7f8276da070ccddec140d6b2549b084042159b639230911";
           libraryHaskellDepends = [
             base mtl old-locale process-extras text time time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/pdfinfo";
           description = "Wrapper around the pdfinfo command";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "peano" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "peano";
           version = "0.1.0.1";
           sha256 = "31fdd23993a76155738224a7b230a1a6fcfde091b2fbc945df4cb54068eeec7b";
           revision = "3";
           editedCabalFile = "0wl22dnz6ld300cg6id3lw991bp8kdfi8h0nbv37vn79i1zdcj5n";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Peano numbers";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "pedersen-commitment" = callPackage
        ({ mkDerivation, base, bytestring, containers, cryptonite, memory
         , mtl, protolude, stdenv, text
         }:
         mkDerivation {
           pname = "pedersen-commitment";
           version = "0.2.0";
           sha256 = "6793cc37efa22307c935636f15dae7670330a84a7435f36412ced3b81410b0b7";
           libraryHaskellDepends = [
             base bytestring containers cryptonite memory mtl protolude text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adjoint-io/pedersen-commitment#readme";
           description = "An implementation of Pedersen commitment schemes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pem" = callPackage
        ({ mkDerivation, base, basement, bytestring, memory, stdenv }:
         mkDerivation {
           pname = "pem";
           version = "0.2.4";
           sha256 = "770c4c1b9cd24b3db7f511f8a48404a0d098999e28573c3743a8a296bb96f8d4";
           libraryHaskellDepends = [ base basement bytestring memory ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-pem";
           description = "Privacy Enhanced Mail (PEM) format reader and writer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pencil" = callPackage
        ({ mkDerivation, base, data-default, directory, edit-distance
         , filepath, hashable, hsass, mtl, pandoc, parsec, semigroups
         , stdenv, text, time, unordered-containers, vector, xml, yaml
         }:
         mkDerivation {
           pname = "pencil";
           version = "1.0.1";
           sha256 = "940980de5238e763aa88a17910f6bcdad862ccfda359d32636d76cca1a583428";
           revision = "1";
           editedCabalFile = "012afvs4wghdw7adz0hw01pmi8ai89r8jhpykdwfyf4ignbrfpvq";
           libraryHaskellDepends = [
             base data-default directory edit-distance filepath hashable hsass
             mtl pandoc parsec semigroups text time unordered-containers vector
             xml yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/elben/pencil";
           description = "Static site generator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "percent-format" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "percent-format";
           version = "0.0.1";
           sha256 = "7530a64ba6f1ac2b59bdc325f3a8a6f0006b4a24dc2cd86eb2b41ab46d460c09";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/percent-format#readme";
           description = "simple printf-style string formatting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "peregrin" = callPackage
        ({ mkDerivation, base, bytestring, postgresql-simple, stdenv, text
         }:
         mkDerivation {
           pname = "peregrin";
           version = "0.3.0";
           sha256 = "4263682a514ae2b31b31a271ea9f7a2751eac5b32375cd9cf0bcd0ad92691b4a";
           libraryHaskellDepends = [ base bytestring postgresql-simple text ];
           doHaddock = false;
           doCheck = false;
           description = "Database migration support for use in other libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "perfect-hash-generator" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, data-ordlist
         , directory, filepath, hashable, optparse-applicative, random
         , stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "perfect-hash-generator";
           version = "0.2.0.6";
           sha256 = "df727611ca45994fc40e3e37ebae783a892f3b46db95897ba2df876e65f7b110";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers data-ordlist directory filepath
             hashable text unordered-containers vector
           ];
           executableHaskellDepends = [
             base binary bytestring containers hashable optparse-applicative
             random text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kostmo/perfect-hash-generator#readme";
           description = "Perfect minimal hashing implementation in native Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "persist" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text }:
         mkDerivation {
           pname = "persist";
           version = "0.1.1.4";
           sha256 = "a4f507229a2831a87813f11d1bdf720bf1b5cb7f15a2c2b28660f08f5da1253c";
           libraryHaskellDepends = [ base bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/persist";
           description = "Minimal serialization library with focus on performance";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistable-record" = callPackage
        ({ mkDerivation, array, base, containers, dlist, names-th
         , product-isomorphic, stdenv, template-haskell, th-data-compat
         , transformers
         }:
         mkDerivation {
           pname = "persistable-record";
           version = "0.6.0.4";
           sha256 = "6d3abe73d61cf691bb1b5a412fa8a6d8fcc5cb3070176041ad8953b63ca5f8f9";
           libraryHaskellDepends = [
             array base containers dlist names-th product-isomorphic
             template-haskell th-data-compat transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Binding between SQL database values and haskell records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistable-types-HDBC-pg" = callPackage
        ({ mkDerivation, base, bytestring, convertible, dlist, HDBC
         , persistable-record, relational-query, relational-query-HDBC
         , stdenv, text-postgresql
         }:
         mkDerivation {
           pname = "persistable-types-HDBC-pg";
           version = "0.0.3.5";
           sha256 = "955c73edd056e1ecb6a3543d726070c3f219a67017ef18ac9ae75711f63cec2f";
           libraryHaskellDepends = [
             base bytestring convertible dlist HDBC persistable-record
             relational-query relational-query-HDBC text-postgresql
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "HDBC and Relational-Record instances of PostgreSQL extended types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistent" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-html, blaze-markup, bytestring, conduit, containers
         , fast-logger, http-api-data, monad-logger, mtl, old-locale
         , path-pieces, resource-pool, resourcet, scientific, silently
         , stdenv, tagged, template-haskell, text, time, transformers
         , unliftio-core, unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "persistent";
           version = "2.9.2";
           sha256 = "497e5d2c96aaa370f147ece995a798d1ea217e35996f908d42681f41ec1c4af3";
           revision = "1";
           editedCabalFile = "1v6ll8aggz6gvz53mzfrnb4jsc25dspk39x3vcxpzqkdp8rgz1am";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-html blaze-markup
             bytestring conduit containers fast-logger http-api-data
             monad-logger mtl old-locale path-pieces resource-pool resourcet
             scientific silently tagged template-haskell text time transformers
             unliftio-core unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Type-safe, multi-backend data serialization";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-iproute" = callPackage
        ({ mkDerivation, aeson, aeson-iproute, base, bytestring
         , http-api-data, iproute, path-pieces, persistent, stdenv, text
         }:
         mkDerivation {
           pname = "persistent-iproute";
           version = "0.2.4";
           sha256 = "054ffb553dd2effa02b4c3fb11dfd66fc724ef16ee2dcbd0d8485af6a8cd57d3";
           libraryHaskellDepends = [
             aeson aeson-iproute base bytestring http-api-data iproute
             path-pieces persistent text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/greydot/persistent-iproute";
           description = "Persistent instances for types in iproute";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistent-mysql" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , containers, monad-logger, mysql, mysql-simple, persistent
         , resource-pool, resourcet, stdenv, text, transformers
         , unliftio-core
         }:
         mkDerivation {
           pname = "persistent-mysql";
           version = "2.9.0";
           sha256 = "ee4b17bd5ab8f724ad6cb98941418fca37eeaacb2ba7f21c2c7e2792898a4129";
           revision = "1";
           editedCabalFile = "0xvis08x4ajayp73f6j0czpksn309f3anv5kklxa9r6j8j5qkhvz";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit containers monad-logger
             mysql mysql-simple persistent resource-pool resourcet text
             transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using MySQL database server";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-mysql-haskell" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, containers
         , io-streams, monad-logger, mysql-haskell, network, persistent
         , persistent-template, resource-pool, resourcet, stdenv, text, time
         , tls, transformers, unliftio-core
         }:
         mkDerivation {
           pname = "persistent-mysql-haskell";
           version = "0.5.2";
           sha256 = "56c27a690be1ebeb1b6a74d7b3fe7fd9894d92f14c82f3675945c6b758c282cd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring conduit containers io-streams monad-logger
             mysql-haskell network persistent resource-pool resourcet text time
             tls transformers unliftio-core
           ];
           executableHaskellDepends = [
             base monad-logger persistent persistent-template transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "A pure haskell backend for the persistent library using MySQL database server";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-pagination" = callPackage
        ({ mkDerivation, base, conduit, esqueleto, foldl, microlens, mtl
         , persistent, stdenv
         }:
         mkDerivation {
           pname = "persistent-pagination";
           version = "0.1.1.1";
           sha256 = "b84cffbf30ff35a2c46aca46d22f5da7d4448c014e10ff032da27721bbf53d0f";
           libraryHaskellDepends = [
             base conduit esqueleto foldl microlens mtl persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/parsonsmatt/persistent-pagination#readme";
           description = "Efficient and correct pagination for persistent or esqueleto queries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistent-postgresql" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , containers, monad-logger, persistent, postgresql-libpq
         , postgresql-simple, resource-pool, resourcet, stdenv, text, time
         , transformers, unliftio-core
         }:
         mkDerivation {
           pname = "persistent-postgresql";
           version = "2.9.1";
           sha256 = "f8d2be7aea65149da7dd96449394c38acf676ffc74b0638d0f9ba5230da6250a";
           revision = "1";
           editedCabalFile = "186fbykla4hpsl14l1ccjr3rfdabl47c9x28m290477ilaygk685";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit containers monad-logger
             persistent postgresql-libpq postgresql-simple resource-pool
             resourcet text time transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using postgresql";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-qq" = callPackage
        ({ mkDerivation, base, haskell-src-meta, mtl, persistent, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "persistent-qq";
           version = "2.9.1";
           sha256 = "ed3d56027d6719ec58bfe98da232066191876e20b597ef99a79c504d526d9bff";
           libraryHaskellDepends = [
             base haskell-src-meta mtl persistent template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/persistent#readme";
           description = "Provides a quasi-quoter for raw SQL for persistent";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-sqlite" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, containers
         , microlens-th, monad-logger, old-locale, persistent, resource-pool
         , resourcet, sqlite, stdenv, text, time, transformers
         , unliftio-core, unordered-containers
         }:
         mkDerivation {
           pname = "persistent-sqlite";
           version = "2.9.3";
           sha256 = "985b9f7323e88f784ff93dd6f5bc65cb0183435dea052a5d238dec1e11b28b8f";
           configureFlags = [ "-fsystemlib" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring conduit containers microlens-th monad-logger
             old-locale persistent resource-pool resourcet text time
             transformers unliftio-core unordered-containers
           ];
           librarySystemDepends = [ sqlite ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using sqlite3";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) sqlite;};
      "persistent-template" = callPackage
        ({ mkDerivation, aeson, aeson-compat, base, bytestring, containers
         , ghc-prim, http-api-data, monad-control, monad-logger, path-pieces
         , persistent, stdenv, tagged, template-haskell, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "persistent-template";
           version = "2.6.0";
           sha256 = "5bfa8cbe7c25bdef33cc6d6ece1673f847c2a56860f57c69d8d2d0ecacf82173";
           revision = "1";
           editedCabalFile = "1p7j3lz0jrczrl25bw7cg0vskhxki065x8r6913sh8l1kvrdbkk8";
           libraryHaskellDepends = [
             aeson aeson-compat base bytestring containers ghc-prim
             http-api-data monad-control monad-logger path-pieces persistent
             tagged template-haskell text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Type-safe, non-relational, multi-backend persistence";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-typed-db" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, http-api-data
         , monad-logger, path-pieces, persistent, persistent-template
         , resource-pool, resourcet, stdenv, template-haskell, text
         , transformers
         }:
         mkDerivation {
           pname = "persistent-typed-db";
           version = "0.0.1.1";
           sha256 = "36c1dc06d548813463d830d8adfbbb39fca948e2598bbd64b272fe57b66fc932";
           revision = "1";
           editedCabalFile = "106dkixvzg2zia8hzxsw5fb458v7bka69szlnfxnffa5sdbm8him";
           libraryHaskellDepends = [
             aeson base bytestring conduit http-api-data monad-logger
             path-pieces persistent persistent-template resource-pool resourcet
             template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/parsonsmatt/persistent-typed-db#readme";
           description = "Type safe access to multiple database schemata";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pg-harness-client" = callPackage
        ({ mkDerivation, base, bytestring, HTTP, stdenv }:
         mkDerivation {
           pname = "pg-harness-client";
           version = "0.6.0";
           sha256 = "d0624036ffa888edd9b5073a3c485400ef1057497f1748f5084c03818bcaf819";
           libraryHaskellDepends = [ base bytestring HTTP ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BardurArantsson/pg-harness";
           description = "Client library for pg-harness-server";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "pg-harness-server" = callPackage
        ({ mkDerivation, async, base, ini, postgresql-simple, random
         , scotty, stdenv, text, transformers, warp
         }:
         mkDerivation {
           pname = "pg-harness-server";
           version = "0.6.2";
           sha256 = "cc975305951aca58d50356ddc80a402ae80c794d223f8209c25bd640ee0679f2";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             async base ini postgresql-simple random scotty text transformers
             warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BardurArantsson/pg-harness";
           description = "REST service for creating temporary PostgreSQL databases";
           license = stdenv.lib.licenses.agpl3;
         }) {};
      "pg-transact" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, monad-control
         , postgresql-simple, stdenv, transformers
         }:
         mkDerivation {
           pname = "pg-transact";
           version = "0.1.2.0";
           sha256 = "b2e27082c40ab48e046262e9f56c1106384d28475d4f2e605a7b5fc24051f5f5";
           libraryHaskellDepends = [
             base bytestring exceptions monad-control postgresql-simple
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/pg-transact#readme";
           description = "Another postgresql-simple transaction monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pgp-wordlist" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text, vector
         }:
         mkDerivation {
           pname = "pgp-wordlist";
           version = "0.1.0.3";
           sha256 = "ef3b560276981def53abc01cbe3cb4d0bece8eaa8a210ee890729ee500c4e695";
           libraryHaskellDepends = [ base bytestring containers text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/quchen/pgp-wordlist";
           description = "Translate between binary data and a human-readable collection of words";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "phantom-state" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "phantom-state";
           version = "0.2.1.2";
           sha256 = "f978ef98e810e9a9e53f1479340ba7a28f80a64aba431322959cbf8c620c3811";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Phantom State Transformer. Like State Monad, but without values.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pid1" = callPackage
        ({ mkDerivation, base, directory, process, stdenv, unix }:
         mkDerivation {
           pname = "pid1";
           version = "0.1.2.0";
           sha256 = "9e97bf9b4b6ffd6a9b706cc6d5fadd8089cd37d2b8763111bd743104db267f76";
           revision = "1";
           editedCabalFile = "11yg5pjci1d6p5ml0ic4vqn70vjx8vvhqs20rahgfqhh8palkyw9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory process unix ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/pid1#readme";
           description = "Do signal handling and orphan reaping for Unix PID1 init processes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pinboard" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, http-client
         , http-client-tls, http-types, monad-logger, mtl, network
         , profunctors, random, stdenv, text, time, transformers, unliftio
         , unliftio-core, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pinboard";
           version = "0.10.1.4";
           sha256 = "89445a815c3970c909d00c65dc525fe78930b76d4f086dc81597633737ebb3ce";
           libraryHaskellDepends = [
             aeson base bytestring containers http-client http-client-tls
             http-types monad-logger mtl network profunctors random text time
             transformers unliftio unliftio-core unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonschoning/pinboard";
           description = "Access to the Pinboard API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pipes" = callPackage
        ({ mkDerivation, base, exceptions, mmorph, mtl, semigroups, stdenv
         , transformers, void
         }:
         mkDerivation {
           pname = "pipes";
           version = "4.3.13";
           sha256 = "76ba4f2832dae70b5f8d97e16fadd766c097f9bcd96b3a9abec0c5e24aee03b2";
           libraryHaskellDepends = [
             base exceptions mmorph mtl semigroups transformers void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Compositional pipelines";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, pipes
         , pipes-attoparsec, pipes-bytestring, pipes-parse, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "pipes-aeson";
           version = "0.4.1.8";
           sha256 = "350411f492fefa8d5a2554e7521d22b7ee88bacbea9d27c0d22468f6355ebe75";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring pipes pipes-attoparsec
             pipes-bytestring pipes-parse transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-aeson";
           description = "Encode and decode JSON streams using Aeson and Pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, pipes, pipes-parse
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "pipes-attoparsec";
           version = "0.5.1.5";
           sha256 = "fe9eb446289dbc4c4acdde39620877b885417990d9774f622fa9d1daa591cafd";
           libraryHaskellDepends = [
             attoparsec base bytestring pipes pipes-parse text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-attoparsec";
           description = "Attoparsec and Pipes integration";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-binary" = callPackage
        ({ mkDerivation, base, binary, bytestring, ghc-prim, pipes
         , pipes-bytestring, pipes-parse, stdenv, transformers
         }:
         mkDerivation {
           pname = "pipes-binary";
           version = "0.4.2";
           sha256 = "f659d9fd4c816b65abe14a67eb86f7605d15ab5bca5514b25fa6fd82a23064e8";
           libraryHaskellDepends = [
             base binary bytestring ghc-prim pipes pipes-bytestring pipes-parse
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-binary";
           description = "Encode and decode binary streams using the pipes and binary libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, pipes, pipes-group, pipes-parse
         , stdenv, stringsearch, transformers
         }:
         mkDerivation {
           pname = "pipes-bytestring";
           version = "2.1.6";
           sha256 = "b1dc370680f3671759010caace183bce683d0481bd2c0e3f4906b78ac8623c18";
           libraryHaskellDepends = [
             base bytestring pipes pipes-group pipes-parse stringsearch
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "ByteString support for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-category" = callPackage
        ({ mkDerivation, base, lens, mtl, pipes, pipes-extras, stdenv }:
         mkDerivation {
           pname = "pipes-category";
           version = "0.3.0.0";
           sha256 = "4711d889ed2bf7244bbbc292af5746e0378d72a09929aa1e668056e7f0180701";
           libraryHaskellDepends = [ base lens mtl pipes pipes-extras ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/pipes-category#readme";
           description = "Allows instances for Category, Arrow and ArrowChoice for Pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-concurrency" = callPackage
        ({ mkDerivation, async, base, contravariant, pipes, semigroups
         , stdenv, stm, void
         }:
         mkDerivation {
           pname = "pipes-concurrency";
           version = "2.0.12";
           sha256 = "4343c67710e2fcd8987c537389773358150559bf06e86d96b1097c15ae81589d";
           revision = "2";
           editedCabalFile = "1c06nypirrd76jg5y508517smxh3izy98y6kj89k79kbpi5rncbj";
           libraryHaskellDepends = [
             async base contravariant pipes semigroups stm void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Concurrency for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-csv" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, cassava, pipes
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pipes-csv";
           version = "1.4.3";
           sha256 = "9485f5ddd56ec9bb10d26cdf2b5b67754726e36b167652b11cb0a42acbda68b3";
           libraryHaskellDepends = [
             base blaze-builder bytestring cassava pipes unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fast, streaming csv parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pipes-extras" = callPackage
        ({ mkDerivation, base, foldl, lens, pipes, stdenv, transformers }:
         mkDerivation {
           pname = "pipes-extras";
           version = "1.0.15";
           sha256 = "02a9633ac912fd48e9a5ca0e6b48a6e9541ce59d11243096ca6af6b25701cbb3";
           revision = "2";
           editedCabalFile = "1aprq51r83v5qja9vy01s8d17bnncnvp1mw6h6maxgzh2xppim8b";
           libraryHaskellDepends = [ base foldl lens pipes transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Extra utilities for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-fastx" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, pipes
         , pipes-attoparsec, pipes-bytestring, stdenv
         }:
         mkDerivation {
           pname = "pipes-fastx";
           version = "0.3.0.0";
           sha256 = "31264ba760bae1df3170a7d8da32f3e3fcb289545a33f369a94732e55e08ba75";
           libraryHaskellDepends = [
             attoparsec base bytestring pipes pipes-attoparsec pipes-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming parsers for Fasta and Fastq";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-fluid" = callPackage
        ({ mkDerivation, base, constraints, lens, lifted-async
         , monad-control, pipes, semigroups, stdenv, stm, these
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "pipes-fluid";
           version = "0.6.0.1";
           sha256 = "105d8e8df7e731e2d272a22891eb68db1ca3ec9f425b67af77c5d91e3f032f06";
           libraryHaskellDepends = [
             base constraints lens lifted-async monad-control pipes semigroups
             stm these transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/pipes-fluid#readme";
           description = "Reactively combines Producers so that a value is yielded as soon as possible";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-group" = callPackage
        ({ mkDerivation, base, free, pipes, pipes-parse, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "pipes-group";
           version = "1.0.12";
           sha256 = "1373e89fbeb127c31461042cdda848da2048eda2700ddbd872d444af87745ac7";
           revision = "2";
           editedCabalFile = "1y7fh0vc6iknyxizp5hrgkkjzp2hl3ygjyxgsq6b9kh74h2hbbrp";
           libraryHaskellDepends = [
             base free pipes pipes-parse transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Group streams into substreams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-http" = callPackage
        ({ mkDerivation, base, bytestring, http-client, http-client-tls
         , pipes, stdenv
         }:
         mkDerivation {
           pname = "pipes-http";
           version = "1.0.6";
           sha256 = "a231fb08dfac54c1fac7a0c805f1b6c6e60a380021bb5722b508d6b36e4ba700";
           libraryHaskellDepends = [
             base bytestring http-client http-client-tls pipes
           ];
           doHaddock = false;
           doCheck = false;
           description = "HTTP client with pipes interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-misc" = callPackage
        ({ mkDerivation, base, clock, Decimal, lens, mmorph, mtl, pipes
         , pipes-category, pipes-concurrency, semigroups, stdenv, stm
         , transformers
         }:
         mkDerivation {
           pname = "pipes-misc";
           version = "0.5.0.0";
           sha256 = "4e2e7e396ee0c659ae3742388d06b69e3b5146a5563cd3f4ba56f9a1febb8d26";
           libraryHaskellDepends = [
             base clock Decimal lens mmorph mtl pipes pipes-category
             pipes-concurrency semigroups stm transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/pipes-misc#readme";
           description = "Miscellaneous utilities for pipes, required by glazier-tutorial";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-network" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, network
         , network-simple, pipes, pipes-safe, stdenv, transformers
         }:
         mkDerivation {
           pname = "pipes-network";
           version = "0.6.5";
           sha256 = "74a461153a2f650e9e15037002b6d9177b132f409e3204824655ffbb939dc795";
           libraryHaskellDepends = [
             base bytestring exceptions network network-simple pipes pipes-safe
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-network";
           description = "Use network sockets together with the pipes library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-network-tls" = callPackage
        ({ mkDerivation, base, bytestring, network, network-simple
         , network-simple-tls, pipes, pipes-network, pipes-safe, stdenv, tls
         , transformers
         }:
         mkDerivation {
           pname = "pipes-network-tls";
           version = "0.3";
           sha256 = "a2694a6b15d71a8cae898dd8e6a085a4e1ae317c40f2752ceed2b991dfb6bab2";
           libraryHaskellDepends = [
             base bytestring network network-simple network-simple-tls pipes
             pipes-network pipes-safe tls transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-network-tls";
           description = "TLS-secured network connections support for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-parse" = callPackage
        ({ mkDerivation, base, pipes, stdenv, transformers }:
         mkDerivation {
           pname = "pipes-parse";
           version = "3.0.8";
           sha256 = "d28f831b2c8229cca567ee95570787d2dd3f5cfcff3b3c44ee308360a8c107a9";
           libraryHaskellDepends = [ base pipes transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Parsing infrastructure for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-random" = callPackage
        ({ mkDerivation, base, mwc-random, pipes, stdenv, vector }:
         mkDerivation {
           pname = "pipes-random";
           version = "1.0.0.5";
           sha256 = "b3ec59bde4d004db2130097c7d981e3fdaf3c63a0ba7e903da33673d3b034bf7";
           libraryHaskellDepends = [ base mwc-random pipes vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fosskers/pipes-random";
           description = "Producers for handling randomness";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-safe" = callPackage
        ({ mkDerivation, base, containers, exceptions, monad-control, mtl
         , pipes, primitive, stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "pipes-safe";
           version = "2.3.2";
           sha256 = "0c7b58bff49902319d9183f606e2a5a36d46298dcbbefd05b5bc43654571a682";
           libraryHaskellDepends = [
             base containers exceptions monad-control mtl pipes primitive
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Safety for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-wai" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types, pipes
         , stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "pipes-wai";
           version = "3.2.0";
           sha256 = "04a670df140c12b64f6f0d04b3c5571527f144ee429e7030bb62ec8785056d2a";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types pipes transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/iand675/pipes-wai";
           description = "A port of wai-conduit for the pipes ecosystem";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pkcs10" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
         , bytestring, cryptonite, pem, stdenv, x509
         }:
         mkDerivation {
           pname = "pkcs10";
           version = "0.2.0.0";
           sha256 = "896e923f67bac4c7f0e48c9afca60f9ef5178e00fca9f179e8fdae3c12476294";
           libraryHaskellDepends = [
             asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
             x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fcomb/pkcs10-hs#readme";
           description = "PKCS#10 library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "placeholders" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "placeholders";
           version = "0.1";
           sha256 = "652a78553dcaf6e11b4cd8f0e60010b32da299fbe57721df4bf9157e852d0346";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ahammar/placeholders";
           description = "Placeholders for use while developing Haskell code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "planb-token-introspection" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, bytestring, containers
         , http-client, http-client-tls, http-types, mtl, safe-exceptions
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "planb-token-introspection";
           version = "0.1.4.0";
           sha256 = "e7fa0eccf6449c53bc0d682df9dd2cc0beda28230b79f104f8d8ac1574dff265";
           libraryHaskellDepends = [
             aeson aeson-casing base bytestring containers http-client
             http-client-tls http-types mtl safe-exceptions text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/planb-token-introspection#readme";
           description = "Token Introspection for PlanB";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plotlyhs" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , lucid, microlens, microlens-th, stdenv, text, time
         }:
         mkDerivation {
           pname = "plotlyhs";
           version = "0.2.1";
           sha256 = "c95ed42c789d26165183c2cbb4e8a44065478cad0a80053ac8e6fa2a84c7ecb4";
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring lucid microlens
             microlens-th text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/diffusionkinetics/open/plotlyhs";
           description = "Haskell bindings to Plotly.js";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pointed" = callPackage
        ({ mkDerivation, base, comonad, containers, data-default-class
         , hashable, kan-extensions, semigroupoids, semigroups, stdenv, stm
         , tagged, transformers, transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "pointed";
           version = "5.0.1";
           sha256 = "b94635a5c8779238501a9156015422ce2fb4d5efd45d68999e8cbe2ecc5121dd";
           revision = "2";
           editedCabalFile = "00m4f6rgxa3qa72j3jzpg6rrd9k9n4ll2idxlyybil3lxd63r80w";
           libraryHaskellDepends = [
             base comonad containers data-default-class hashable kan-extensions
             semigroupoids semigroups stm tagged transformers
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/pointed/";
           description = "Pointed and copointed data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointedlist" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "pointedlist";
           version = "0.6.1";
           sha256 = "743cb0f89cbb128f8aa24c4519b262b561bf2cd607f83e94f9241e8af1cfba9b";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           description = "A zipper-like comonad which works as a list, tracking a position";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointless-fun" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "pointless-fun";
           version = "1.1.0.6";
           sha256 = "d05c59dac408a81766d676da2fb98025e75e0c3d0a07bdb458759d5c41e3b054";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Some common point-free combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "poll" = callPackage
        ({ mkDerivation, base, enumset, stdenv, utility-ht }:
         mkDerivation {
           pname = "poll";
           version = "0.0.0.1";
           sha256 = "b9fe87fe1b4d3ecb2ad3c1c290e231b0c93d498f0d318f67018a1dde97a0ed29";
           libraryHaskellDepends = [ base enumset utility-ht ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to poll.h";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "poly" = callPackage
        ({ mkDerivation, base, primitive, semirings, stdenv, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "poly";
           version = "0.3.1.0";
           sha256 = "f08aae2433c4811cd06099e9bd34c42828fed3bf3a7dca02e8777ddef1b41db1";
           revision = "1";
           editedCabalFile = "10lcg7x6vzrzgj5libfwnmxj2y3f1j5gpz9l8mgzivapknvhhpfx";
           libraryHaskellDepends = [
             base primitive semirings vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/poly#readme";
           description = "Polynomials";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "poly-arity" = callPackage
        ({ mkDerivation, base, constraints, stdenv }:
         mkDerivation {
           pname = "poly-arity";
           version = "0.1.0";
           sha256 = "cb10a644fe04de8e703942f4bd0d97c4df0f9e3915d33a494994e85830cfdd29";
           libraryHaskellDepends = [ base constraints ];
           doHaddock = false;
           doCheck = false;
           description = "Tools for working with functions of undetermined arity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "polynomials-bernstein" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "polynomials-bernstein";
           version = "1.1.2";
           sha256 = "6950f2e791533a40e7e41ff98679f680f27c7b66258b57871027bf0e5adc7062";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           description = "A solver for systems of polynomial equations in bernstein form";
           license = "GPL";
         }) {};
      "polyparse" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "polyparse";
           version = "1.12.1";
           sha256 = "dd8d34e05853ea0ab9b9fee1cbaa51ae33095f7c0c09ff539dcd6d771e0adaa5";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~malcolm/polyparse/";
           description = "A variety of alternative parser combinator libraries";
           license = "LGPL";
         }) {};
      "polysemy" = callPackage
        ({ mkDerivation, async, base, containers, first-class-families, mtl
         , stdenv, syb, template-haskell, th-abstraction, transformers
         , type-errors, type-errors-pretty, unagi-chan
         }:
         mkDerivation {
           pname = "polysemy";
           version = "1.0.0.0";
           sha256 = "e694ed0adfda26e86bbf720add36982fe659dd44ad69119930deaa5a33dfc3f8";
           libraryHaskellDepends = [
             async base containers first-class-families mtl syb template-haskell
             th-abstraction transformers type-errors type-errors-pretty
             unagi-chan
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isovector/polysemy#readme";
           description = "Higher-order, low-boilerplate, zero-cost free monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "polysemy-plugin" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, containers, ghc
         , ghc-tcplugins-extra, polysemy, stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "polysemy-plugin";
           version = "0.2.4.0";
           sha256 = "af268f108bd3f97dc5dfb8015321a29156f0d3128a8691b32c03296dd6b8f65e";
           revision = "1";
           editedCabalFile = "11d4pzbqqxs8i6h9qgwqamq6q604wsy9r5aba84hmyyklsl16j1p";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base containers ghc ghc-tcplugins-extra polysemy syb transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isovector/polysemy#readme";
           description = "Disambiguate obvious uses of effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "polysemy-zoo" = callPackage
        ({ mkDerivation, async, base, binary, bytestring, constraints
         , containers, ghc-prim, hedis, mtl, polysemy, polysemy-plugin
         , random, reflection, stdenv
         }:
         mkDerivation {
           pname = "polysemy-zoo";
           version = "0.5.0.1";
           sha256 = "7c94bd767c35b519dcbb1c8d433f37e2f0ddb855a8200557b97c291bf1a8ef19";
           libraryHaskellDepends = [
             async base binary bytestring constraints containers ghc-prim hedis
             mtl polysemy polysemy-plugin random reflection
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isovector/polysemy-zoo#readme";
           description = "Experimental, user-contributed effects and interpreters for polysemy";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pooled-io" = callPackage
        ({ mkDerivation, base, concurrent-split, containers, deepseq
         , stdenv, transformers, unsafe, utility-ht
         }:
         mkDerivation {
           pname = "pooled-io";
           version = "0.0.2.2";
           sha256 = "3a5b51356c2c0844ac085d9ad073851d46426a09ffb59bcbfb8e072de4bd1fbd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base concurrent-split containers deepseq transformers unsafe
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/pooled-io/";
           description = "Run jobs on a limited number of threads and support data dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "port-utils" = callPackage
        ({ mkDerivation, base, network, stdenv }:
         mkDerivation {
           pname = "port-utils";
           version = "0.2.1.0";
           sha256 = "b6f830946a9daa829bb14dc7f105f28ae2cfa2ee8540af8550e3c975ac7117de";
           libraryHaskellDepends = [ base network ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/port-utils#readme";
           description = "Utilities for creating and waiting on ports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "posix-paths" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "posix-paths";
           version = "0.2.1.6";
           sha256 = "7239746716761bfc268b60348c5da3c2cf098fe2583f365096a6bef10f637e45";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           description = "POSIX filepath/directory functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "possibly" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "possibly";
           version = "1.0.0.0";
           sha256 = "52cd989873c966faffe60d0fe41a0222cb4dccc50313f9c9ed61a0d09db5ea22";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/enum-text#readme";
           description = "type Possibly a = Either String a";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "post-mess-age" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "post-mess-age";
           version = "0.2.1.0";
           sha256 = "d0f69ab1cb130a9f8bb54cd1f3b0167184af885fedba89ff32fec8e54e95d64c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Send messages to a handle concurrently without getting them mixed";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-binary" = callPackage
        ({ mkDerivation, aeson, base, base-prelude, binary-parser
         , bytestring, bytestring-strict-builder, containers, loch-th
         , network-ip, placeholders, scientific, stdenv, text, time
         , transformers, unordered-containers, uuid, vector
         }:
         mkDerivation {
           pname = "postgresql-binary";
           version = "0.12.2";
           sha256 = "68af247669bdb9303e40d4efd5f8a57f3f6e328050f665df0f3790f010e570fe";
           libraryHaskellDepends = [
             aeson base base-prelude binary-parser bytestring
             bytestring-strict-builder containers loch-th network-ip
             placeholders scientific text time transformers unordered-containers
             uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/postgresql-binary";
           description = "Encoders and decoders for the PostgreSQL's binary format";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-libpq" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, postgresql, stdenv, unix
         }:
         mkDerivation {
           pname = "postgresql-libpq";
           version = "0.9.4.2";
           sha256 = "cea053c79ef1505c30518db7b9fb2ee68c9e2915d48b22f01f8eb9a9b49f06f9";
           revision = "2";
           editedCabalFile = "1i0z3c0d657050kfggr5z8y4hmcqkckm2x1gn3fjbdzyx3p1rcaa";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring unix ];
           librarySystemDepends = [ postgresql ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/postgresql-libpq";
           description = "low-level binding to libpq";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) postgresql;};
      "postgresql-orm" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , bytestring-builder, directory, filepath, ghc-prim
         , haskell-src-exts, mtl, old-locale, postgresql-simple, process
         , stdenv, temporary, text, time, transformers, unix
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "postgresql-orm";
           version = "0.5.1";
           sha256 = "a3507e5ccdb8712dbd8c228b706ce6303f4c0794d4d48fd8a683f4ce7cd10a3b";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring bytestring-builder directory
             filepath ghc-prim haskell-src-exts mtl old-locale postgresql-simple
             process temporary text time transformers unix unordered-containers
             vector
           ];
           executableHaskellDepends = [ base filepath ];
           doHaddock = false;
           doCheck = false;
           description = "An ORM (Object Relational Mapping) and migrations DSL for PostgreSQL";
           license = "GPL";
         }) {};
      "postgresql-schema" = callPackage
        ({ mkDerivation, base, basic-prelude, optparse-applicative
         , postgresql-simple, shelly, stdenv, text, time
         }:
         mkDerivation {
           pname = "postgresql-schema";
           version = "0.1.14";
           sha256 = "73decc70c9fc349d0162c253eb0e92a1add5964c28ef89abfe30e97f1184d572";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base basic-prelude postgresql-simple shelly text
           ];
           executableHaskellDepends = [
             base basic-prelude optparse-applicative shelly text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mfine/postgresql-schema";
           description = "PostgreSQL Schema Management";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring
         , bytestring-builder, case-insensitive, containers, hashable, Only
         , postgresql-libpq, scientific, stdenv, template-haskell, text
         , time, transformers, uuid-types, vector
         }:
         mkDerivation {
           pname = "postgresql-simple";
           version = "0.6.2";
           sha256 = "fbfaf2b326d5d43798f60b25862a9ac5006c0074fe295ba523fb55443a75f396";
           revision = "3";
           editedCabalFile = "0wngpd4187sfz2jhpnnrycfvpd1irz2m798p515mn1ryg1ywmhbr";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring bytestring-builder
             case-insensitive containers hashable Only postgresql-libpq
             scientific template-haskell text time transformers uuid-types
             vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Mid-Level PostgreSQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple-migration" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cryptohash
         , directory, postgresql-simple, stdenv, text, time
         }:
         mkDerivation {
           pname = "postgresql-simple-migration";
           version = "0.1.15.0";
           sha256 = "6d37425a805c6268f323e63d091020622d17b88b37c8963da0b7d26ea787d648";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base64-bytestring bytestring cryptohash directory
             postgresql-simple time
           ];
           executableHaskellDepends = [
             base base64-bytestring bytestring cryptohash directory
             postgresql-simple text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ameingast/postgresql-simple-migration";
           description = "PostgreSQL Schema Migrations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple-queue" = callPackage
        ({ mkDerivation, aeson, base, bytestring, exceptions, monad-control
         , pg-transact, postgresql-simple, random, stdenv, stm, text, time
         , transformers
         }:
         mkDerivation {
           pname = "postgresql-simple-queue";
           version = "1.0.1";
           sha256 = "330b69c54e075104171758117e714b7da6c740dff8ca09fbe33bd3ab854e5a3f";
           libraryHaskellDepends = [
             aeson base bytestring exceptions monad-control pg-transact
             postgresql-simple random stm text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/postgresql-queue#readme";
           description = "A PostgreSQL backed queue";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple-url" = callPackage
        ({ mkDerivation, base, network-uri, postgresql-simple, split
         , stdenv
         }:
         mkDerivation {
           pname = "postgresql-simple-url";
           version = "0.2.1.0";
           sha256 = "1307f57cde2bd7f6d795a860deab53d3d64043f51af31e3114dee516ef7ee9c9";
           revision = "3";
           editedCabalFile = "02l1g5jiw6idnnax7q2lzayjycgi029pv41njdmwdch57k59vai5";
           libraryHaskellDepends = [
             base network-uri postgresql-simple split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/postgresql-simple-url";
           description = "Parse postgres:// url into ConnectInfo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-transactional" = callPackage
        ({ mkDerivation, base, monad-control, mtl, postgresql-simple
         , stdenv
         }:
         mkDerivation {
           pname = "postgresql-transactional";
           version = "1.1.1";
           sha256 = "f9302a1e134b31f2e9bd243c4fe36a25b3a9a9d6984288be1bc9c29882545ed3";
           libraryHaskellDepends = [
             base monad-control mtl postgresql-simple
           ];
           doHaddock = false;
           doCheck = false;
           description = "a transactional monad on top of postgresql-simple";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-typed" = callPackage
        ({ mkDerivation, aeson, array, attoparsec, base, binary, bytestring
         , containers, cryptonite, data-default, haskell-src-meta, HDBC
         , memory, network, old-locale, postgresql-binary, scientific
         , stdenv, template-haskell, text, time, tls, utf8-string, uuid
         , x509, x509-store, x509-validation
         }:
         mkDerivation {
           pname = "postgresql-typed";
           version = "0.6.1.0";
           sha256 = "2903e69baed64f5d6b1f43e54e9e016f70b1689da8a99f9a49f182251767ebdc";
           libraryHaskellDepends = [
             aeson array attoparsec base binary bytestring containers cryptonite
             data-default haskell-src-meta HDBC memory network old-locale
             postgresql-binary scientific template-haskell text time tls
             utf8-string uuid x509 x509-store x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dylex/postgresql-typed";
           description = "PostgreSQL interface with compile-time SQL type checking, optional HDBC backend";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pptable" = callPackage
        ({ mkDerivation, base, boxes, containers, generic-deriving, pretty
         , stdenv, syb, vector
         }:
         mkDerivation {
           pname = "pptable";
           version = "0.3.0.0";
           sha256 = "98b7ff404eceaad834b16187af44db37324d3bfaa631347794bb0f28a6dd9317";
           revision = "1";
           editedCabalFile = "0c1srvgwyczbfnw3zw5pbsjqgxifq9yb1h60w3aq91q7iamrvdgb";
           libraryHaskellDepends = [
             base boxes containers generic-deriving pretty syb vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gdevanla/pptable#readme";
           description = "Pretty Print containers in a tabular format";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pqueue" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "pqueue";
           version = "1.4.1.2";
           sha256 = "d2aaacbe069a5dac61cee677c68eb34d74afa09c59d90d43e2fa07a6c5869fec";
           revision = "1";
           editedCabalFile = "1la186z2np3nv06p0485xwg342gyjp7a2ikg73qs7mbg086352zs";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Reliable, persistent, fast priority queues";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prefix-units" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prefix-units";
           version = "0.2.0";
           sha256 = "050abdf827a5bd014a2628b195fbd59bb226020612c99e86a082ac1c8274e384";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iustin/prefix-units";
           description = "A basic library for SI/binary prefix units";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prelude-compat" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prelude-compat";
           version = "0.0.0.2";
           sha256 = "c1250f8e9a9f134f89292a31067958dc7eec2871abc1e7631a0bf3324b0360d7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Provide Prelude and Data.List with fixed content across GHC versions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prelude-safeenum" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prelude-safeenum";
           version = "0.1.1.2";
           sha256 = "d4f9f195d31198fa1a5e1edfb50684971cc5dc2695bf38c1e7e2dabdce329727";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "A redefinition of the Prelude's Enum class in order to render it safe";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "present" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "present";
           version = "4.1.0";
           sha256 = "bae8b334817a31572cc0e771f40e89b976e72b2b55d0955e4e198502dd8a427b";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/present";
           description = "Make presentations for data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-class" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "pretty-class";
           version = "1.0.1.1";
           sha256 = "558d1b506ff58afb0a5fb9d85ea93a94687cc1aabcc5a112a6ee4375a7b8aee1";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddssff/pretty-class";
           description = "Pretty printing class similar to Show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-hex" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "pretty-hex";
           version = "1.0";
           sha256 = "ff9a5f2023d6a4454f06cc395726b4cac3f9d0ea03759b14ccf7d62df79e9c7a";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A library for hex dumps of ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-show" = callPackage
        ({ mkDerivation, array, base, filepath, ghc-prim, happy
         , haskell-lexer, pretty, stdenv, text
         }:
         mkDerivation {
           pname = "pretty-show";
           version = "1.9.5";
           sha256 = "b095bebb79951d2e25a543a591844fb638165672d7b95d325844611297ba423f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base filepath ghc-prim haskell-lexer pretty text
           ];
           libraryToolDepends = [ happy ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.github.com/yav/pretty-show";
           description = "Tools for working with derived `Show` instances and generic inspection of values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pretty-simple" = callPackage
        ({ mkDerivation, ansi-terminal, base, mtl, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "pretty-simple";
           version = "2.2.0.1";
           sha256 = "18ab80e80593063b11aa85c117e12253ec5dc438b1d342822ea1c25886485173";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/pretty-simple";
           description = "pretty printer for data types with a 'Show' instance";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-sop" = callPackage
        ({ mkDerivation, base, generics-sop, pretty-show, stdenv }:
         mkDerivation {
           pname = "pretty-sop";
           version = "0.2.0.3";
           sha256 = "bedb878698d798f4d4367fd2fd8f6c3a69cb33e41c17364274233f3c175f7e83";
           revision = "1";
           editedCabalFile = "04gr1aaqaq347rv5vqh93qcnbc53y55hrds73js5329z2j1gbmng";
           libraryHaskellDepends = [ base generics-sop pretty-show ];
           doHaddock = false;
           doCheck = false;
           description = "A generic pretty-printer using generics-sop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-types" = callPackage
        ({ mkDerivation, base, mtl, stdenv, tagged }:
         mkDerivation {
           pname = "pretty-types";
           version = "0.3.0.1";
           sha256 = "fb6580d80155c78ba7734b36e8bff2f0a39d287f1ba8efcfd93cc5f6c7f4b319";
           libraryHaskellDepends = [ base mtl tagged ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/pretty-types#readme";
           description = "A small pretty printing DSL for complex types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prettyclass" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "prettyclass";
           version = "1.0.0.0";
           sha256 = "e537446e7a346e5e0872ed8281db2bb0220c737f10757848c901da1399548986";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty printing class similar to Show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prettyprinter" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "prettyprinter";
           version = "1.2.1.1";
           sha256 = "3bb48405422b56db2ee6a8557d29d38f1fd7ca23c2b0ee3f60442d580a1e2cdd";
           revision = "1";
           editedCabalFile = "0p3qvc1fr2ayxq5s7ysm80nl6107xfkv27p3mcripffq1lqvmlma";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "A modern, easy to use, well-documented, extensible pretty-printer";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-ansi-terminal" = callPackage
        ({ mkDerivation, ansi-terminal, base, prettyprinter, stdenv, text
         }:
         mkDerivation {
           pname = "prettyprinter-ansi-terminal";
           version = "1.1.1.2";
           sha256 = "d3e0b420df2904ae1ef23daf9bbb6de2c1fbbee056b779fc2cebe303cedf4641";
           libraryHaskellDepends = [ ansi-terminal base prettyprinter text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "ANSI terminal backend for the »prettyprinter« package";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-compat-annotated-wl-pprint" = callPackage
        ({ mkDerivation, base, prettyprinter, stdenv, text }:
         mkDerivation {
           pname = "prettyprinter-compat-annotated-wl-pprint";
           version = "1";
           sha256 = "2c259bac999d75b071a077f218a433c070783e9f40b67796e31a776fefbaf57e";
           revision = "3";
           editedCabalFile = "0vzi7id60pfj35xp61akzvfx9x6py45r5b8343i48ljpir91rvgw";
           libraryHaskellDepends = [ base prettyprinter text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "Prettyprinter compatibility module for previous users of the annotated-wl-pprint package";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-compat-ansi-wl-pprint" = callPackage
        ({ mkDerivation, base, prettyprinter, prettyprinter-ansi-terminal
         , stdenv, text
         }:
         mkDerivation {
           pname = "prettyprinter-compat-ansi-wl-pprint";
           version = "1.0.1";
           sha256 = "012d6bb711da25cc38260f4d00d26c24e52547a0ca53b0f6459fd06e5b93f73f";
           revision = "1";
           editedCabalFile = "0rzvap56ygygzs95091ipmcdc7n76sczc2dk88g4nr7zskb2nf1k";
           libraryHaskellDepends = [
             base prettyprinter prettyprinter-ansi-terminal text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "Drop-in compatibility package to migrate from »ansi-wl-pprint« to »prettyprinter«";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-compat-wl-pprint" = callPackage
        ({ mkDerivation, base, prettyprinter, stdenv, text }:
         mkDerivation {
           pname = "prettyprinter-compat-wl-pprint";
           version = "1.0.0.1";
           sha256 = "75221f5064e69eead5807a62894e8b5aa768f979c7f8fb75d0e1b2a15345529e";
           revision = "3";
           editedCabalFile = "0cb1i1hmr6wl8lacy3w822h273lapqhp537snxgbmhf9xvfckbpr";
           libraryHaskellDepends = [ base prettyprinter text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "Prettyprinter compatibility module for previous users of the wl-pprint package";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-convert-ansi-wl-pprint" = callPackage
        ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, prettyprinter
         , prettyprinter-ansi-terminal, stdenv, text
         }:
         mkDerivation {
           pname = "prettyprinter-convert-ansi-wl-pprint";
           version = "1.1";
           sha256 = "b8982d38776249d3d29a4ede426a27a02f7cbb6843722b5ec8ede18d032fa60c";
           revision = "1";
           editedCabalFile = "1c4zcscmvq0vbdgnp7n0avv8si5jshl4kw2qd1lqmhr28kj8x45f";
           libraryHaskellDepends = [
             ansi-terminal ansi-wl-pprint base prettyprinter
             prettyprinter-ansi-terminal text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "Converter from »ansi-wl-pprint« documents to »prettyprinter«-based ones";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prim-uniq" = callPackage
        ({ mkDerivation, base, dependent-sum, primitive, stdenv }:
         mkDerivation {
           pname = "prim-uniq";
           version = "0.1.0.1";
           sha256 = "fb059785133fe5ecaa57c6c840192f252c4c5a1a598160d5704ac2a83e895aff";
           libraryHaskellDepends = [ base dependent-sum primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/prim-uniq";
           description = "Opaque unique identifiers in primitive state monads";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "primes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "primes";
           version = "0.2.1.0";
           sha256 = "74d66558fb638ea4d31eae2fe1a294cb5a9d64491314305d74a11d93f277c65b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sebfisch/primes";
           description = "Efficient, purely functional generation of prime numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "primitive" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, transformers }:
         mkDerivation {
           pname = "primitive";
           version = "0.6.4.0";
           sha256 = "4cbeaf7924dd79221f327ea101a29bf35c4976dc3319df157ff46ea68e6a0c64";
           revision = "1";
           editedCabalFile = "18a14k1yiam1m4l29rin9a0y53yp3nxvkz358nysld8aqwy2qsjv";
           libraryHaskellDepends = [ base ghc-prim transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/primitive";
           description = "Primitive memory-related operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "primitive-extras" = callPackage
        ({ mkDerivation, base, bytestring, cereal, deferred-folds, focus
         , foldl, list-t, primitive, profunctors, stdenv, vector
         }:
         mkDerivation {
           pname = "primitive-extras";
           version = "0.7.1.1";
           sha256 = "b57dd914bbe8f1ab6a4bb7d7eaa965d44dee6f0d4b9281bea0b5ebdcf07ecec1";
           revision = "1";
           editedCabalFile = "10z7fnz907s7ar15lk3kq62p11bbsksdb0nmg5y7ii0n97mqni96";
           libraryHaskellDepends = [
             base bytestring cereal deferred-folds focus foldl list-t primitive
             profunctors vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/metrix-ai/primitive-extras";
           description = "Extras for the \"primitive\" library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "probability" = callPackage
        ({ mkDerivation, base, containers, random, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "probability";
           version = "0.2.6";
           sha256 = "5fa7a5a9ccebea6f7a55abed5c488a0a56e84b69aa9c35d75d1ba625937d1f8b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers random transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Probabilistic_Functional_Programming";
           description = "Probabilistic Functional Programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "process-extras" = callPackage
        ({ mkDerivation, base, bytestring, data-default, deepseq
         , generic-deriving, ListLike, mtl, process, stdenv, text
         }:
         mkDerivation {
           pname = "process-extras";
           version = "0.7.4";
           sha256 = "293e75f849254ce0ce0d7fa659681917e07a557c602505a2f9e20777467e984e";
           libraryHaskellDepends = [
             base bytestring data-default deepseq generic-deriving ListLike mtl
             process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/process-extras";
           description = "Process extras";
           license = stdenv.lib.licenses.mit;
         }) {};
      "product-isomorphic" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, th-data-compat }:
         mkDerivation {
           pname = "product-isomorphic";
           version = "0.0.3.3";
           sha256 = "1ef93a2cacbaf1fb2ae713f2d0d869593d4a5b8605eff38108877cbbfb51c1bb";
           libraryHaskellDepends = [ base template-haskell th-data-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/khibino/haskell-product-isomorphic";
           description = "Weaken applicative functor on products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "product-profunctors" = callPackage
        ({ mkDerivation, base, bifunctors, contravariant, profunctors
         , stdenv, tagged, template-haskell
         }:
         mkDerivation {
           pname = "product-profunctors";
           version = "0.10.0.0";
           sha256 = "ad8d7687c2eee4bcd2f3925a74f53d743c9f678b80be2a523221039004d51a68";
           revision = "4";
           editedCabalFile = "0vf9w949qfi6p1nqr0cxb9shxdz15mmrd8r0w4gxid56fjc2kaia";
           libraryHaskellDepends = [
             base bifunctors contravariant profunctors tagged template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tomjaguarpaw/product-profunctors";
           description = "product-profunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profiterole" = callPackage
        ({ mkDerivation, base, containers, directory, extra, filepath
         , ghc-prof, hashable, scientific, stdenv, text
         }:
         mkDerivation {
           pname = "profiterole";
           version = "0.1";
           sha256 = "c688d8c4f04e7a674832b39add365cee8eb99ae83643a849529e2ec56a46d2f1";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers directory extra filepath ghc-prof hashable
             scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/profiterole#readme";
           description = "Restructure GHC profile reports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profunctors" = callPackage
        ({ mkDerivation, base, base-orphans, bifunctors, comonad
         , contravariant, distributive, semigroups, stdenv, tagged
         , transformers
         }:
         mkDerivation {
           pname = "profunctors";
           version = "5.3";
           sha256 = "74632acc5bb76e04ade95e187be432b607da0e863c0e08f3cabafb23d8b4a3b7";
           revision = "1";
           editedCabalFile = "1ynskm55fynsli6lpz6v5py344yhf1mq5xz2b1p7arvf2xqrx4kv";
           libraryHaskellDepends = [
             base base-orphans bifunctors comonad contravariant distributive
             semigroups tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/profunctors/";
           description = "Profunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "project-template" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, conduit
         , conduit-extra, containers, directory, filepath, mtl, resourcet
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "project-template";
           version = "0.2.0.1";
           sha256 = "eb52496fa7448f5fed445525c05327b31a45282fc1d0a772c7022a9809e7c9dc";
           revision = "1";
           editedCabalFile = "0lq3sqnq0nr0gbvgzp0lqdl3j3mqdmdlf8xsw0j3pjh581xj3k0a";
           libraryHaskellDepends = [
             base base64-bytestring bytestring conduit conduit-extra containers
             directory filepath mtl resourcet text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-ide";
           description = "Specify Haskell project templates and generate files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "projectroot" = callPackage
        ({ mkDerivation, base, directory, stdenv }:
         mkDerivation {
           pname = "projectroot";
           version = "0.2.0.1";
           sha256 = "53753086543ed199cf6f0d76852660f5d74c0874bfdee21c0f4e0d845b7e1ab8";
           libraryHaskellDepends = [ base directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-projectroot";
           description = "Bindings to the projectroot C logic";
           license = stdenv.lib.licenses.mit;
         }) {};
      "prometheus-client" = callPackage
        ({ mkDerivation, atomic-primops, base, bytestring, clock
         , containers, deepseq, exceptions, mtl, stdenv, stm, text
         , transformers, transformers-compat, utf8-string
         }:
         mkDerivation {
           pname = "prometheus-client";
           version = "1.0.0";
           sha256 = "279e415720adb45a0ca67af18029c7b9e2ea0a34ec79b7278ed8e20e135b3344";
           libraryHaskellDepends = [
             atomic-primops base bytestring clock containers deepseq exceptions
             mtl stm text transformers transformers-compat utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/prometheus-haskell";
           description = "Haskell client library for http://prometheus.io.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "promises" = callPackage
        ({ mkDerivation, base, primitive, stdenv }:
         mkDerivation {
           pname = "promises";
           version = "0.3";
           sha256 = "bf7c901915c122e7ab270f4c90cf02e83a703bf78f246948dc2452dcd294f260";
           libraryHaskellDepends = [ base primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/promises/";
           description = "Lazy demand-driven promises";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prompt" = callPackage
        ({ mkDerivation, base, base-compat, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "prompt";
           version = "0.1.1.2";
           sha256 = "67b5711ef4c650747645b6d9de16a8bb04e04d1c2e4d39e3a8d4099873a151f2";
           libraryHaskellDepends = [
             base base-compat mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/prompt";
           description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "prospect" = callPackage
        ({ mkDerivation, base, deepseq, free, kan-extensions, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "prospect";
           version = "0.1.0.0";
           sha256 = "6ffae759fb5d81786342686c5544601a6bbaa74a7ca7f7c1a3ab4ebbc7846de7";
           libraryHaskellDepends = [
             base deepseq free kan-extensions mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isovector/prospect#readme";
           description = "Explore continuations with trepidation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, ghc-prim
         , lens-family, parsec, pretty, primitive, profunctors, stdenv
         , tagged, text, transformers, vector, void
         }:
         mkDerivation {
           pname = "proto-lens";
           version = "0.5.1.0";
           sha256 = "c1afae9c8471d71786568498c2b97a4f7684d75d0e60afd33178ecab934468cb";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers deepseq ghc-prim lens-family parsec
             pretty primitive profunctors tagged text transformers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens#readme";
           description = "A lens-based implementation of protocol buffers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-arbitrary" = callPackage
        ({ mkDerivation, base, bytestring, containers, lens-family
         , proto-lens, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "proto-lens-arbitrary";
           version = "0.1.2.8";
           sha256 = "8300c8281395b0a60f77073c0477822d5a008a18c2d5c15e29645bd92817ba4a";
           libraryHaskellDepends = [
             base bytestring containers lens-family proto-lens QuickCheck text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens#readme";
           description = "Arbitrary instances for proto-lens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-optparse" = callPackage
        ({ mkDerivation, base, optparse-applicative, proto-lens, stdenv
         , text
         }:
         mkDerivation {
           pname = "proto-lens-optparse";
           version = "0.1.1.6";
           sha256 = "980c8bcd9b19a7cd4824be422bf3054e69caa91acd1d1adef08b2d5cfacfbb80";
           libraryHaskellDepends = [
             base optparse-applicative proto-lens text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens#readme";
           description = "Adapting proto-lens to optparse-applicative ReadMs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-protobuf-types" = callPackage
        ({ mkDerivation, base, Cabal, lens-family, proto-lens
         , proto-lens-runtime, proto-lens-setup, protobuf, stdenv, text
         }:
         mkDerivation {
           pname = "proto-lens-protobuf-types";
           version = "0.5.0.0";
           sha256 = "20e507d724e01f85aca77655aa89a07f96ab8fde3bc3d38381179e65787867c8";
           setupHaskellDepends = [ base Cabal proto-lens-setup ];
           libraryHaskellDepends = [
             base lens-family proto-lens proto-lens-runtime text
           ];
           libraryToolDepends = [ protobuf ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens#readme";
           description = "Basic protocol buffer message types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-protoc" = callPackage
        ({ mkDerivation, base, bytestring, containers, filepath
         , haskell-src-exts, lens-family, pretty, proto-lens, protobuf
         , stdenv, text
         }:
         mkDerivation {
           pname = "proto-lens-protoc";
           version = "0.5.0.0";
           sha256 = "161dcee2aed780f62c01522c86afce61721cf89c0143f157efefb1bd1fa1d164";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers filepath haskell-src-exts lens-family pretty
             proto-lens text
           ];
           libraryToolDepends = [ protobuf ];
           executableHaskellDepends = [
             base bytestring containers lens-family proto-lens text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens#readme";
           description = "Protocol buffer compiler for the proto-lens library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-runtime" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, filepath
         , lens-family, proto-lens, stdenv, text, vector
         }:
         mkDerivation {
           pname = "proto-lens-runtime";
           version = "0.5.0.0";
           sha256 = "ecc1f4f2488e92ccc293f18faf84d1aa6f1e10a88196d0a61549da1c3383a141";
           libraryHaskellDepends = [
             base bytestring containers deepseq filepath lens-family proto-lens
             text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens#readme";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-setup" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, deepseq
         , directory, filepath, process, proto-lens-protoc, stdenv
         , temporary, text
         }:
         mkDerivation {
           pname = "proto-lens-setup";
           version = "0.4.0.2";
           sha256 = "1bc500c0a032da878833ae46964b635b4b5d7f0a1e6c5f8577bea6d7fe9c14ff";
           libraryHaskellDepends = [
             base bytestring Cabal containers deepseq directory filepath process
             proto-lens-protoc temporary text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens#readme";
           description = "Cabal support for codegen with proto-lens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protobuf" = callPackage
        ({ mkDerivation, base, base-orphans, bytestring, cereal
         , data-binary-ieee754, deepseq, mtl, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "protobuf";
           version = "0.2.1.2";
           sha256 = "b3c871918a665f0543fde247ab8af61c4fc451103140d34bf652c0d5fc4d17de";
           libraryHaskellDepends = [
             base base-orphans bytestring cereal data-binary-ieee754 deepseq mtl
             text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alphaHeavy/protobuf";
           description = "Google Protocol Buffers via GHC.Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protobuf-simple" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-binary-ieee754, directory, filepath, mtl, parsec, split
         , stdenv, text
         }:
         mkDerivation {
           pname = "protobuf-simple";
           version = "0.1.1.0";
           sha256 = "9029d395f099aa7ce510a9e0eb0b2c21e5b4ecaa2b242d5a1753de6b93abcdc4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers data-binary-ieee754 mtl text
           ];
           executableHaskellDepends = [
             base containers directory filepath mtl parsec split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sru-systems/protobuf-simple";
           description = "Simple Protocol Buffers library (proto2)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "protocol-buffers" = callPackage
        ({ mkDerivation, aeson, array, base, base16-bytestring, binary
         , bytestring, containers, directory, filepath, mtl, parsec, stdenv
         , syb, text, utf8-string, vector
         }:
         mkDerivation {
           pname = "protocol-buffers";
           version = "2.4.13";
           sha256 = "4c37f7c7f440703d3a9ec267b606b536fb4fe035e860223419cd123897588e77";
           libraryHaskellDepends = [
             aeson array base base16-bytestring binary bytestring containers
             directory filepath mtl parsec syb text utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Parse Google Protocol Buffer specifications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protocol-buffers-descriptor" = callPackage
        ({ mkDerivation, base, bytestring, containers, protocol-buffers
         , stdenv
         }:
         mkDerivation {
           pname = "protocol-buffers-descriptor";
           version = "2.4.13";
           sha256 = "d7914ed492d107981c71bb069626d751ab0804c0518054a800f94c2ab58f6ab0";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers protocol-buffers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protocol-radius" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, cryptonite
         , dlist, memory, stdenv, template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "protocol-radius";
           version = "0.0.1.1";
           sha256 = "49982332f18246c9f46dc8f9500dcbd92a445d17124b4acd084568c14ac6a131";
           libraryHaskellDepends = [
             base bytestring cereal containers cryptonite dlist memory
             template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "parser and printer for radius protocol packet";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protocol-radius-test" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers
         , protocol-radius, QuickCheck, quickcheck-simple, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "protocol-radius-test";
           version = "0.1.0.1";
           sha256 = "f51eb0bc2921036cc924b1e0ae42f8fb2488907c80b7bcff35461db913b1d792";
           libraryHaskellDepends = [
             base bytestring cereal containers protocol-radius QuickCheck
             quickcheck-simple transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "testsuit of protocol-radius haskell package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protolude" = callPackage
        ({ mkDerivation, array, async, base, bytestring, containers
         , deepseq, ghc-prim, hashable, mtl, mtl-compat, stdenv, stm, text
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "protolude";
           version = "0.2.3";
           sha256 = "d23d39b5088f1656649c8e42fc86a20e48799d38f79d162fb38bd50d7ef7f37f";
           libraryHaskellDepends = [
             array async base bytestring containers deepseq ghc-prim hashable
             mtl mtl-compat stm text transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdiehl/protolude";
           description = "A small prelude";
           license = stdenv.lib.licenses.mit;
         }) {};
      "proxied" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "proxied";
           version = "0.3.1";
           sha256 = "996894e00af70c715a208a09824a38c001963762f3715cecec8ac4f2fef6ac51";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/proxied";
           description = "Make functions consume Proxy instead of undefined";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "psql-helpers" = callPackage
        ({ mkDerivation, base, postgresql-simple, stdenv }:
         mkDerivation {
           pname = "psql-helpers";
           version = "0.1.0.0";
           sha256 = "f13ca642072477d3ab0246c514e3fc78e0c5cb419345240fbad994ed2a3219f4";
           libraryHaskellDepends = [ base postgresql-simple ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/psql-helpers#readme";
           description = "A small collection of helper functions to generate postgresql queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "psqueues" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "psqueues";
           version = "0.2.7.2";
           sha256 = "26263b555d943f9b18bbebda6a090848fdba3c1b403a9b7c848f6bac99e893f9";
           revision = "1";
           editedCabalFile = "0d0mm3c8x31dasfzp1884r2irkm3c9irvvbahjzfr1bzzxfb7vyv";
           libraryHaskellDepends = [ base deepseq ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           description = "Pure priority search queues";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pure-zlib" = callPackage
        ({ mkDerivation, array, base, base-compat, bytestring
         , bytestring-builder, containers, fingertree, stdenv
         }:
         mkDerivation {
           pname = "pure-zlib";
           version = "0.6.7";
           sha256 = "167a28f55135b179ef2e4eb94b1415b6440e37646a6e1f3bc4f891343f42b2b5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base base-compat bytestring bytestring-builder containers
             fingertree
           ];
           executableHaskellDepends = [ base base-compat bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/GaloisInc/pure-zlib";
           description = "A Haskell-only implementation of zlib / DEFLATE";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pureMD5" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, crypto-api
         , stdenv, tagged
         }:
         mkDerivation {
           pname = "pureMD5";
           version = "2.1.3";
           sha256 = "bef3358a5e3a45b649860a5792f052e2f927c0492a7056cf64425116c8a7b17d";
           libraryHaskellDepends = [
             base binary bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "purescript-bridge" = callPackage
        ({ mkDerivation, base, containers, directory, filepath
         , generic-deriving, lens, mtl, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "purescript-bridge";
           version = "0.13.0.0";
           sha256 = "2b1a6bbc0e1c155b20bb02356821185c7661d15cc8042ddfe12725eef2065149";
           libraryHaskellDepends = [
             base containers directory filepath generic-deriving lens mtl text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generate PureScript data types from Haskell data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pushbullet-types" = callPackage
        ({ mkDerivation, aeson, base, http-api-data, microlens
         , microlens-th, scientific, stdenv, text, time
         , unordered-containers
         }:
         mkDerivation {
           pname = "pushbullet-types";
           version = "0.4.1.0";
           sha256 = "6461a2cf5ff0b74f7caaf295ca7601922e9527f5bc9f37e3fbc6325026b5c85b";
           libraryHaskellDepends = [
             aeson base http-api-data microlens microlens-th scientific text
             time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Datatypes used by the Pushbullet APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pusher-http-haskell" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , cryptonite, hashable, http-client, http-types, memory, stdenv
         , text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pusher-http-haskell";
           version = "1.5.1.11";
           sha256 = "588f74023b0e4cbbaa23284ad133e055debfa8c2deecfd7e50f31d4a89e1260b";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring cryptonite hashable
             http-client http-types memory text time transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/WillSewell/pusher-http-haskell";
           description = "Haskell client library for the Pusher HTTP API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "qchas" = callPackage
        ({ mkDerivation, base, hmatrix, linear, random, stdenv }:
         mkDerivation {
           pname = "qchas";
           version = "1.1.0.1";
           sha256 = "a9f340d1a6d4f5f24f713b1105e4ec8bba0c24609dcef3fd95f104594232263d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base hmatrix linear random ];
           executableHaskellDepends = [ base hmatrix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ardeleanasm/qchas#readme";
           description = "A library for implementing Quantum Algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "qm-interpolated-string" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-meta, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "qm-interpolated-string";
           version = "0.3.0.0";
           sha256 = "e86b337d1531e75d448f7ab9101f8703b19fa5bc3a94c7ea5c26accd31d12baf";
           libraryHaskellDepends = [
             base bytestring haskell-src-meta template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/unclechu/haskell-qm-interpolated-string";
           description = "Implementation of interpolated multiline strings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "qnap-decrypt" = callPackage
        ({ mkDerivation, base, binary, bytestring, cipher-aes128, conduit
         , conduit-extra, crypto-api, directory, filepath
         , optparse-applicative, stdenv, streaming-commons, tagged
         , utf8-string
         }:
         mkDerivation {
           pname = "qnap-decrypt";
           version = "0.3.5";
           sha256 = "ab1b8005e5cb267101f57e0bc842fae50feab38fed1faa7e80967d29ea42a0d6";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bytestring cipher-aes128 conduit conduit-extra
             crypto-api directory streaming-commons tagged utf8-string
           ];
           executableHaskellDepends = [
             base binary bytestring cipher-aes128 conduit conduit-extra
             crypto-api directory filepath optparse-applicative
             streaming-commons tagged utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alexkazik/qnap-decrypt#readme";
           description = "Decrypt files encrypted by QNAP's Hybrid Backup Sync";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "qrcode-core" = callPackage
        ({ mkDerivation, base, binary, bytestring, case-insensitive
         , containers, dlist, primitive, stdenv, text, vector
         }:
         mkDerivation {
           pname = "qrcode-core";
           version = "0.9.2";
           sha256 = "fe56ac16900741260e3074b6957c89e3e3cd49bbfbcd83d338150e5b8c0a429d";
           libraryHaskellDepends = [
             base binary bytestring case-insensitive containers dlist primitive
             text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alexkazik/qrcode#readme";
           description = "QR code library in pure Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "qrcode-juicypixels" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, JuicyPixels
         , qrcode-core, stdenv, text, vector
         }:
         mkDerivation {
           pname = "qrcode-juicypixels";
           version = "0.8.0";
           sha256 = "930f73206ef1e6c43caebd31f2df0c086b52458d056a148bbe42c0e91f729291";
           libraryHaskellDepends = [
             base base64-bytestring bytestring JuicyPixels qrcode-core text
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alexkazik/qrcode#readme";
           description = "Converts a qrcode-core image to JuicyPixels";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quadratic-irrational" = callPackage
        ({ mkDerivation, arithmoi, base, containers, stdenv, transformers
         }:
         mkDerivation {
           pname = "quadratic-irrational";
           version = "0.1.0";
           sha256 = "fe7517151e86d16107c33a261cc0543443d34016ef83bd09878e2bb67bdccf4d";
           revision = "1";
           editedCabalFile = "11snayb371lpsz7p74sbbl3kq0i3i2vnp852x8vw482v48kld5vl";
           libraryHaskellDepends = [ arithmoi base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ion1/quadratic-irrational";
           description = "An implementation of quadratic irrationals";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickbench" = callPackage
        ({ mkDerivation, base, containers, directory, docopt, pretty-show
         , process, safe, split, stdenv, tabular, time
         }:
         mkDerivation {
           pname = "quickbench";
           version = "1.0";
           sha256 = "8bfe252e50a683346e753db312e9542f8d43256947ab215fcfd24af03787b926";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory docopt pretty-show process safe split
             tabular time
           ];
           executableHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmichael/quickbench#readme";
           description = "quick & easy benchmarking of command-line programs";
           license = "GPL";
         }) {};
      "quickcheck-arbitrary-adt" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-arbitrary-adt";
           version = "0.3.1.0";
           sha256 = "5c4a2e20366def76ba851211ac554e9a0f60535efcd0940606e4d410c27a45b9";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/plow-technologies/quickcheck-arbitrary-adt#readme";
           description = "Generic typeclasses for generating arbitrary ADTs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-assertions" = callPackage
        ({ mkDerivation, base, ieee754, pretty-show, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-assertions";
           version = "0.3.0";
           sha256 = "9b0328a788dcac0824a7d7496ab403eef04170551255c9e58fb6e2e319a9cacf";
           libraryHaskellDepends = [ base ieee754 pretty-show QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
           description = "HUnit like assertions for QuickCheck";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "quickcheck-classes" = callPackage
        ({ mkDerivation, aeson, base, base-orphans, bifunctors, containers
         , fail, primitive, QuickCheck, semigroupoids, semigroups, semirings
         , stdenv, tagged, transformers, vector
         }:
         mkDerivation {
           pname = "quickcheck-classes";
           version = "0.6.1.0";
           sha256 = "10a9a2e6f16995fc01c62fa1a1b07b4241dc31559566be87e3a0053d9dd3b806";
           revision = "2";
           editedCabalFile = "0jfi8vjnyybby8mcg4qqmb1cjijmfcvaybf0lqwzs0bazjf0rqq9";
           libraryHaskellDepends = [
             aeson base base-orphans bifunctors containers fail primitive
             QuickCheck semigroupoids semigroups semirings tagged transformers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/quickcheck-classes#readme";
           description = "QuickCheck common typeclasses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-instances" = callPackage
        ({ mkDerivation, array, base, base-compat, bytestring
         , case-insensitive, containers, hashable, old-time, QuickCheck
         , scientific, splitmix, stdenv, tagged, text, time, time-compat
         , transformers, transformers-compat, unordered-containers
         , uuid-types, vector
         }:
         mkDerivation {
           pname = "quickcheck-instances";
           version = "0.3.22";
           sha256 = "5d65bf81895b7af2d36f105d0b3afa5600b0bce0a14809c93d7ca87672ca5a91";
           revision = "4";
           editedCabalFile = "0wx4jcmiv6f3iwc92wf4l2j9025bv4997rn2ycl08ld585m1xlgv";
           libraryHaskellDepends = [
             array base base-compat bytestring case-insensitive containers
             hashable old-time QuickCheck scientific splitmix tagged text time
             time-compat transformers transformers-compat unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/qc-instances";
           description = "Common quickcheck instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-io" = callPackage
        ({ mkDerivation, base, HUnit, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-io";
           version = "0.2.0";
           sha256 = "fb779119d79fe08ff4d502fb6869a70c9a8d5fd8ae0959f605c3c937efd96422";
           libraryHaskellDepends = [ base HUnit QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/quickcheck-io#readme";
           description = "Use HUnit assertions as QuickCheck properties";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-simple" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-simple";
           version = "0.1.1.1";
           sha256 = "51358328e5d3ea20dcb668e971e07bc7c8451cade47e930c68e3a6718317032a";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Test properties and default-mains for QuickCheck";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-special" = callPackage
        ({ mkDerivation, base, QuickCheck, special-values, stdenv }:
         mkDerivation {
           pname = "quickcheck-special";
           version = "0.1.0.6";
           sha256 = "9573898509bd30613bdf59338a5754251081420c59fb658727973e2e837f1cb6";
           revision = "1";
           editedCabalFile = "1whwmij115vw0qwkzlkc4z4yhj7iwwqjhf5aaxn5np0gh2gzihb3";
           libraryHaskellDepends = [ base QuickCheck special-values ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/quickcheck-special#readme";
           description = "Edge cases and special values for QuickCheck Arbitrary instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-state-machine" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, containers, exceptions
         , matrix, mtl, pretty-show, QuickCheck, stdenv, tree-diff, unliftio
         , vector
         }:
         mkDerivation {
           pname = "quickcheck-state-machine";
           version = "0.6.0";
           sha256 = "3e5f7199282c185986eedbf7cd22e2c68d4ec6ef24bec80c27a33429c555727d";
           libraryHaskellDepends = [
             ansi-wl-pprint base containers exceptions matrix mtl pretty-show
             QuickCheck tree-diff unliftio vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/advancedtelematic/quickcheck-state-machine#readme";
           description = "Test monadic programs using state machine based models";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-text" = callPackage
        ({ mkDerivation, base, binary, bytestring, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "quickcheck-text";
           version = "0.1.2.1";
           sha256 = "4442fdb8ae6cd469c04957d34fee46039c9dc0ddce23ce6050babe6826d0ab09";
           libraryHaskellDepends = [ base binary bytestring QuickCheck text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/olorin/quickcheck-text";
           description = "Alternative arbitrary instance for Text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-transformer" = callPackage
        ({ mkDerivation, base, QuickCheck, random, stdenv, transformers }:
         mkDerivation {
           pname = "quickcheck-transformer";
           version = "0.3.1";
           sha256 = "d4818954d0538cf2b1c94f3a5c489d63cfc5dc684fe83d50bdb73871df0976c9";
           libraryHaskellDepends = [ base QuickCheck random transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/quickcheck-transformer/";
           description = "A GenT monad transformer for QuickCheck library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-unicode" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-unicode";
           version = "1.0.1.0";
           sha256 = "132005ea7edff35e95139c36232a70698cd0f4f4d79dfaa4e66fbcf557d08368";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/quickcheck-unicode";
           description = "Generator and shrink functions for testing Unicode-related software";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "radius" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptonite, iproute
         , memory, stdenv
         }:
         mkDerivation {
           pname = "radius";
           version = "0.6.1.0";
           sha256 = "bebd5ec73e85f11427a4e1040bbac695ef9bc947db2c23e2c85ddbcb31dd2260";
           libraryHaskellDepends = [
             base binary bytestring cryptonite iproute memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/codemonkeylabs/RADIUS";
           description = "Remote Authentication Dial In User Service (RADIUS)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rainbow" = callPackage
        ({ mkDerivation, base, bytestring, lens-simple, process, stdenv
         , text
         }:
         mkDerivation {
           pname = "rainbow";
           version = "0.30.0.2";
           sha256 = "be021eb05bc3e6a00b4fc10e1af941afa0c0a69ab83e5204e8455cfd5c0f5ec7";
           libraryHaskellDepends = [
             base bytestring lens-simple process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/massysett/rainbow";
           description = "Print text to terminal with colors and effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rainbox" = callPackage
        ({ mkDerivation, base, bytestring, containers, lens-simple, rainbow
         , stdenv, text
         }:
         mkDerivation {
           pname = "rainbox";
           version = "0.20.0.0";
           sha256 = "937f61d2fbc7b41f065cec9bb9d6550b54346e52b788d30f73ef78cf8545b61f";
           libraryHaskellDepends = [
             base bytestring containers lens-simple rainbow text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/massysett/rainbox";
           description = "Two-dimensional box pretty printing, with colors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ramus" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ramus";
           version = "0.1.2";
           sha256 = "dcddddc416e79c401604565b7297a945f814edeed056fb3b897eda5f4f0b794e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NickSeagull/ramus#readme";
           description = "Elm signal system for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rando" = callPackage
        ({ mkDerivation, base, stdenv, tf-random, vector }:
         mkDerivation {
           pname = "rando";
           version = "0.0.0.4";
           sha256 = "8eb8f4a5498ede50c468b74b04f9931cbcd6b4e6b03cf8dd56ad0b84c8ad7cb3";
           libraryHaskellDepends = [ base tf-random vector ];
           doHaddock = false;
           doCheck = false;
           description = "Easy-to-use randomness for livecoding";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "random" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "random";
           version = "1.1";
           sha256 = "b718a41057e25a3a71df693ab0fe2263d492e759679b3c2fea6ea33b171d3a5a";
           revision = "1";
           editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           description = "random number library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "random-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, mwc-random, pcg-random, stdenv
         }:
         mkDerivation {
           pname = "random-bytestring";
           version = "0.1.3.2";
           sha256 = "dcab3f6f32a83abd19ce1bddd8f7a7b31a4fb3bf126a58e472f71eafc36ab29a";
           libraryHaskellDepends = [ base bytestring mwc-random pcg-random ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/larskuhtz/random-bytestring";
           description = "Efficient generation of random bytestrings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "random-fu" = callPackage
        ({ mkDerivation, base, erf, math-functions, monad-loops, mtl
         , random-shuffle, random-source, rvar, stdenv, syb
         , template-haskell, transformers, vector
         }:
         mkDerivation {
           pname = "random-fu";
           version = "0.2.7.3";
           sha256 = "301ae3791c2f7ec172787f1742c9c25c525c8fe9e1fb697c74b94e84e21b2b1c";
           libraryHaskellDepends = [
             base erf math-functions monad-loops mtl random-shuffle
             random-source rvar syb template-haskell transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Random number generation";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "random-shuffle" = callPackage
        ({ mkDerivation, base, MonadRandom, random, stdenv }:
         mkDerivation {
           pname = "random-shuffle";
           version = "0.0.4";
           sha256 = "52704411f040fd0bf2361dad162e35dc13caa6535b2e4908d3513c00a95d0615";
           libraryHaskellDepends = [ base MonadRandom random ];
           doHaddock = false;
           doCheck = false;
           description = "Random shuffle implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "random-source" = callPackage
        ({ mkDerivation, base, flexible-defaults, mersenne-random-pure64
         , mtl, mwc-random, random, stateref, stdenv, syb, template-haskell
         , th-extras
         }:
         mkDerivation {
           pname = "random-source";
           version = "0.3.0.6";
           sha256 = "f3dfec3aef0614ff856abbba018f3bc3446295157895ea09a015737d67205b73";
           libraryHaskellDepends = [
             base flexible-defaults mersenne-random-pure64 mtl mwc-random random
             stateref syb template-haskell th-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Generic basis for random number generators";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "random-tree" = callPackage
        ({ mkDerivation, base, containers, lens, MonadRandom, mtl, random
         , random-shuffle, stdenv, transformers, tree-fun
         }:
         mkDerivation {
           pname = "random-tree";
           version = "0.6.0.5";
           sha256 = "2b604e7ce184e2c877fac63dbac1df3060cdc023427b8eb5844106a826591cc2";
           libraryHaskellDepends = [
             base containers lens MonadRandom mtl random random-shuffle
             transformers tree-fun
           ];
           doHaddock = false;
           doCheck = false;
           description = "Create random trees";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "range" = callPackage
        ({ mkDerivation, base, free, parsec, stdenv }:
         mkDerivation {
           pname = "range";
           version = "0.2.1.1";
           sha256 = "ac760a2408d51e40148b93b72d79320f13dfc8a68424d2510b518a49ef87ee8d";
           libraryHaskellDepends = [ base free parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/robertmassaioli/range";
           description = "An efficient and versatile range library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "range-set-list" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, stdenv }:
         mkDerivation {
           pname = "range-set-list";
           version = "0.1.3.1";
           sha256 = "12e8d9cb99a2847da32934ed7f44a5acedaa59d8fa19eff0f46aa77921460c55";
           revision = "1";
           editedCabalFile = "0ma1gxmk2in2fj4rxhwshy2zq690ylw1zz0c9cnyin8mxkp96inc";
           libraryHaskellDepends = [ base containers deepseq hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/range-set-list#readme";
           description = "Memory efficient sets with ranges of elements";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rank1dynamic" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "rank1dynamic";
           version = "0.4.0";
           sha256 = "3c424bfe52b7d4766fd66ea34c204cf920b146455711d8d10d580ca6c175ab1d";
           revision = "1";
           editedCabalFile = "1idh1iz15pzdhrhy19584i9ahz41ijbmf56wbb2wns2kipy6w9lr";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rank2classes" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, distributive, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "rank2classes";
           version = "1.3.2.1";
           sha256 = "44a414398cf9dd67fd9795680268bdb7307eadfa1dd52c92c67a0e89899e02ea";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base distributive template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blamario/grampa/tree/master/rank2classes";
           description = "standard type constructor class hierarchy, only with methods of rank 2 types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rasterific-svg" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , filepath, FontyFruity, JuicyPixels, lens, linear, mtl
         , optparse-applicative, primitive, Rasterific, scientific, stdenv
         , svg-tree, text, transformers, vector
         }:
         mkDerivation {
           pname = "rasterific-svg";
           version = "0.3.3.2";
           sha256 = "02db61c98e6e550824e8d9813efe5e97293843e39e1c00e88837061b61a017c4";
           revision = "1";
           editedCabalFile = "19i9wlk951d85dqnmbgrnz0fg4xcw7cbv9cs2h8b440lycj3p4cv";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers directory filepath FontyFruity
             JuicyPixels lens linear mtl primitive Rasterific scientific
             svg-tree text transformers vector
           ];
           executableHaskellDepends = [
             base bytestring directory filepath FontyFruity JuicyPixels
             optparse-applicative Rasterific svg-tree
           ];
           doHaddock = false;
           doCheck = false;
           description = "SVG renderer based on Rasterific";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ratel" = callPackage
        ({ mkDerivation, aeson, base, bytestring, case-insensitive
         , containers, http-client, http-client-tls, http-types, stdenv
         , text, uuid
         }:
         mkDerivation {
           pname = "ratel";
           version = "1.0.9";
           sha256 = "abcc51c2fa35622e7e3deb04e444c3dc7f0d601d848f03ef401cdd25a13a96cf";
           libraryHaskellDepends = [
             aeson base bytestring case-insensitive containers http-client
             http-client-tls http-types text uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/ratel#readme";
           description = "Notify Honeybadger about exceptions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ratel-wai" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , http-client, ratel, stdenv, wai
         }:
         mkDerivation {
           pname = "ratel-wai";
           version = "1.1.1";
           sha256 = "c93fbdf724f1c6291ec7263f2864f93a7ec360db08025d825db8c8f34284ebe2";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers http-client ratel wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/ratel-wai#readme";
           description = "Notify Honeybadger about exceptions via a WAI middleware";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rattle" = callPackage
        ({ mkDerivation, base, bytestring, cryptohash-sha256, deepseq
         , directory, extra, filepath, hashable, shake, stdenv, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "rattle";
           version = "0.1";
           sha256 = "19620782a25e354c032f9e9afc125ed30c70fea466fb9745b2374588292a2a83";
           revision = "1";
           editedCabalFile = "1ppli9l28b4pg6h57kx7vvy0wqacn4vx86bvrgjcwwlvlir49scw";
           libraryHaskellDepends = [
             base bytestring cryptohash-sha256 deepseq directory extra filepath
             hashable shake time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/rattle#readme";
           description = "Forward build system, with caching and speculation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rattletrap" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, binary, binary-bits
         , bytestring, containers, filepath, http-client, http-client-tls
         , scientific, stdenv, template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "rattletrap";
           version = "9.0.7";
           sha256 = "cf11e73cb1b0da1dc7542ad4f844ee97841a63ed6c7b2178fe52c9071d0eef4d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base binary binary-bits bytestring containers
             filepath http-client http-client-tls scientific template-haskell
             text transformers
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base binary binary-bits bytestring containers
             filepath http-client http-client-tls scientific template-haskell
             text transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parse and generate Rocket League replays";
           license = stdenv.lib.licenses.mit;
         }) {};
      "raw-strings-qq" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "raw-strings-qq";
           version = "1.1";
           sha256 = "2e011ec26aeaa53ab43c30b7d9b5b0f661f24b4ebef8884c12c571353c0fbed3";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/23Skidoo/raw-strings-qq";
           description = "Raw string literals for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rawfilepath" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "rawfilepath";
           version = "0.2.4";
           sha256 = "cbb01b49f7ff0271a8c6e4124f93515e6cdabf9581278594e19dd916b6bd5bd3";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xtendo-org/rawfilepath#readme";
           description = "Use RawFilePath instead of FilePath";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "rawstring-qm" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, template-haskell, text
         }:
         mkDerivation {
           pname = "rawstring-qm";
           version = "0.2.3.0";
           sha256 = "11a177bb7d685fb6a98390630196bd544e877b7460648e61a2905c21a71268fe";
           libraryHaskellDepends = [ base bytestring template-haskell text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tolysz/rawstring-qm";
           description = "Simple raw string quotation and dictionary interpolation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rcu" = callPackage
        ({ mkDerivation, atomic-primops, base, Cabal, cabal-doctest, fail
         , ghc-prim, parallel, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "rcu";
           version = "0.2.4";
           sha256 = "79bde4bee706392004070bebceef0cf11d67823065ac9d7fbf57f4b40c7d86fe";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             atomic-primops base fail ghc-prim parallel primitive transformers
           ];
           executableHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/rcu/";
           description = "Read-Copy-Update for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rdf" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, deepseq, dlist, fgl
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "rdf";
           version = "0.1.0.3";
           sha256 = "5a7443a97abb283e1b1cd83c4fc6fd447f6a289390ea3410de76c84ef2dfd72f";
           revision = "1";
           editedCabalFile = "0x5zdjbyrpap5qs40yl0m96fcgy11f6s5r3v0n8n5904cxa5sqy3";
           libraryHaskellDepends = [
             attoparsec base bytestring deepseq dlist fgl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/traviswhitaker/rdf";
           description = "Representation and Incremental Processing of RDF Data";
           license = stdenv.lib.licenses.mit;
         }) {};
      "re2" = callPackage
        ({ mkDerivation, base, bytestring, re2, stdenv, vector }:
         mkDerivation {
           pname = "re2";
           version = "0.3";
           sha256 = "cb223e3717838dcd501d4758e0348e6eff6978318f62053cf7dd3286ef5b996a";
           libraryHaskellDepends = [ base bytestring vector ];
           librarySystemDepends = [ re2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rblaze/haskell-re2#readme";
           description = "Bindings to the re2 regular expression library";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) re2;};
      "read-editor" = callPackage
        ({ mkDerivation, base, directory, process, stdenv }:
         mkDerivation {
           pname = "read-editor";
           version = "0.1.0.2";
           sha256 = "ed8aeca86823fbaf11a0a543fd106c9c3abe65216ea974ed56050cbebf777085";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-read-editor";
           description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "read-env-var" = callPackage
        ({ mkDerivation, base, exceptions, stdenv, transformers }:
         mkDerivation {
           pname = "read-env-var";
           version = "1.0.0.0";
           sha256 = "03f3c8176fc08ce838ae772f13991258e2b496712cc71edb1a00336e7ce0b75c";
           libraryHaskellDepends = [ base exceptions transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/read-env-var#readme";
           description = "Functions for safely reading environment variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "readable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "readable";
           version = "0.3.1";
           sha256 = "703037ad2cca4d6d42ba23e2758d1911cd82e3e922c4078076c273231e4b43c9";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mightybyte/readable";
           description = "Reading from Text and ByteString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reanimate" = callPackage
        ({ mkDerivation, ansi-wl-pprint, attoparsec, base
         , base64-bytestring, bytestring, cassava, chiphunk, colour
         , containers, cubicbezier, diagrams, diagrams-contrib
         , diagrams-core, diagrams-lib, diagrams-svg, directory, filepath
         , fsnotify, hashable, here, JuicyPixels, lens, linear, matrix, mtl
         , open-browser, optparse-applicative, palette, parallel, process
         , random-shuffle, reanimate-svg, stdenv, svg-builder, temporary
         , text, time, vector, websockets, xml
         }:
         mkDerivation {
           pname = "reanimate";
           version = "0.1.8.0";
           sha256 = "7cffb8a02c3160735ddfbe4a1344fbf48d3f1f0f7663ca404087be432c6620ef";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             ansi-wl-pprint attoparsec base base64-bytestring bytestring cassava
             chiphunk colour containers cubicbezier diagrams diagrams-contrib
             diagrams-core diagrams-lib diagrams-svg directory filepath fsnotify
             hashable here JuicyPixels lens linear matrix mtl open-browser
             optparse-applicative palette parallel process random-shuffle
             reanimate-svg svg-builder temporary text time vector websockets xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lemmih/reanimate";
           description = "Animation library based on SVGs";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "reanimate-svg" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , JuicyPixels, lens, linear, mtl, scientific, stdenv, text
         , transformers, vector, xml
         }:
         mkDerivation {
           pname = "reanimate-svg";
           version = "0.9.3.1";
           sha256 = "849cf6a4819c5da464f3782fea805888aebe2bfbb9e729825428dd939b83aeaf";
           libraryHaskellDepends = [
             attoparsec base bytestring containers JuicyPixels lens linear mtl
             scientific text transformers vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "SVG file loader and serializer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rebase" = callPackage
        ({ mkDerivation, base, base-prelude, bifunctors, bytestring
         , containers, contravariant, contravariant-extras, deepseq, dlist
         , either, fail, hashable, mtl, profunctors, scientific
         , semigroupoids, semigroups, stdenv, stm, text, time, transformers
         , unordered-containers, uuid, vector, void
         }:
         mkDerivation {
           pname = "rebase";
           version = "1.3.1.1";
           sha256 = "0aec6f85a98e376bfd01819d1ef48855ab1539a619e5981fd0fd4d7e94139560";
           libraryHaskellDepends = [
             base base-prelude bifunctors bytestring containers contravariant
             contravariant-extras deepseq dlist either fail hashable mtl
             profunctors scientific semigroupoids semigroups stm text time
             transformers unordered-containers uuid vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/rebase";
           description = "A more progressive alternative to the \"base\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "record-dot-preprocessor" = callPackage
        ({ mkDerivation, base, extra, ghc, stdenv, uniplate }:
         mkDerivation {
           pname = "record-dot-preprocessor";
           version = "0.2.2";
           sha256 = "9cdfab5b9fb4e8c1b2053e7a56274d14c79a2a2deef3cc69ee493d007f43aae7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base extra ghc uniplate ];
           executableHaskellDepends = [ base extra ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/record-dot-preprocessor#readme";
           description = "Preprocessor to allow record.field syntax";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "record-hasfield" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "record-hasfield";
           version = "1.0";
           sha256 = "523d2f5ffcbc54881fb3318411a095ae4ac6ec48e36cd6aecf90486a89849eca";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/record-hasfield#readme";
           description = "A version of GHC.Records as available in future GHCs.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "records-sop" = callPackage
        ({ mkDerivation, base, deepseq, generics-sop, ghc-prim, stdenv }:
         mkDerivation {
           pname = "records-sop";
           version = "0.1.0.3";
           sha256 = "4581dc60889928f4ab1f493cbe6362b7a3854785b8e305d5c4bc444dbe591388";
           revision = "1";
           editedCabalFile = "0492a3cabdl5ccncc7lk7bvh55in4hzm345fl3xpidp9jx6mv1x4";
           libraryHaskellDepends = [ base deepseq generics-sop ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Record subtyping and record utilities with generics-sop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "recursion-schemes" = callPackage
        ({ mkDerivation, base, base-orphans, comonad, free, stdenv
         , template-haskell, th-abstraction, transformers
         }:
         mkDerivation {
           pname = "recursion-schemes";
           version = "5.1.3";
           sha256 = "b21736e54b1d5fb0149624e95f2d8d8fd3413bb0972eda6a70e5753d3c9f1528";
           revision = "2";
           editedCabalFile = "01q18gplv5k328qf74innnx2z2p15pg5nc6sikxq6fkkw4v3rkyb";
           libraryHaskellDepends = [
             base base-orphans comonad free template-haskell th-abstraction
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/recursion-schemes/";
           description = "Representing common recursion patterns as higher-order functions";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "reducers" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, fingertree
         , hashable, semigroupoids, semigroups, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "reducers";
           version = "3.12.3";
           sha256 = "7186733767405984c1eda96b18908f458b379f116a1589cd66f4319fe8458e27";
           revision = "1";
           editedCabalFile = "1v0r75wkaahxdv4y0sqgcikvgwymiz12fa8nkk59n1g4x9nng9wb";
           libraryHaskellDepends = [
             array base bytestring containers fingertree hashable semigroupoids
             semigroups text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/reducers/";
           description = "Semigroups, specialized containers and a general map/reduce framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "refact" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "refact";
           version = "0.3.0.2";
           sha256 = "0ad029727797c8ca5d179c7abf1bfc135d86a7d72cf93785ee12ad243aeb1f6c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Specify refactorings to perform with apply-refact";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "references" = callPackage
        ({ mkDerivation, array, base, containers, directory, either
         , filepath, instance-control, mtl, stdenv, template-haskell, text
         , transformers, uniplate
         }:
         mkDerivation {
           pname = "references";
           version = "0.3.3.1";
           sha256 = "bc07606d36639148374e7a29a67ac489c7a0ed02655311b5d633a144a746c10e";
           libraryHaskellDepends = [
             array base containers directory either filepath instance-control
             mtl template-haskell text transformers uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lazac/references";
           description = "Selectors for reading and updating data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reflection" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "reflection";
           version = "2.1.5";
           sha256 = "272ee9bffb722047067296a34f68d7450e3f6abfbe62eed02a9cef20ed212977";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/reflection";
           description = "Reifies arbitrary terms into types that can be reflected back into terms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex" = callPackage
        ({ mkDerivation, array, base, base-compat, bytestring, containers
         , hashable, regex-base, regex-pcre-builtin, regex-tdfa
         , regex-tdfa-text, stdenv, template-haskell, text, time
         , time-locale-compat, transformers, unordered-containers
         , utf8-string
         }:
         mkDerivation {
           pname = "regex";
           version = "1.0.2.0";
           sha256 = "aacd9b91e0598931745db5a3eea1cdfd6edf3b1e18ceb288c82eb8088b005fb8";
           revision = "1";
           editedCabalFile = "1476dxzj482j6zkvbvyszsjw1bm7jn2nwk40rq99ylvzm2sj0asn";
           libraryHaskellDepends = [
             array base base-compat bytestring containers hashable regex-base
             regex-pcre-builtin regex-tdfa regex-tdfa-text template-haskell text
             time time-locale-compat transformers unordered-containers
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://regex.uk";
           description = "Toolkit for regex-base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-applicative" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "regex-applicative";
           version = "0.3.3.1";
           sha256 = "8f064fc23b58fcdd0ef3ce9e2597d877a86bec1770f2b877cb3057b54bb70a5c";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/regex-applicative";
           description = "Regex-based parsing with applicative interface";
           license = stdenv.lib.licenses.mit;
         }) {};
      "regex-applicative-text" = callPackage
        ({ mkDerivation, base, regex-applicative, stdenv, text }:
         mkDerivation {
           pname = "regex-applicative-text";
           version = "0.1.0.1";
           sha256 = "b093051f80865d257da2ded8ad1b566927b01b3d2f86d41da2ffee4a26c4e2d9";
           revision = "5";
           editedCabalFile = "1jgmhqhlhj9zhxwikmhiq71fj1900iqiyg6r9l5y7xjk7arwscmi";
           libraryHaskellDepends = [ base regex-applicative text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/regex-applicative-text#readme";
           description = "regex-applicative on text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-base" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, mtl, stdenv
         }:
         mkDerivation {
           pname = "regex-base";
           version = "0.93.2";
           sha256 = "20dc5713a16f3d5e2e6d056b4beb9cfdc4368cd09fd56f47414c847705243278";
           revision = "2";
           editedCabalFile = "0dks3m5xwcjqqlyyg7abh12ci3ap5qn6wz3bz80kr6rcfgk0fhvd";
           libraryHaskellDepends = [ array base bytestring containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-compat" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-posix, stdenv }:
         mkDerivation {
           pname = "regex-compat";
           version = "0.95.1";
           sha256 = "d57cb1a5a4d66753b18eaa37a1621246f660472243b001894f970037548d953b";
           revision = "1";
           editedCabalFile = "0yg34p0rkql07y6rs6l70zlk8x51lra9vabkin921l581k6br498";
           libraryHaskellDepends = [ array base regex-base regex-posix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-compat-tdfa" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-tdfa, stdenv }:
         mkDerivation {
           pname = "regex-compat-tdfa";
           version = "0.95.1.4";
           sha256 = "4fa38ed24ae390eeffe6eef04bbe632d7ecd02b9123729e976e7420f927520dd";
           libraryHaskellDepends = [ array base regex-base regex-tdfa ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
           description = "Unicode Support version of Text.Regex, using regex-tdfa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-pcre" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, pcre
         , regex-base, stdenv
         }:
         mkDerivation {
           pname = "regex-pcre";
           version = "0.94.4";
           sha256 = "8eaa7d4ac6c0a4ba35aa59fc3f6b8f8e252bb25a47e136791446a74752e226c0";
           revision = "1";
           editedCabalFile = "0jk29n0may65ghixlx1wwfmfcabsm730y8ppry1qy4naywhi1vs7";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           librarySystemDepends = [ pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/regex-pcre";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) pcre;};
      "regex-pcre-builtin" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, regex-base
         , stdenv
         }:
         mkDerivation {
           pname = "regex-pcre-builtin";
           version = "0.94.5.8.8.35";
           sha256 = "84be730f33c82a195e338e233c1d9279ca59985e03415d4470b9d7f01a2ee5e8";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/regex-pcre";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-pcre-text" = callPackage
        ({ mkDerivation, array, base, bytestring, regex-base
         , regex-pcre-builtin, regex-tdfa-text, stdenv, text
         }:
         mkDerivation {
           pname = "regex-pcre-text";
           version = "0.94.0.1";
           sha256 = "17991ed7b00da5cfb2efa0cefac16f9e0452fc794fe538d26d5cc802f0d8e9bd";
           libraryHaskellDepends = [
             array base bytestring regex-base regex-pcre-builtin regex-tdfa-text
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/regex-pcre-text";
           description = "Text-based PCRE API for regex-base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-posix" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, regex-base
         , stdenv
         }:
         mkDerivation {
           pname = "regex-posix";
           version = "0.95.2";
           sha256 = "56019921cd4a4c9682b81ec614236fea816ba8ed8785a1640cd66d8b24fc703e";
           revision = "2";
           editedCabalFile = "1zrlwmmrb3x3r3af1r42xwhwspzfgnzh4dw1158523sndsg8qn08";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-tdfa" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
         , parsec, regex-base, stdenv
         }:
         mkDerivation {
           pname = "regex-tdfa";
           version = "1.2.3.2";
           sha256 = "0e8ea50b60abbe998b191005695647fc2fcb544bdf5b6829b7e7a48f33bed00f";
           revision = "1";
           editedCabalFile = "03z5jmpkgyd6ydwmnxcmhysjfwb0m5ngfgvxzf4f1vx2qgifqm5i";
           libraryHaskellDepends = [
             array base bytestring containers ghc-prim mtl parsec regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisKuklewicz/regex-tdfa";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-tdfa-text" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-tdfa, stdenv, text
         }:
         mkDerivation {
           pname = "regex-tdfa-text";
           version = "1.0.0.3";
           sha256 = "38d77a0d225c306c52c6d4eed12d11d05a4bc4194d547cb9a7a9b6f5a8792001";
           revision = "1";
           editedCabalFile = "00swglzmdw30g4bn47z6j71all0djjb2hjm7bkfl7pza4wv14wpv";
           libraryHaskellDepends = [ array base regex-base regex-tdfa text ];
           doHaddock = false;
           doCheck = false;
           description = "Text interface for regex-tdfa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-with-pcre" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, containers, regex
         , regex-base, regex-pcre-builtin, regex-pcre-text, regex-tdfa
         , stdenv, template-haskell, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "regex-with-pcre";
           version = "1.0.2.0";
           sha256 = "53c7bd8fc0e361b04af3bd3f2f546826a88b6827b252688d4ebb3fb8092f76a7";
           libraryHaskellDepends = [
             base base-compat bytestring containers regex regex-base
             regex-pcre-builtin regex-pcre-text regex-tdfa template-haskell text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://regex.uk";
           description = "Toolkit for regex-base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "registry" = callPackage
        ({ mkDerivation, base, containers, exceptions, hashable, mmorph
         , mtl, protolude, resourcet, semigroupoids, semigroups, stdenv
         , template-haskell, text, transformers-base
         }:
         mkDerivation {
           pname = "registry";
           version = "0.1.7.0";
           sha256 = "960aad4f7cdf300ed830981664946c10c7c408485dc46e785a5146171a39aa91";
           libraryHaskellDepends = [
             base containers exceptions hashable mmorph mtl protolude resourcet
             semigroupoids semigroups template-haskell text transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "data structure for assembling components";
           license = stdenv.lib.licenses.mit;
         }) {};
      "reinterpret-cast" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "reinterpret-cast";
           version = "0.1.0";
           sha256 = "5654622c904b42c62f2473c64624715dbd458ea00209ed9ab39396eabc1353e4";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/reinterpret-cast";
           description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
           license = stdenv.lib.licenses.mit;
         }) {};
      "relapse" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "relapse";
           version = "1.0.0.0";
           sha256 = "65c68af5e3d18e67bd6f81ab62ea9cc271d8283d876f7baf1c4ee64515a9aa19";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iostat/relapse#readme";
           description = "Sensible RLP encoding";
           license = stdenv.lib.licenses.mit;
         }) {};
      "relational-query" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, dlist
         , names-th, persistable-record, product-isomorphic, sql-words
         , stdenv, template-haskell, text, th-reify-compat, time
         , time-locale-compat, transformers
         }:
         mkDerivation {
           pname = "relational-query";
           version = "0.12.2.2";
           sha256 = "5bfe69ee23fe71602d6696c3fd8ff4a19519b58f564aa8396b1fb2c20c67c81c";
           libraryHaskellDepends = [
             array base bytestring containers dlist names-th persistable-record
             product-isomorphic sql-words template-haskell text th-reify-compat
             time time-locale-compat transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Typeful, Modular, Relational, algebraic query engine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-query-HDBC" = callPackage
        ({ mkDerivation, base, containers, convertible, dlist, HDBC
         , HDBC-session, names-th, persistable-record, product-isomorphic
         , relational-query, relational-schemas, sql-words, stdenv
         , template-haskell, th-data-compat, transformers
         }:
         mkDerivation {
           pname = "relational-query-HDBC";
           version = "0.7.2.0";
           sha256 = "83e90974b7e1281d7e1ac3aea03c145080aa53adfd1c36bf7096dc6b2096ef3f";
           libraryHaskellDepends = [
             base containers convertible dlist HDBC HDBC-session names-th
             persistable-record product-isomorphic relational-query
             relational-schemas sql-words template-haskell th-data-compat
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "HDBC instance of relational-query and typed query interface for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-record" = callPackage
        ({ mkDerivation, base, persistable-record
         , persistable-types-HDBC-pg, product-isomorphic, relational-query
         , relational-query-HDBC, stdenv
         }:
         mkDerivation {
           pname = "relational-record";
           version = "0.2.2.0";
           sha256 = "0bbd2663c394a39a7b3d9bcd257d91e3312be7f3c8df562b6868e82c0b96b3da";
           libraryHaskellDepends = [
             base persistable-record persistable-types-HDBC-pg
             product-isomorphic relational-query relational-query-HDBC
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Meta package of Relational Record";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-schemas" = callPackage
        ({ mkDerivation, base, bytestring, containers, relational-query
         , stdenv, template-haskell, time
         }:
         mkDerivation {
           pname = "relational-schemas";
           version = "0.1.7.0";
           sha256 = "0b8dcab7fcde1b87aa06566f7e07a01cdb5d74edca7b178606a31c2cb5b00ffa";
           libraryHaskellDepends = [
             base bytestring containers relational-query template-haskell time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "RDBMSs' schema templates for relational-query";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relude" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, ghc-prim
         , hashable, mtl, stdenv, stm, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "relude";
           version = "0.5.0";
           sha256 = "75411b958121c813f4a0a2297542d4df85f141f52c1c081803fb48b73c691d81";
           revision = "1";
           editedCabalFile = "0qw27rmf14dn44lics58mqdf4wfcnx5z5zrwi13bsbf8qicmd7cb";
           libraryHaskellDepends = [
             base bytestring containers deepseq ghc-prim hashable mtl stm text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/relude";
           description = "Custom prelude from Kowainik";
           license = stdenv.lib.licenses.mit;
         }) {};
      "renderable" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, transformers
         }:
         mkDerivation {
           pname = "renderable";
           version = "0.2.0.1";
           sha256 = "d1ea5a8d2da8913700c326c3e757c8c4c8a87f1353125bbc9ea372729e04b6c5";
           libraryHaskellDepends = [ base containers hashable transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/schell/renderable";
           description = "An API for managing renderable resources";
           license = stdenv.lib.licenses.mit;
         }) {};
      "repa" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, QuickCheck, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "repa";
           version = "3.4.1.4";
           sha256 = "43607a5de4b89b8e58bfcbc261445d89fa40b685d43952797704b80d09e5a39e";
           revision = "4";
           editedCabalFile = "0bay8j0fm7l2nhrbdvy9fvrb6hgkrk5qx9y03az2kakvjdc4gvvh";
           libraryHaskellDepends = [
             base bytestring ghc-prim QuickCheck template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "High performance, regular, shape polymorphic parallel arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repa-algorithms" = callPackage
        ({ mkDerivation, base, repa, stdenv, vector }:
         mkDerivation {
           pname = "repa-algorithms";
           version = "3.4.1.3";
           sha256 = "de586fe7e14e0e000da50022e2129cabfd47773ba7844753c535c982f20e0fae";
           revision = "1";
           editedCabalFile = "0lvb1sn95qca9m1b8cy0a2j9gjzqm8g5v68ykglffjskv78d0jfm";
           libraryHaskellDepends = [ base repa vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "Algorithms using the Repa array library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repa-io" = callPackage
        ({ mkDerivation, base, binary, bmp, bytestring, old-time, repa
         , stdenv, vector
         }:
         mkDerivation {
           pname = "repa-io";
           version = "3.4.1.1";
           sha256 = "b5dbca96a988fb8bd918288ea1cfcf215fe46062e45001b209603b63a39ba9da";
           revision = "4";
           editedCabalFile = "1lswfxmfn31gm2ayqwns9q9kpbad69scxpq6ybyzxkb9jd0jx4bl";
           libraryHaskellDepends = [
             base binary bmp bytestring old-time repa vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "Read and write Repa arrays in various formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "replace-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "replace-attoparsec";
           version = "1.0.3.0";
           sha256 = "9fd72de0b40bb5f1486e63377432dab9eef2d592222668344c97a70edcbd7a6e";
           libraryHaskellDepends = [ attoparsec base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jamesdbrock/replace-attoparsec";
           description = "Find, replace, and edit text patterns with Attoparsec parsers";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "replace-megaparsec" = callPackage
        ({ mkDerivation, base, megaparsec, stdenv }:
         mkDerivation {
           pname = "replace-megaparsec";
           version = "1.1.5.0";
           sha256 = "cd5f2457a04bd0ef5d790c23cc2422255285f27339bd11df1ff515a3cc0dc21f";
           libraryHaskellDepends = [ base megaparsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jamesdbrock/replace-megaparsec";
           description = "Find, replace, and edit text patterns with Megaparsec parsers";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "repline" = callPackage
        ({ mkDerivation, base, containers, fail, haskeline, mtl, process
         , stdenv
         }:
         mkDerivation {
           pname = "repline";
           version = "0.2.1.0";
           sha256 = "45c3186ff35ed650ee9c641f545a30860eedc44107fefb21da36df47aeb1ae7b";
           libraryHaskellDepends = [
             base containers fail haskeline mtl process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdiehl/repline";
           description = "Haskeline wrapper for GHCi-like REPL interfaces";
           license = stdenv.lib.licenses.mit;
         }) {};
      "req" = callPackage
        ({ mkDerivation, aeson, authenticate-oauth, base, blaze-builder
         , bytestring, case-insensitive, connection, http-api-data
         , http-client, http-client-tls, http-types, monad-control, mtl
         , retry, stdenv, text, time, transformers, transformers-base
         }:
         mkDerivation {
           pname = "req";
           version = "2.1.0";
           sha256 = "d6946db9e02f3080dfe55c713fe1ae815bc014a1da630eb73b18f3b90622551f";
           revision = "1";
           editedCabalFile = "0dgd4wgijd0k96khy56b6gnzmqzmz44a4qsj0v5mwslvnvkq598a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson authenticate-oauth base blaze-builder bytestring
             case-insensitive connection http-api-data http-client
             http-client-tls http-types monad-control mtl retry text time
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/req";
           description = "Easy-to-use, type-safe, expandable, high-level HTTP client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "req-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, http-client, req
         , resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "req-conduit";
           version = "1.0.0";
           sha256 = "1da764e4bdc5454aef3d79cff2d72c9fa393a8d049ab14c3ba2be77325d96ba4";
           revision = "6";
           editedCabalFile = "0wmzf62r5jawlccbndvsrr6cj4r0bdl4mqqwcnxz412cdq71w8hz";
           libraryHaskellDepends = [
             base bytestring conduit http-client req resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/req-conduit";
           description = "Conduit helpers for the req HTTP client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "require" = callPackage
        ({ mkDerivation, base, bytestring, directory, inliterate
         , megaparsec, optparse-generic, stdenv, text, universum
         }:
         mkDerivation {
           pname = "require";
           version = "0.4.3";
           sha256 = "8a79a55a61a072df82470b31722aaaa02a88c122b0cc2ad12deb0cd3b1d7cd48";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring directory inliterate megaparsec optparse-generic
             text universum
           ];
           executableHaskellDepends = [
             base bytestring directory inliterate megaparsec optparse-generic
             text universum
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/theam/require#readme";
           description = "Scrap your qualified import clutter";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "rerebase" = callPackage
        ({ mkDerivation, rebase, stdenv }:
         mkDerivation {
           pname = "rerebase";
           version = "1.3.1.1";
           sha256 = "02d56cc8e8ce118a362a6394ac527c73d028d146937f51ed9c3911318d8b78c9";
           libraryHaskellDepends = [ rebase ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/rerebase";
           description = "Reexports from \"base\" with a bunch of other standard libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "resistor-cube" = callPackage
        ({ mkDerivation, base, comfort-array, lapack, stdenv }:
         mkDerivation {
           pname = "resistor-cube";
           version = "0.0.1.2";
           sha256 = "c69ad83ea57a2e9c6ab6e87a33ccdbb08651b1cc1407ff8c698b42bc6ef7b7c9";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base comfort-array lapack ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/resistor-cube";
           description = "Compute total resistance of a cube of resistors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "resource-pool" = callPackage
        ({ mkDerivation, base, hashable, monad-control, stdenv, stm, time
         , transformers, transformers-base, vector
         }:
         mkDerivation {
           pname = "resource-pool";
           version = "0.2.3.2";
           sha256 = "8627eea2bea8824af2723646e74e2af0c73f583dd0c496c9fd242cd9d242bc12";
           libraryHaskellDepends = [
             base hashable monad-control stm time transformers transformers-base
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/pool";
           description = "A high-performance striped resource pooling implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "resourcet" = callPackage
        ({ mkDerivation, base, containers, exceptions, mtl, primitive
         , stdenv, transformers, unliftio-core
         }:
         mkDerivation {
           pname = "resourcet";
           version = "1.2.2";
           sha256 = "1323425aba3827479eb3588efaf7608b12a083327d64ec814f02863c3673cbe5";
           revision = "1";
           editedCabalFile = "18v6frks5zr64hpq8dprbk6dxpq4ykijp1xg00ghp7qz060f1r0i";
           libraryHaskellDepends = [
             base containers exceptions mtl primitive transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Deterministic allocation and freeing of scarce resources";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "result" = callPackage
        ({ mkDerivation, base, bifunctors, keys, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "result";
           version = "0.2.6.0";
           sha256 = "f526d97cdab851f24e215e346f6d54d3a504a6ac5d9264f580c4f72d606178c5";
           libraryHaskellDepends = [ base bifunctors keys mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-result";
           description = "Encode success or at least one error";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rethinkdb-client-driver" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , hashable, mtl, network, old-locale, scientific, stdenv, stm
         , template-haskell, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "rethinkdb-client-driver";
           version = "0.0.25";
           sha256 = "0f9dc156cd61b866b847b1b1a60a2345b4b5556b8b75a9e8499b0514e7f98996";
           revision = "4";
           editedCabalFile = "1fjavc5gmz15za1yzj4b23gd50b2jj83l0d5pc2kmz8f6bs5nx9f";
           libraryHaskellDepends = [
             aeson base binary bytestring containers hashable mtl network
             old-locale scientific stm template-haskell text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
           description = "Client driver for RethinkDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "retry" = callPackage
        ({ mkDerivation, base, exceptions, ghc-prim, random, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "retry";
           version = "0.8.1.0";
           sha256 = "b29521112dafdd91a64e71fec9656a23542fc820c4acadf3dae15565501e600a";
           libraryHaskellDepends = [
             base exceptions ghc-prim random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/Soostone/retry";
           description = "Retry combinators for monadic actions that may fail";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rev-state" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "rev-state";
           version = "0.1.2";
           sha256 = "ee070e39d7f7d673593e2f356ab317bc2fdd0d8a283f8316c0e5b5adbdf0f919";
           revision = "2";
           editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/rev-state#readme";
           description = "Reverse State monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rfc1751" = callPackage
        ({ mkDerivation, base, bytestring, cereal, stdenv, vector }:
         mkDerivation {
           pname = "rfc1751";
           version = "0.1.2";
           sha256 = "a345e81625ffbdf3d3dc1723d322133108a5fd9ba17fbfae6e954046cd2b9aca";
           libraryHaskellDepends = [ base bytestring cereal vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xenog/rfc1751.git#readme";
           description = "RFC-1751 library for Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "rfc5051" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "rfc5051";
           version = "0.1.0.4";
           sha256 = "615daa230eabc781eff1d3ce94c42fc5ba6188dbeb115a233328454b02c1b3d3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           description = "Simple unicode collation as per RFC5051";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rg" = callPackage
        ({ mkDerivation, array, base, fmt, possibly, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "rg";
           version = "1.4.0.0";
           sha256 = "47da6b1356e04bd38dce995d36f352652a486dfce2db2c328f7f0384eb1dd0b2";
           libraryHaskellDepends = [
             array base fmt possibly text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/rg#readme";
           description = "A dynamic/unbounded alternative to Bounded Enum";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rhine" = callPackage
        ({ mkDerivation, base, containers, deepseq, dunai, free
         , MonadRandom, random, stdenv, time, transformers, vector-sized
         }:
         mkDerivation {
           pname = "rhine";
           version = "0.5.1.0";
           sha256 = "e9c04d1215f8b84c6b38279ce9271f9278a0fbaa85816118c4fd44eda7b2d008";
           libraryHaskellDepends = [
             base containers deepseq dunai free MonadRandom random time
             transformers vector-sized
           ];
           doHaddock = false;
           doCheck = false;
           description = "Functional Reactive Programming with type-level clocks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rhine-gloss" = callPackage
        ({ mkDerivation, base, dunai, gloss, rhine, stdenv }:
         mkDerivation {
           pname = "rhine-gloss";
           version = "0.5.1.0";
           sha256 = "9466c9d0fc4d606ab6022f2e31c724859880ee421a5fcc7009b3cd1dc9a9055b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base dunai gloss rhine ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Gloss backend for Rhine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rigel-viz" = callPackage
        ({ mkDerivation, aeson, base, bytestring, colour, containers
         , stdenv, text
         }:
         mkDerivation {
           pname = "rigel-viz";
           version = "0.2.0.0";
           sha256 = "ba972f5ed4fde34b3d6185f311666cec93ec5618f047c28a09c5e9683d34cc7c";
           libraryHaskellDepends = [
             aeson base bytestring colour containers text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/rigel-viz";
           description = "A mid-level wrapper for vega-lite";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rio" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, directory
         , exceptions, filepath, hashable, microlens, mtl, primitive
         , process, stdenv, text, time, typed-process, unix, unliftio
         , unliftio-core, unordered-containers, vector
         }:
         mkDerivation {
           pname = "rio";
           version = "0.1.13.0";
           sha256 = "95750d0df4bc3c609df74e59854126ee8e0359edcfd25b75715e8542265d59cb";
           libraryHaskellDepends = [
             base bytestring containers deepseq directory exceptions filepath
             hashable microlens mtl primitive process text time typed-process
             unix unliftio unliftio-core unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/rio#readme";
           description = "A standard library for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rio-orphans" = callPackage
        ({ mkDerivation, base, exceptions, fast-logger, monad-control
         , monad-logger, resourcet, rio, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "rio-orphans";
           version = "0.1.1.0";
           sha256 = "7e8d2c6df6e7afdbca5b344c6e57c754e2d6b9c0cfb4f00e1df88dad1bd48b4e";
           libraryHaskellDepends = [
             base exceptions fast-logger monad-control monad-logger resourcet
             rio transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/rio#readme";
           description = "Orphan instances for the RIO type in the rio package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rio-prettyprint" = callPackage
        ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal, array
         , base, Cabal, colour, mtl, path, rio, stdenv, text
         }:
         mkDerivation {
           pname = "rio-prettyprint";
           version = "0.1.0.0";
           sha256 = "15e4ddc5268f033cfad89ddd023d4157c7dc5784004aa40d232581380e6b1459";
           revision = "2";
           editedCabalFile = "1hvhjqy7kfk7fglx1rw8axscy0dfzqwd1564awnwdhvmf8silkkn";
           libraryHaskellDepends = [
             aeson annotated-wl-pprint ansi-terminal array base Cabal colour mtl
             path rio text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/stack#readme";
           description = "Pretty-printing for RIO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "roc-id" = callPackage
        ({ mkDerivation, base, MonadRandom, Only, stdenv, text
         , vector-sized
         }:
         mkDerivation {
           pname = "roc-id";
           version = "0.1.0.0";
           sha256 = "3144d7edc22fc5816b38fa356811417125572d062e07d23d8319466c68868429";
           libraryHaskellDepends = [
             base MonadRandom Only text vector-sized
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonathanknowles/roc-id#readme";
           description = "Implementation of the ROC National ID standard";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rocksdb-haskell" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-default, directory
         , filepath, resourcet, rocksdb, stdenv, transformers
         }:
         mkDerivation {
           pname = "rocksdb-haskell";
           version = "1.0.1";
           sha256 = "b8407c933f503c2e21578a558b829288917f0f6f5ff7c32229cf5b11abed4dff";
           libraryHaskellDepends = [
             base binary bytestring data-default directory filepath resourcet
             transformers
           ];
           librarySystemDepends = [ rocksdb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/serokell/rocksdb-haskell";
           description = "Haskell bindings to RocksDB";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) rocksdb;};
      "rocksdb-query" = callPackage
        ({ mkDerivation, base, bytestring, cereal, conduit, resourcet
         , rocksdb-haskell, stdenv, unliftio
         }:
         mkDerivation {
           pname = "rocksdb-query";
           version = "0.2.0";
           sha256 = "8e2d645542c98fd69fa73c136d2aa4bba574354c3121bc7b461d367a17fdc206";
           libraryHaskellDepends = [
             base bytestring cereal conduit resourcet rocksdb-haskell unliftio
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xenog/rocksdb-query#readme";
           description = "RocksDB database querying library for Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "roles" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "roles";
           version = "0.2.0.0";
           sha256 = "e29d2f31b21b2d8ce3507e17211e70a61d2e434a8e19f80b2e4898bdabac34a0";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/matt-noonan/roles/";
           description = "Composable class-based roles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rope-utf16-splay" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "rope-utf16-splay";
           version = "0.3.1.0";
           sha256 = "cbf878098355441ed7be445466fcb72d45390073a298b37649d762de2a7f8cc6";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ollef/rope-utf16-splay";
           description = "Ropes optimised for updating using UTF-16 code units and row/column pairs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rosezipper" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "rosezipper";
           version = "0.2";
           sha256 = "6cab4f1c192cc3b8b0a9eb11a32780d235020a539a0e91125eed5ec590bad7bc";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Generic zipper implementation for Data.Tree";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rot13" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "rot13";
           version = "0.2.0.1";
           sha256 = "e026d418cc6a1ce83ba11e811387e62ad49ffb1cbd6ae7f58b72fd179fccd4dc";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kvanberendonck/codec-rot13";
           description = "Fast ROT13 cipher for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rpmbuild-order" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory
         , explicit-exception, fgl, filepath, process, stdenv, transformers
         }:
         mkDerivation {
           pname = "rpmbuild-order";
           version = "0.2.1";
           sha256 = "b66d6078e82da6c2becf1e0082fb0f17e5a8a0052d95442dc3b0b63915a6a082";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal containers directory explicit-exception fgl filepath
             process transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/rpmbuild-order";
           description = "Order RPM packages by dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "runmemo" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "runmemo";
           version = "1.0.0.1";
           sha256 = "ba5ef3177f8fe5f443808e44f62d03b23ac19bbef7f708e40532031a3505d689";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/runmemo";
           description = "A simple memoization helper library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rvar" = callPackage
        ({ mkDerivation, base, MonadPrompt, mtl, random-source, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "rvar";
           version = "0.2.0.3";
           sha256 = "d78aaf2ffdba182dda95d1692fec7abc5d77fa371120618a397b5675438c6bc0";
           revision = "1";
           editedCabalFile = "1ifwwjlhc3l8ycjmmarw6v1nm7jxpgqw2ly0q35idlj0jc0nbxn6";
           libraryHaskellDepends = [
             base MonadPrompt mtl random-source transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Random Variables";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "s3-signer" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, byteable
         , bytestring, case-insensitive, cryptohash, http-types, stdenv
         , time, utf8-string
         }:
         mkDerivation {
           pname = "s3-signer";
           version = "0.5.0.0";
           sha256 = "d73671d5bda0f5f627bbd876916341985c281c3572e6f8406cdf2f14ed9188e4";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder byteable bytestring
             case-insensitive cryptohash http-types time utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/s3-signer";
           description = "Pre-signed Amazon S3 URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "safe";
           version = "0.3.18";
           sha256 = "d7775be28af83beeee2fa8921201c6b93358ba6a23a2967d53e5f382a9ec0fed";
           revision = "1";
           editedCabalFile = "0zr1di94nbvs6848g1ng6azl7nwm7454kjig2c7gcf9sp4q7z8ba";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/safe#readme";
           description = "Library of safe (exception free) functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safe-exceptions" = callPackage
        ({ mkDerivation, base, deepseq, exceptions, stdenv, transformers }:
         mkDerivation {
           pname = "safe-exceptions";
           version = "0.1.7.0";
           sha256 = "18cddc587b52b6faa0287fb6ad6c964d1562571ea2c8ff57a194dd54b5fba069";
           revision = "6";
           editedCabalFile = "0x82m44qwf3fls3ypbdca958l9hhfqyfip6rzzxi7648f0sasv21";
           libraryHaskellDepends = [ base deepseq exceptions transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/safe-exceptions#readme";
           description = "Safe, consistent, and easy exception handling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "safe-exceptions-checked" = callPackage
        ({ mkDerivation, base, deepseq, safe-exceptions, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "safe-exceptions-checked";
           version = "0.1.0";
           sha256 = "d807552b828de308d80805f65ee41f3e25571506b10e6b28b0b81de4aec0ca3f";
           revision = "3";
           editedCabalFile = "004id0k46j545zvkldfcv5qjgxzl35brm9h6fq72y43b9hl2y55f";
           libraryHaskellDepends = [
             base deepseq safe-exceptions transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/safe-exceptions-checked#readme";
           description = "Safe, checked exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safe-foldable" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "safe-foldable";
           version = "0.1.0.0";
           sha256 = "ca7f2ecc0e799c239df8ce56e8592fb8b8264c229ab4e1c66e0f821d299007d1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tejon/safe-foldable#readme";
           description = "Safe wrappers for null-partial Foldable operations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "safe-json" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, dlist
         , hashable, scientific, stdenv, tasty, tasty-hunit
         , tasty-quickcheck, text, time, unordered-containers, uuid-types
         , vector
         }:
         mkDerivation {
           pname = "safe-json";
           version = "0.1.0";
           sha256 = "b853b0a028fe562af5c2acfd4a7a9687edd72783f8075aab7ee662e680f8059e";
           libraryHaskellDepends = [
             aeson base bytestring containers dlist hashable scientific tasty
             tasty-hunit tasty-quickcheck text time unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Vlix/safe-json#readme";
           description = "Automatic JSON format versioning";
           license = stdenv.lib.licenses.mit;
         }) {};
      "safe-money" = callPackage
        ({ mkDerivation, base, binary, constraints, deepseq, hashable
         , QuickCheck, stdenv, text, vector-space
         }:
         mkDerivation {
           pname = "safe-money";
           version = "0.9";
           sha256 = "ee6810cc3f67da59d9300b3baa1c90f9a9d6876d0f563a070a9f3ddcbcbe7d30";
           libraryHaskellDepends = [
             base binary constraints deepseq hashable QuickCheck text
             vector-space
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/safe-money";
           description = "Type-safe and lossless encoding and manipulation of money, fiat currencies, crypto currencies and precious metals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safecopy" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, containers
         , old-time, stdenv, template-haskell, text, time, vector
         }:
         mkDerivation {
           pname = "safecopy";
           version = "0.9.4.3";
           sha256 = "787db1a56b7024ab5619b4f25af5379133f5f2a5e1a0657e66c8dfac1a131f08";
           revision = "1";
           editedCabalFile = "060yxbk2fy5gddnpf6kxppc9fwkhiyldm39bj7873wggnpdc2xds";
           libraryHaskellDepends = [
             array base bytestring cereal containers old-time template-haskell
             text time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acid-state/safecopy";
           description = "Binary serialization with version control";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "safeio" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , directory, exceptions, filepath, resourcet, stdenv, unix
         }:
         mkDerivation {
           pname = "safeio";
           version = "0.0.5.0";
           sha256 = "d5799b6a6cd36e8f5442d991ed3a2076b10e0e3131269a2090b8c9c5c001e311";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators directory exceptions
             filepath resourcet unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/luispedro/safeio#readme";
           description = "Write output to disk atomically";
           license = stdenv.lib.licenses.mit;
         }) {};
      "salak" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default
         , directory, dlist, exceptions, filepath, hashable, heaps
         , megaparsec, mtl, scientific, stdenv, text, time, unliftio-core
         , unordered-containers
         }:
         mkDerivation {
           pname = "salak";
           version = "0.3.5.3";
           sha256 = "4b805722457e5ffeacd8eaef0c97b636aa335993af870e5d36ea9bd7e516df4c";
           revision = "1";
           editedCabalFile = "138c763crbfipcb9ss1lk3wx3482nm2v4zbm3k88h6jszxhmxvav";
           libraryHaskellDepends = [
             base bytestring containers data-default directory dlist exceptions
             filepath hashable heaps megaparsec mtl scientific text time
             unliftio-core unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leptonyu/salak#readme";
           description = "Configuration (re)Loader and Parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "salak-toml" = callPackage
        ({ mkDerivation, base, salak, stdenv, text, time, tomland
         , unordered-containers
         }:
         mkDerivation {
           pname = "salak-toml";
           version = "0.3.5.3";
           sha256 = "de9c112307cfca83ad35254eeb025f2e0793192a8f5f30d36fcdc672aa9857a3";
           libraryHaskellDepends = [
             base salak text time tomland unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leptonyu/salak#readme";
           description = "Configuration Loader for toml";
           license = stdenv.lib.licenses.mit;
         }) {};
      "salak-yaml" = callPackage
        ({ mkDerivation, base, conduit, libyaml, salak, stdenv, text }:
         mkDerivation {
           pname = "salak-yaml";
           version = "0.3.5.3";
           sha256 = "0000a908b36da9e393233e85d47346b9f5c04c4709bbe68a45b92d541ae58c1f";
           revision = "1";
           editedCabalFile = "0x1wkd2yqmgd0lxy45d3w8p53ms942am14flc0m2jz6dk9vi3k7a";
           libraryHaskellDepends = [ base conduit libyaml salak text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leptonyu/salak#readme";
           description = "Configuration Loader for yaml";
           license = stdenv.lib.licenses.mit;
         }) {};
      "saltine" = callPackage
        ({ mkDerivation, base, bytestring, libsodium, profunctors, stdenv
         }:
         mkDerivation {
           pname = "saltine";
           version = "0.1.0.2";
           sha256 = "fd989db905f3e1d742b9fcb9501d6483ffa82620e287cf51b62e0d6d2caaa308";
           libraryHaskellDepends = [ base bytestring profunctors ];
           libraryPkgconfigDepends = [ libsodium ];
           doHaddock = false;
           doCheck = false;
           description = "Cryptography that's easy to digest (NaCl/libsodium bindings)";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) libsodium;};
      "salve" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "salve";
           version = "1.0.8";
           sha256 = "5593d10dfe3ce177cf9037338a2ca80923f796c7a8cd70cc062b32c66cf4ecc1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/salve#readme";
           description = "Semantic version numbers and constraints";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sample-frame" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, storable-record }:
         mkDerivation {
           pname = "sample-frame";
           version = "0.0.3";
           sha256 = "5baf301a4f7b2d52e6b9b9c06b10afd3938de0be6d09736d0188616cd9027247";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base QuickCheck storable-record ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
           description = "Handling of samples in an (audio) signal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sample-frame-np" = callPackage
        ({ mkDerivation, base, numeric-prelude, sample-frame, stdenv }:
         mkDerivation {
           pname = "sample-frame-np";
           version = "0.0.4.1";
           sha256 = "b1db7621b07503f5fe49390bf1e1b4257c49f4760d617121a23d845278f93624";
           libraryHaskellDepends = [ base numeric-prelude sample-frame ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
           description = "Orphan instances for types from sample-frame and numericprelude";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sampling" = callPackage
        ({ mkDerivation, base, containers, foldl, mwc-random, primitive
         , stdenv, vector
         }:
         mkDerivation {
           pname = "sampling";
           version = "0.3.3";
           sha256 = "c8bedc93d61e6b1939f6802d7e21003e9e36abdd6f21a9651179d4d82aa00e0d";
           revision = "1";
           editedCabalFile = "168k8ykppa8pikfxy1gmby63kfzr833vswh8wcchz8li9vkd4w2h";
           libraryHaskellDepends = [
             base containers foldl mwc-random primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtobin/sampling";
           description = "Sample values from collections";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sandman" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , optparse-applicative, process, stdenv, text, unix-compat
         }:
         mkDerivation {
           pname = "sandman";
           version = "0.2.0.1";
           sha256 = "407d283e1fc4a2a369615bac569683bf399ac14ddbce1331850bfe1d7837ce64";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal containers directory filepath optparse-applicative
             process text unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/sandman#readme";
           description = "Manages Cabal sandboxes to avoid rebuilding packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "say" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, transformers }:
         mkDerivation {
           pname = "say";
           version = "0.1.0.1";
           sha256 = "f639656fc21925c45f3f55769b9fb7a90699e943376a725e215a5deea473b3e4";
           libraryHaskellDepends = [ base bytestring text transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/say#readme";
           description = "Send textual messages to a Handle in a thread-friendly way";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sbp" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, array, base
         , base64-bytestring, basic-prelude, binary, binary-conduit
         , bytestring, cmdargs, conduit, conduit-extra, data-binary-ieee754
         , lens, lens-aeson, monad-loops, resourcet, stdenv
         , template-haskell, text, time, yaml
         }:
         mkDerivation {
           pname = "sbp";
           version = "2.6.3";
           sha256 = "316e4c2301fece2db29ffc5cbca45c00f4d20539b1a5c14e20b43c3a8ee2a20d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson array base base64-bytestring basic-prelude binary bytestring
             data-binary-ieee754 lens lens-aeson monad-loops template-haskell
             text
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base basic-prelude binary-conduit bytestring
             cmdargs conduit conduit-extra resourcet time yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/swift-nav/libsbp";
           description = "SwiftNav's SBP Library";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "sbv" = callPackage
        ({ mkDerivation, array, async, base, containers, crackNum, deepseq
         , directory, filepath, generic-deriving, ghc, mtl, pretty, process
         , QuickCheck, random, stdenv, syb, template-haskell, time
         , transformers
         }:
         mkDerivation {
           pname = "sbv";
           version = "8.3";
           sha256 = "edb76cda89669194e8b9c8f6d149d7ff0f93dbceb41f3e481fea6193f9805734";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array async base containers crackNum deepseq directory filepath
             generic-deriving ghc mtl pretty process QuickCheck random syb
             template-haskell time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://leventerkok.github.com/sbv/";
           description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scalpel" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, data-default
         , http-client, http-client-tls, scalpel-core, stdenv, tagsoup, text
         }:
         mkDerivation {
           pname = "scalpel";
           version = "0.6.1";
           sha256 = "06eacef7ea7a057005cb9d5b2d61dd73151d7708ccfe5e10de4133aca8fe0933";
           libraryHaskellDepends = [
             base bytestring case-insensitive data-default http-client
             http-client-tls scalpel-core tagsoup text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/scalpel";
           description = "A high level web scraping library for Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "scalpel-core" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default, fail
         , pointedlist, regex-base, regex-tdfa, stdenv, tagsoup, text
         , vector
         }:
         mkDerivation {
           pname = "scalpel-core";
           version = "0.6.1";
           sha256 = "d6bb86efd623ca54d094e88aa31d30cc2f3f2693aad7e38794f9157d0b002fa5";
           libraryHaskellDepends = [
             base bytestring containers data-default fail pointedlist regex-base
             regex-tdfa tagsoup text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/scalpel";
           description = "A high level web scraping library for Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "scanf" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "scanf";
           version = "0.1.0.0";
           sha256 = "5675132f172ab4ed460f440df21e203c09457c2fff34fb6a389129a9da78c375";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/scanf#readme";
           description = "Easy and type-safe format strings for parsing and printing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "scanner" = callPackage
        ({ mkDerivation, base, bytestring, fail, stdenv }:
         mkDerivation {
           pname = "scanner";
           version = "0.3.1";
           sha256 = "53205f5a7dcb7a0547c9394ddb28a6eeb181627f006b875bfc08a88c498218d6";
           libraryHaskellDepends = [ base bytestring fail ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/scanner";
           description = "Fast non-backtracking incremental combinator parsing for bytestrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scheduler" = callPackage
        ({ mkDerivation, atomic-primops, base, Cabal, cabal-doctest
         , deepseq, exceptions, primitive, stdenv, unliftio-core
         }:
         mkDerivation {
           pname = "scheduler";
           version = "1.4.2.1";
           sha256 = "2cf09ecf8350a74a0a66c603b26b358e30d894aab151f7ee9b874a3dcf00951c";
           revision = "1";
           editedCabalFile = "0gz7mkd0nj2bxcjnn50jgyiaks5dbvpm6wy8ygp2c61nnddbv4xx";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             atomic-primops base deepseq exceptions primitive unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lehins/haskell-scheduler";
           description = "Work stealing scheduler";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scientific" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , hashable, integer-gmp, integer-logarithms, primitive, stdenv
         , text
         }:
         mkDerivation {
           pname = "scientific";
           version = "0.3.6.2";
           sha256 = "278d0afc87450254f8a76eab21b5583af63954efc9b74844a17a21a68013140f";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq hashable integer-gmp
             integer-logarithms primitive text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/scientific";
           description = "Numbers represented using scientific notation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scotty" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , case-insensitive, data-default-class, exceptions, fail
         , http-types, monad-control, mtl, nats, network, regex-compat
         , stdenv, text, transformers, transformers-base
         , transformers-compat, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "scotty";
           version = "0.11.5";
           sha256 = "6f3be75e2fed8b7c7d655a96788fe385629ded5196316158d814a0f9873cd2df";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring case-insensitive
             data-default-class exceptions fail http-types monad-control mtl
             nats network regex-compat text transformers transformers-base
             transformers-compat wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scotty-web/scotty";
           description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scrypt" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, entropy
         , stdenv
         }:
         mkDerivation {
           pname = "scrypt";
           version = "0.5.0";
           sha256 = "3ec0a622393e2a4dbbce4c899602c848d924f8516688491b1162331b7093d9b2";
           libraryHaskellDepends = [
             base base64-bytestring bytestring entropy
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/informatikr/scrypt";
           description = "Stronger password hashing via sequential memory-hard functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sdl2" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, linear, SDL2
         , StateVar, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "sdl2";
           version = "2.5.1.0";
           sha256 = "fc1d3d4276b2c4f835a5311075abb240385aae7edad8760f6bda55ed8271ed20";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring exceptions linear StateVar text transformers vector
           ];
           librarySystemDepends = [ SDL2 ];
           libraryPkgconfigDepends = [ SDL2 ];
           doHaddock = false;
           doCheck = false;
           description = "Both high- and low-level bindings to the SDL library (version 2.0.6+).";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) SDL2;};
      "sdl2-gfx" = callPackage
        ({ mkDerivation, base, bytestring, lifted-base, linear
         , monad-control, SDL2, sdl2, SDL2_gfx, stdenv, template-haskell
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "sdl2-gfx";
           version = "0.2";
           sha256 = "8c1e10b7a675d782cd650820c75c4ef9225718ad6aaa3f8db02e869b7720c50d";
           revision = "1";
           editedCabalFile = "1gdasf1rq7gszfhin521cni8bxfzanvssznfi8m2fkgwz6ichhpv";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring lifted-base linear monad-control sdl2
             template-haskell text transformers vector
           ];
           libraryPkgconfigDepends = [ SDL2 SDL2_gfx ];
           executableHaskellDepends = [ base linear sdl2 vector ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_gfx";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_gfx;};
      "sdl2-image" = callPackage
        ({ mkDerivation, base, bytestring, SDL2, sdl2, SDL2_image, stdenv
         , template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "sdl2-image";
           version = "2.0.0";
           sha256 = "399742b2b7e64fe4e58c9d8a44ad29b2c355589233535238f8c9b371de6c26df";
           revision = "1";
           editedCabalFile = "0471p3d1ws5n7r072xgk38n3vzs6ijjkmpv1r05vxn6qninlnq6m";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring sdl2 template-haskell text transformers
           ];
           libraryPkgconfigDepends = [ SDL2 SDL2_image ];
           executableHaskellDepends = [ base sdl2 text ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_image";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_image;};
      "sdl2-mixer" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, lifted-base
         , monad-control, sdl2, SDL2_mixer, stdenv, template-haskell, vector
         }:
         mkDerivation {
           pname = "sdl2-mixer";
           version = "1.1.0";
           sha256 = "0f4c15a1bda7b265923278641d686756292fc2a8f1c5ced7f98916cc98df0acd";
           revision = "1";
           editedCabalFile = "06h708gbvl5z590p6fn10ck6yxjzyjjbmvk6mxcwgygbj76sw2f8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring data-default-class lifted-base monad-control sdl2
             template-haskell vector
           ];
           librarySystemDepends = [ SDL2_mixer ];
           libraryPkgconfigDepends = [ SDL2_mixer ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_mixer";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) SDL2_mixer;};
      "sdl2-ttf" = callPackage
        ({ mkDerivation, base, bytestring, SDL2, sdl2, SDL2_ttf, stdenv
         , template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "sdl2-ttf";
           version = "2.1.0";
           sha256 = "c7656fe923e618d3919d47ac753451b08e6d709372380e15bd3d75b39f2c80f7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring sdl2 template-haskell text transformers
           ];
           libraryPkgconfigDepends = [ SDL2 SDL2_ttf ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_ttf";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_ttf;};
      "secp256k1-haskell" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, cereal
         , deepseq, entropy, hashable, libsecp256k1, QuickCheck, stdenv
         , string-conversions
         }:
         mkDerivation {
           pname = "secp256k1-haskell";
           version = "0.1.8";
           sha256 = "530e371bce0b615b77779cfb78afba30ca06e6add59a0cacad99134e377bb57a";
           libraryHaskellDepends = [
             base base16-bytestring bytestring cereal deepseq entropy hashable
             QuickCheck string-conversions
           ];
           libraryPkgconfigDepends = [ libsecp256k1 ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskoin/secp256k1-haskell#readme";
           description = "Bindings for secp256k1 library from Bitcoin Core";
           license = stdenv.lib.licenses.publicDomain;
         }) {inherit (pkgs) libsecp256k1;};
      "securemem" = callPackage
        ({ mkDerivation, base, byteable, bytestring, ghc-prim, memory
         , stdenv
         }:
         mkDerivation {
           pname = "securemem";
           version = "0.1.10";
           sha256 = "32895a4748508da58207b4867266601af6259b7109af80bbf5d2e9e598e016a6";
           libraryHaskellDepends = [
             base byteable bytestring ghc-prim memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-securemem";
           description = "abstraction to an auto scrubbing and const time eq, memory chunk";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "selda" = callPackage
        ({ mkDerivation, base, bytestring, containers, exceptions, mtl
         , random, stdenv, text, time, uuid-types
         }:
         mkDerivation {
           pname = "selda";
           version = "0.4.0.0";
           sha256 = "71edfb4ef254582b89ee35997afa79be772bd458ea2d3b5f4956657723e41db7";
           libraryHaskellDepends = [
             base bytestring containers exceptions mtl random text time
             uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://selda.link";
           description = "Multi-backend, high-level EDSL for interacting with SQL databases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "selda-json" = callPackage
        ({ mkDerivation, aeson, base, bytestring, selda, stdenv, text }:
         mkDerivation {
           pname = "selda-json";
           version = "0.1.1.0";
           sha256 = "88061090d899eb831c72d39de21d6311ab1219e89188f641c777daf22b2622aa";
           libraryHaskellDepends = [ aeson base bytestring selda text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://selda.link";
           description = "JSON support for the Selda database library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "selda-postgresql" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, postgresql-binary
         , postgresql-libpq, selda, selda-json, stdenv, text, time
         , uuid-types
         }:
         mkDerivation {
           pname = "selda-postgresql";
           version = "0.1.8.0";
           sha256 = "b16d8fcefe4382e6b252025f4d207fdb4696caf14dea472955918e541063f674";
           revision = "1";
           editedCabalFile = "0zbx50lw8d5x7lsx9gpy2ql1n2nryhyd6x7w98lbnb3nzn3szzqr";
           libraryHaskellDepends = [
             base bytestring exceptions postgresql-binary postgresql-libpq selda
             selda-json text time uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/valderman/selda";
           description = "PostgreSQL backend for the Selda database EDSL";
           license = stdenv.lib.licenses.mit;
         }) {};
      "selda-sqlite" = callPackage
        ({ mkDerivation, base, bytestring, direct-sqlite, directory
         , exceptions, selda, stdenv, text, time, uuid-types
         }:
         mkDerivation {
           pname = "selda-sqlite";
           version = "0.1.7.0";
           sha256 = "337e5f5959e3fa6e1b346be7366eb6ab2d5a9178a8b66bc3dc6317d2b47b2a62";
           revision = "1";
           editedCabalFile = "0m9zps90idp41h3fggd30xjqyjy2yyyb572231w5m2ygl4kv8hvh";
           libraryHaskellDepends = [
             base bytestring direct-sqlite directory exceptions selda text time
             uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/valderman/selda";
           description = "SQLite backend for the Selda database EDSL";
           license = stdenv.lib.licenses.mit;
         }) {};
      "selective" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "selective";
           version = "0.3";
           sha256 = "5a09a2a2f15f3d55eab33d177bbd71c83137d6e507ced208b951c50053c2b48c";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snowleopard/selective";
           description = "Selective applicative functors";
           license = stdenv.lib.licenses.mit;
         }) {};
      "semialign" = callPackage
        ({ mkDerivation, base, base-compat, containers, hashable
         , semigroupoids, stdenv, tagged, these, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "semialign";
           version = "1";
           sha256 = "b51c461b5233c9450092fc4dd4c21bdfc4dbb5b2e093e9f57e0d630d90029d00";
           revision = "1";
           editedCabalFile = "0qnqnyfng4kwy2h2anrcy5id2ijnawava3zcc5h5b8ri1y6ks6zi";
           libraryHaskellDepends = [
             base base-compat containers hashable semigroupoids tagged these
             transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isomorphism/these";
           description = "Align and Zip type-classes from the common Semialign ancestor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroupoid-extras" = callPackage
        ({ mkDerivation, base, profunctors, semigroupoids, stdenv }:
         mkDerivation {
           pname = "semigroupoid-extras";
           version = "5";
           sha256 = "102e33b55cc3b15a1b714825a3703f3fc2bb09d8038404af442d35c0ac0c3832";
           libraryHaskellDepends = [ base profunctors semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroupoid-extras";
           description = "Semigroupoids that depend on PolyKinds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroupoids" = callPackage
        ({ mkDerivation, base, base-orphans, bifunctors, Cabal
         , cabal-doctest, comonad, containers, contravariant, distributive
         , hashable, stdenv, tagged, template-haskell, transformers
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "semigroupoids";
           version = "5.3.4";
           sha256 = "00d2e48973c3ab0a5d52616728ed63d0509454c8328148f698720014d7c58964";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base base-orphans bifunctors comonad containers contravariant
             distributive hashable tagged template-haskell transformers
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroupoids";
           description = "Semigroupoids: Category sans id";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroups" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "semigroups";
           version = "0.18.5";
           sha256 = "ab2a96af6e81e31b909c37ba65f436f1493dbf387cfe0de10b6586270c4ce29d";
           revision = "1";
           editedCabalFile = "1inqcxrzzs8xz60pvbmznyi6g6xwzpxv7p6dqlcwariz31grzvs1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroups/";
           description = "Anything that associates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semiring-simple" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "semiring-simple";
           version = "1.0.0.1";
           sha256 = "c08d1b533f4559fc55119f563a6cf3d74ad7c6f5916c2efe00b50d2a5169fd28";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A module for dealing with semirings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semirings" = callPackage
        ({ mkDerivation, base, containers, hashable, integer-gmp, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "semirings";
           version = "0.4.2";
           sha256 = "b2748b4309b780e5a4473a31ad69bed2f04ddc5d03ef099501bb260d535ccc2d";
           revision = "1";
           editedCabalFile = "1wrkcfblq3j2688xg8f1ial05sijkssmdm2rv9sw6jfxiays60vq";
           libraryHaskellDepends = [
             base containers hashable integer-gmp unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chessai/semirings";
           description = "two monoids as one, in holy haskimony";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semver" = callPackage
        ({ mkDerivation, attoparsec, base, deepseq, hashable, stdenv, text
         }:
         mkDerivation {
           pname = "semver";
           version = "0.3.4";
           sha256 = "42dbdacb08f30ac8bf2f014981cb080737f793b89d57626cb7e2ab8c3d768e6b";
           libraryHaskellDepends = [ attoparsec base deepseq hashable text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/semver";
           description = "Representation, manipulation, and de/serialisation of Semantic Versions";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "sendfile" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv }:
         mkDerivation {
           pname = "sendfile";
           version = "0.7.11.1";
           sha256 = "e0e6c45e73578d2d7139e23a965937ac4514e5d310613607bfd4afd1abd50825";
           libraryHaskellDepends = [ base bytestring network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/stepcut/sendfile";
           description = "A portable sendfile library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "seqalign" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "seqalign";
           version = "0.2.0.4";
           sha256 = "4ea194658d865890157d3df882ed21b0c089cdff7f80ea613ae25c5f3d744305";
           libraryHaskellDepends = [ base bytestring vector ];
           doHaddock = false;
           doCheck = false;
           description = "Sequence Alignment";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "serf" = callPackage
        ({ mkDerivation, attoparsec, base, conduit, conduit-extra, mtl
         , operational, process, resourcet, stdenv, text
         }:
         mkDerivation {
           pname = "serf";
           version = "0.1.1.0";
           sha256 = "d6c9c6ddf99a2119c6686732caf9f04ef8e9c4df5519a8bbd4ac7f5531d4c067";
           libraryHaskellDepends = [
             attoparsec base conduit conduit-extra mtl operational process
             resourcet text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sanetracker/serf";
           description = "Interact with Serf via Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serialise" = callPackage
        ({ mkDerivation, array, base, bytestring, cborg, containers
         , ghc-prim, half, hashable, primitive, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "serialise";
           version = "0.2.2.0";
           sha256 = "33bcbb7b3796cf8a4615eadc29f7e382c2dc50d94c62b4825a73ed0687eea19e";
           libraryHaskellDepends = [
             array base bytestring cborg containers ghc-prim half hashable
             primitive text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/well-typed/cborg";
           description = "A binary serialisation library for Haskell values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat, bifunctors
         , bytestring, Cabal, cabal-doctest, case-insensitive, deepseq
         , http-api-data, http-media, http-types, mmorph, mtl, network-uri
         , QuickCheck, singleton-bool, stdenv, string-conversions, tagged
         , text, transformers, vault
         }:
         mkDerivation {
           pname = "servant";
           version = "0.16.2";
           sha256 = "d6fcd5a7ebb9776edad295ec44c6179daad95b6696b02611a4d5af45a70ff47b";
           revision = "1";
           editedCabalFile = "0v913vjklgwyfbn7k2v70943gy4i8ja3y6crpyrg5llxkb81jpbc";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec base base-compat bifunctors bytestring
             case-insensitive deepseq http-api-data http-media http-types mmorph
             mtl network-uri QuickCheck singleton-bool string-conversions tagged
             text transformers vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "A family of combinators for defining webservices APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-JuicyPixels" = callPackage
        ({ mkDerivation, base, bytestring, http-media, JuicyPixels, servant
         , servant-server, stdenv, wai, warp
         }:
         mkDerivation {
           pname = "servant-JuicyPixels";
           version = "0.3.0.5";
           sha256 = "9d563ad9ec2cbb46667c2fa87157e788732cd2bdf873882622fdfa8ebe591dd2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring http-media JuicyPixels servant
           ];
           executableHaskellDepends = [
             base JuicyPixels servant servant-server wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tvh/servant-JuicyPixels";
           description = "Servant support for JuicyPixels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-auth" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "servant-auth";
           version = "0.3.2.0";
           sha256 = "7bb4d5118c072cb3845aaba4287b2d5e34e5ccca96916895456a828bf7a9418b";
           revision = "2";
           editedCabalFile = "06jpxqz5444k19p1n4i4yf2pvql37w9ngssp1grxl42dxk2bcg94";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-servant/servant-auth#readme";
           description = "Authentication combinators for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-auth-docs" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, lens, servant
         , servant-auth, servant-docs, stdenv, text
         }:
         mkDerivation {
           pname = "servant-auth-docs";
           version = "0.2.10.0";
           sha256 = "adf3c33ce4134a78ae7a5c06092ea5812c99d4b942ff2dd685995eb3b2b53e48";
           revision = "4";
           editedCabalFile = "1dvwkaihrm7dc2zdrqqvc0j7zmij487klrmsggsdiid7y68nyrqh";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base lens servant servant-auth servant-docs text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-servant/servant-auth#readme";
           description = "servant-docs/servant-auth compatibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-auth-server" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, blaze-builder
         , bytestring, case-insensitive, cookie, data-default-class, entropy
         , http-types, jose, lens, memory, monad-time, mtl, servant
         , servant-auth, servant-server, stdenv, tagged, text, time
         , unordered-containers, wai
         }:
         mkDerivation {
           pname = "servant-auth-server";
           version = "0.4.5.0";
           sha256 = "de94fc149a50c06c19ef28f5b610b91fd74e8c5b0c1fb4bde50a6444241d7d4b";
           libraryHaskellDepends = [
             aeson base base64-bytestring blaze-builder bytestring
             case-insensitive cookie data-default-class entropy http-types jose
             lens memory monad-time mtl servant servant-auth servant-server
             tagged text time unordered-containers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-servant/servant-auth#readme";
           description = "servant-server/servant-auth compatibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-auth-swagger" = callPackage
        ({ mkDerivation, base, lens, servant, servant-auth, servant-swagger
         , stdenv, swagger2, text
         }:
         mkDerivation {
           pname = "servant-auth-swagger";
           version = "0.2.10.0";
           sha256 = "50a783639eb882fd5047d69245f7770817658814d8c409b547ebdddae05acd12";
           revision = "3";
           editedCabalFile = "087faa5bg2hlxyhg7jzy2jj4fzs3dkp0znsbabrharcvdlkpqj1r";
           libraryHaskellDepends = [
             base lens servant servant-auth servant-swagger swagger2 text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-servant/servant-auth#readme";
           description = "servant-swagger/servant-auth compatibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-auth-wordpress" = callPackage
        ({ mkDerivation, base, mtl, servant-server, stdenv, text, time, wai
         , wordpress-auth
         }:
         mkDerivation {
           pname = "servant-auth-wordpress";
           version = "1.0.0.1";
           sha256 = "882750ffc3b86d347c1d7b13abad92586f2b6291f945fb913de2eaf9eb5bcf22";
           libraryHaskellDepends = [
             base mtl servant-server text time wai wordpress-auth
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prikhi/wordpress-auth#readme";
           description = "Authenticate Routes Using Wordpress Cookies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, http-media, servant, stdenv }:
         mkDerivation {
           pname = "servant-blaze";
           version = "0.9";
           sha256 = "79981f35382b8dc0bd0492a1362f6bbb3e77ff72649cc09ab513c5530dbbd6dd";
           revision = "3";
           editedCabalFile = "0pn9ca2jmx71clz0j9nlz1lwmr2xv39zqfda10al11am9mc4j8n4";
           libraryHaskellDepends = [ base blaze-html http-media servant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Blaze-html support for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-cassava" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, cassava, http-media
         , servant, stdenv, vector
         }:
         mkDerivation {
           pname = "servant-cassava";
           version = "0.10";
           sha256 = "9b2c5d906f3a4bb2767b2ce91f12a74e24adceadd296220b5d7216c5e1f3560e";
           revision = "7";
           editedCabalFile = "0n4nbm0axa9qd805jb3gja2p2fiwvhjpvdi5rhlwh4shm9crppcy";
           libraryHaskellDepends = [
             base base-compat bytestring cassava http-media servant vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Servant CSV content-type for cassava";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-checked-exceptions" = callPackage
        ({ mkDerivation, base, bytestring, http-types, servant
         , servant-checked-exceptions-core, servant-client
         , servant-client-core, servant-server, stdenv, wai, world-peace
         }:
         mkDerivation {
           pname = "servant-checked-exceptions";
           version = "2.2.0.0";
           sha256 = "70156713a8a612469efc074dd26d3a4d91fcdc9425d1a96dc214343165b60bea";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring http-types servant servant-checked-exceptions-core
             servant-client servant-client-core servant-server wai world-peace
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/servant-checked-exceptions";
           description = "Checked exceptions for Servant APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-checked-exceptions-core" = callPackage
        ({ mkDerivation, aeson, base, bytestring, contravariant, http-media
         , http-types, mtl, profunctors, servant, servant-docs, stdenv
         , tagged, text, transformers, world-peace
         }:
         mkDerivation {
           pname = "servant-checked-exceptions-core";
           version = "2.2.0.0";
           sha256 = "ccf46e9b9e91f7b3eee0c1f32c1a4e09fb00ba89ea5d06aef4c019d9349f2ac7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring contravariant http-media http-types mtl
             profunctors servant servant-docs tagged text transformers
             world-peace
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/servant-checked-exceptions";
           description = "Checked exceptions for Servant APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-cli" = callPackage
        ({ mkDerivation, aeson, base, bytestring, case-insensitive
         , containers, filepath, free, functor-combinators, http-client
         , http-types, optparse-applicative, profunctors, random
         , recursion-schemes, servant, servant-client, servant-client-core
         , servant-docs, servant-server, stdenv, text, transformers, vinyl
         , warp
         }:
         mkDerivation {
           pname = "servant-cli";
           version = "0.1.0.1";
           sha256 = "b646df84a8e27f782aa9e592275c6838b1b480e9f48dad948cf52c901443a189";
           revision = "1";
           editedCabalFile = "1h29x87kqyylwigz86bwrgjdykk1119alsy65a7jkkcrj7a3syqa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring case-insensitive containers filepath free
             functor-combinators http-types optparse-applicative profunctors
             recursion-schemes servant servant-client-core servant-docs text
             transformers vinyl
           ];
           executableHaskellDepends = [
             aeson base bytestring containers http-client optparse-applicative
             random servant servant-client servant-server text vinyl warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/servant-cli#readme";
           description = "Command line interface for Servant API clients";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-client" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, containers, deepseq
         , exceptions, http-client, http-media, http-types, kan-extensions
         , monad-control, mtl, semigroupoids, servant, servant-client-core
         , stdenv, stm, text, time, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "servant-client";
           version = "0.16.0.1";
           sha256 = "0c517cff5b672fdc1d7dd7d4fa282f6827fc0cb2e0f89622d7a897da56e0d9f0";
           libraryHaskellDepends = [
             base base-compat bytestring containers deepseq exceptions
             http-client http-media http-types kan-extensions monad-control mtl
             semigroupoids servant servant-client-core stm text time
             transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "Automatic derivation of querying functions for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-client-core" = callPackage
        ({ mkDerivation, aeson, base, base-compat, base64-bytestring
         , bytestring, containers, deepseq, exceptions, free, http-media
         , http-types, network-uri, safe, servant, stdenv, template-haskell
         , text, transformers
         }:
         mkDerivation {
           pname = "servant-client-core";
           version = "0.16";
           sha256 = "bf8d750ba21fef9772387d0d03e35acac51093ea9ab031c8951c2af38f4a7b33";
           revision = "2";
           editedCabalFile = "172diqnz0ddvlfznfjk0k1l02f1mb11i1dkzr6rizdmhb66qpqil";
           libraryHaskellDepends = [
             aeson base base-compat base64-bytestring bytestring containers
             deepseq exceptions free http-media http-types network-uri safe
             servant template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "Core functionality and class for client function generation for servant APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, mtl, resourcet, servant
         , stdenv, unliftio-core
         }:
         mkDerivation {
           pname = "servant-conduit";
           version = "0.15";
           sha256 = "dfd115301f29fd517cab6805211b8d10d4bdcf1cc5eb399aebb9124d199ef656";
           revision = "3";
           editedCabalFile = "0adximf4hg3bf7d9mkcjdsp5klg787ryb1hy3j49fg39l1rszac4";
           libraryHaskellDepends = [
             base bytestring conduit mtl resourcet servant unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "Servant Stream support for conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-docs" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, base-compat, bytestring
         , case-insensitive, hashable, http-media, http-types, lens, servant
         , stdenv, string-conversions, text, universe-base
         , unordered-containers
         }:
         mkDerivation {
           pname = "servant-docs";
           version = "0.11.4";
           sha256 = "0de0ea23739e41b411941a4ceb0721bad217a939c1e37a833991f75a4ace65fc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base base-compat bytestring case-insensitive
             hashable http-media http-types lens servant string-conversions text
             universe-base unordered-containers
           ];
           executableHaskellDepends = [
             aeson base lens servant string-conversions text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "generate API docs for your servant webservice";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-elm" = callPackage
        ({ mkDerivation, aeson, base, directory, elm-bridge, lens, servant
         , servant-foreign, stdenv, text, wl-pprint-text
         }:
         mkDerivation {
           pname = "servant-elm";
           version = "0.6.1";
           sha256 = "02c6b1555cf99c75625e6b63823222939a758f9591718486ed948b9eb5584f2a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base directory elm-bridge lens servant servant-foreign text
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mattjbray/servant-elm#readme";
           description = "Automatically derive Elm functions to query servant webservices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-foreign" = callPackage
        ({ mkDerivation, base, base-compat, http-types, lens, servant
         , stdenv, text
         }:
         mkDerivation {
           pname = "servant-foreign";
           version = "0.15";
           sha256 = "f1197f1319a735b37c5fdd991556bf34b780a9b87d0e57d936a42ae6734bbd73";
           revision = "2";
           editedCabalFile = "0axz78g0vhasq5cvqg1lq0b2qanmb768f1bvzbfx58rn6arwflnj";
           libraryHaskellDepends = [
             base base-compat http-types lens servant text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "Helpers for generating clients for servant APIs in any programming language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-http-streams" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , containers, deepseq, exceptions, http-common, http-media
         , http-streams, http-types, io-streams, kan-extensions
         , monad-control, mtl, semigroupoids, servant, servant-client-core
         , stdenv, text, time, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "servant-http-streams";
           version = "0.16.0.1";
           sha256 = "ef0f15b77484e7d8a31b29f442e706328be96f8aa6c4de3f45673b65178adc59";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive containers deepseq
             exceptions http-common http-media http-streams http-types
             io-streams kan-extensions monad-control mtl semigroupoids servant
             servant-client-core text time transformers transformers-base
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "Automatic derivation of querying functions for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-js" = callPackage
        ({ mkDerivation, base, base-compat, charset, lens, servant
         , servant-foreign, stdenv, text
         }:
         mkDerivation {
           pname = "servant-js";
           version = "0.9.4.1";
           sha256 = "8d8c43203f44d6debdf36e95b95bcfe995f3aebf95e75d35022f097c40b39a00";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat charset lens servant servant-foreign text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Automatically derive javascript functions to query servant webservices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-kotlin" = callPackage
        ({ mkDerivation, base, containers, directory, formatting, lens
         , servant, servant-foreign, stdenv, text, time, wl-pprint-text
         }:
         mkDerivation {
           pname = "servant-kotlin";
           version = "0.1.1.9";
           sha256 = "15070843a436dfcee9d19a376fff920e395c2649225affb5181a2e4e12b9dcf3";
           libraryHaskellDepends = [
             base containers directory formatting lens servant servant-foreign
             text time wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matsubara0507/servant-kotlin#readme";
           description = "Automatically derive Kotlin class to query servant webservices";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servant-lucid" = callPackage
        ({ mkDerivation, base, http-media, lucid, servant, stdenv, text }:
         mkDerivation {
           pname = "servant-lucid";
           version = "0.9";
           sha256 = "6e3d6528a624a9b07c8f20359cfdf2392a7c4ec950b042abf56c802623e355f5";
           revision = "3";
           editedCabalFile = "10j29y9zjflh88csvn7zi4pm8jr9dxsglin94wypjrhcwy7yj1ic";
           libraryHaskellDepends = [ base http-media lucid servant text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Servant support for lucid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-machines" = callPackage
        ({ mkDerivation, base, bytestring, machines, mtl, servant, stdenv
         }:
         mkDerivation {
           pname = "servant-machines";
           version = "0.15";
           sha256 = "b18cc998c70adb9fc084942f184a2a6c44f6fc2eb830869a1a706ebeb706ec8c";
           revision = "4";
           editedCabalFile = "1p8ld4cxwsirlwz5ihrz6fyxbary4llxsnby42vjnhl19gylhdmk";
           libraryHaskellDepends = [ base bytestring machines mtl servant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "Servant Stream support for machines";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-mock" = callPackage
        ({ mkDerivation, aeson, base, base-compat, bytestring, http-types
         , QuickCheck, servant, servant-server, stdenv, transformers, wai
         , warp
         }:
         mkDerivation {
           pname = "servant-mock";
           version = "0.8.5";
           sha256 = "ae547026ddc5d15bec0af9ea9324954f88dd605cae0775c81c45b1723dc77b81";
           revision = "3";
           editedCabalFile = "1137vz9xm8iwj6x8h1q1yify6c1lahy0dxj6hpbhgi4s3mqkhm2g";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat bytestring http-types QuickCheck servant
             servant-server transformers wai
           ];
           executableHaskellDepends = [
             aeson base QuickCheck servant-server warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Derive a mock server for free from your servant API types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-multipart" = callPackage
        ({ mkDerivation, array, base, bytestring, directory, http-media
         , lens, random, resourcet, servant, servant-client-core
         , servant-docs, servant-foreign, servant-server, stdenv, text
         , transformers, wai, wai-extra
         }:
         mkDerivation {
           pname = "servant-multipart";
           version = "0.11.5";
           sha256 = "0afe0afbe1463c6f178c9441f6a840a48d53481a0817fec1e8176c17fc007fa5";
           libraryHaskellDepends = [
             array base bytestring directory http-media lens random resourcet
             servant servant-client-core servant-docs servant-foreign
             servant-server text transformers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-multipart#readme";
           description = "multipart/form-data (e.g file upload) support for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-pipes" = callPackage
        ({ mkDerivation, base, bytestring, monad-control, mtl, pipes
         , pipes-safe, servant, stdenv
         }:
         mkDerivation {
           pname = "servant-pipes";
           version = "0.15.1";
           sha256 = "7e65ff5733a86d3a395cfc400ed0162b765fa2248e6bfa4f08b4a9d3913b56e4";
           revision = "1";
           editedCabalFile = "0xm07qxw0szffm8krbvj2kdflwlx2ixlhp5scaj3fhwivycyayvg";
           libraryHaskellDepends = [
             base bytestring monad-control mtl pipes pipes-safe servant
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "Servant Stream support for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-rawm" = callPackage
        ({ mkDerivation, base, bytestring, filepath, http-client
         , http-media, http-types, lens, resourcet, servant-client
         , servant-client-core, servant-docs, servant-server, stdenv, wai
         , wai-app-static
         }:
         mkDerivation {
           pname = "servant-rawm";
           version = "0.3.2.0";
           sha256 = "2d90c1f6a284673ed28fc617170f191f5ed2f45ffd14e61fe49c575a7f426d04";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring filepath http-client http-media http-types lens
             resourcet servant-client servant-client-core servant-docs
             servant-server wai wai-app-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/servant-rawm";
           description = "Embed a raw 'Application' in a Servant API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-ruby" = callPackage
        ({ mkDerivation, base, casing, servant-foreign, stdenv, text }:
         mkDerivation {
           pname = "servant-ruby";
           version = "0.9.0.0";
           sha256 = "63787834369f2fce2216af3a38157af9370a0e4d02965ccd407ec493a62127f4";
           libraryHaskellDepends = [ base casing servant-foreign text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joneshf/servant-ruby#readme";
           description = "Generate a Ruby client from a Servant API with Net::HTTP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-server" = callPackage
        ({ mkDerivation, aeson, base, base-compat, base64-bytestring
         , bytestring, Cabal, cabal-doctest, containers, exceptions
         , filepath, http-api-data, http-media, http-types, monad-control
         , mtl, network, network-uri, resourcet, servant, stdenv
         , string-conversions, tagged, text, transformers, transformers-base
         , wai, wai-app-static, warp, word8
         }:
         mkDerivation {
           pname = "servant-server";
           version = "0.16.2";
           sha256 = "002d8cdcd64fea4623b86fe29e4954b36e8ec159ec78684e5ce59c5f9e7c93d0";
           revision = "1";
           editedCabalFile = "017aw6wyhi5g7zkk59yj44r1n02zzin2w9wdskwqys7iqkvnvczn";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base base-compat base64-bytestring bytestring containers exceptions
             filepath http-api-data http-media http-types monad-control mtl
             network network-uri resourcet servant string-conversions tagged
             text transformers transformers-base wai wai-app-static word8
           ];
           executableHaskellDepends = [
             aeson base base-compat servant text wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://docs.servant.dev/";
           description = "A family of combinators for defining webservices APIs and serving them";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-static-th" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers
         , directory, filepath, http-media, semigroups, servant
         , servant-blaze, servant-server, stdenv, template-haskell, text
         }:
         mkDerivation {
           pname = "servant-static-th";
           version = "0.2.2.1";
           sha256 = "35d3c1d24fece75c43d6063b3beba6ef37aa34241304761543be5430e2d32596";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html bytestring containers directory filepath http-media
             semigroups servant servant-blaze servant-server template-haskell
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/servant-static-th";
           description = "Embed a directory of static files in your Servant server";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-swagger" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, base-compat, bytestring
         , Cabal, cabal-doctest, hspec, http-media
         , insert-ordered-containers, lens, QuickCheck, servant
         , singleton-bool, stdenv, swagger2, text, unordered-containers
         }:
         mkDerivation {
           pname = "servant-swagger";
           version = "1.1.7.1";
           sha256 = "8d46b4bb8cc1fa178aa8ffcb54d194a959d7f6b1bce1d039c24634bd8addb26d";
           revision = "2";
           editedCabalFile = "0ij93pd7lsq39grglhfrdjrg21bxigmhavy51xilg6rrpnfcj2wv";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson aeson-pretty base base-compat bytestring hspec http-media
             insert-ordered-containers lens QuickCheck servant singleton-bool
             swagger2 text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-swagger";
           description = "Generate a Swagger/OpenAPI/OAS 2.0 specification for your servant API.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-swagger-ui" = callPackage
        ({ mkDerivation, base, bytestring, file-embed-lzma, servant
         , servant-server, servant-swagger-ui-core, stdenv, swagger2, text
         }:
         mkDerivation {
           pname = "servant-swagger-ui";
           version = "0.3.4.3.23.11";
           sha256 = "0a4a0aea76b303b6594a07d4514bb23b60c8e7593daac40036d8fc4d0e34d967";
           revision = "2";
           editedCabalFile = "1wmxiihiwjkzwqqj2996fqmixz6jblj5gh43p7dxbww3g9fdz8qi";
           libraryHaskellDepends = [
             base bytestring file-embed-lzma servant servant-server
             servant-swagger-ui-core swagger2 text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-swagger-ui";
           description = "Servant swagger ui";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-swagger-ui-core" = callPackage
        ({ mkDerivation, base, blaze-markup, bytestring, http-media
         , servant, servant-blaze, servant-server, stdenv, swagger2, text
         , transformers, transformers-compat, wai-app-static
         }:
         mkDerivation {
           pname = "servant-swagger-ui-core";
           version = "0.3.3";
           sha256 = "03724a312f08d9f59893cf8a55be719219c0490bdd3fc0f83359ca459995ed3e";
           revision = "3";
           editedCabalFile = "0yx3q7y533v61ca4bm4wi8h7chbghj2rz92b330a544w7ac8il0p";
           libraryHaskellDepends = [
             base blaze-markup bytestring http-media servant servant-blaze
             servant-server swagger2 text transformers transformers-compat
             wai-app-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-swagger-ui";
           description = "Servant swagger ui core components";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-swagger-ui-redoc" = callPackage
        ({ mkDerivation, base, bytestring, file-embed-lzma, servant
         , servant-server, servant-swagger-ui-core, stdenv, swagger2, text
         }:
         mkDerivation {
           pname = "servant-swagger-ui-redoc";
           version = "0.3.3.1.22.3";
           sha256 = "fbdf5282db9851d2d752842a3748348f7d21d372f1e99083723b090703ccf32f";
           revision = "2";
           editedCabalFile = "195vfc3871l1clk85kzxjvz1zr986lbvgy26fazfkfsn032s74c6";
           libraryHaskellDepends = [
             base bytestring file-embed-lzma servant servant-server
             servant-swagger-ui-core swagger2 text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-swagger-ui";
           description = "Servant swagger ui: ReDoc theme";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-tracing" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, bytestring-lexing
         , containers, hashable, http-api-data, http-client, lifted-base
         , monad-control, mtl, random, servant, servant-server, stdenv, text
         , time, transformers, unordered-containers, wai, warp
         }:
         mkDerivation {
           pname = "servant-tracing";
           version = "0.1.0.2";
           sha256 = "3edf2e58c60b6624a81c57bbc606889d779ba0cc57fc785240cb353f9caaea62";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base bytestring bytestring-lexing containers hashable
             http-api-data http-client lifted-base monad-control mtl random
             servant servant-server text time unordered-containers wai
           ];
           executableHaskellDepends = [
             async base bytestring containers http-client lifted-base
             monad-control mtl servant servant-server text transformers wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisCoffey/haskell-opentracing-light#readme";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servant-xml" = callPackage
        ({ mkDerivation, base, bytestring, http-media, servant, stdenv
         , xmlbf, xmlbf-xeno
         }:
         mkDerivation {
           pname = "servant-xml";
           version = "1.0.1.4";
           sha256 = "5dd006f1d303ffdb670ceea96bfd5eef07d11a75d2a3de47e9ca32c917e1ff4b";
           libraryHaskellDepends = [
             base bytestring http-media servant xmlbf xmlbf-xeno
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fosskers/servant-xml";
           description = "Servant support for the XML Content-Type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-yaml" = callPackage
        ({ mkDerivation, base, bytestring, http-media, servant, stdenv
         , yaml
         }:
         mkDerivation {
           pname = "servant-yaml";
           version = "0.1.0.1";
           sha256 = "01547419509cd0424885146734c08acede329a660022f534ac9b19cc685bf601";
           revision = "4";
           editedCabalFile = "0k9jg3vf0p1332243mji4lzm3lk3frsmxxlz6lgg68rwh3baz6f0";
           libraryHaskellDepends = [
             base bytestring http-media servant yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-yaml#readme";
           description = "Servant support for yaml";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "serversession" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , data-default, hashable, nonce, path-pieces, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "serversession";
           version = "1.0.1";
           sha256 = "3ffbefd87017e8d46fbbe380f59e24672aa9c06b999da5f9ae0b052094d94822";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring data-default hashable nonce
             path-pieces text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Secure, modular server-side sessions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-frontend-wai" = callPackage
        ({ mkDerivation, base, bytestring, cookie, data-default
         , path-pieces, serversession, stdenv, text, time, transformers
         , unordered-containers, vault, wai, wai-session
         }:
         mkDerivation {
           pname = "serversession-frontend-wai";
           version = "1.0";
           sha256 = "0b48130e3d3915dc46ec2392984e7862d066f6ddd454127a98b0c21c2574b167";
           libraryHaskellDepends = [
             base bytestring cookie data-default path-pieces serversession text
             time transformers unordered-containers vault wai wai-session
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "wai-session bindings for serversession";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servius" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, bytestring
         , cmark-gfm, http-types, shakespeare, stdenv, text, wai
         , wai-app-static
         }:
         mkDerivation {
           pname = "servius";
           version = "1.2.3.0";
           sha256 = "72c4b63e85df0cb51935bec85e31d44c6ee5cafd0015bd5e6ff44286e9e18b27";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base blaze-builder blaze-html bytestring cmark-gfm http-types
             shakespeare text wai wai-app-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/servius#readme";
           description = "Warp web server with template rendering";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ses-html" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-html, byteable
         , bytestring, cryptohash, HsOpenSSL, http-streams, stdenv, tagsoup
         , time
         }:
         mkDerivation {
           pname = "ses-html";
           version = "0.4.0.0";
           sha256 = "cff76ee03b538e69a3d107cd63d577210cf0f9879d470bf55519e887e2a8a08f";
           libraryHaskellDepends = [
             base base64-bytestring blaze-html byteable bytestring cryptohash
             HsOpenSSL http-streams tagsoup time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Send HTML formatted emails using Amazon's SES REST API with blaze";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "set-cover" = callPackage
        ({ mkDerivation, base, containers, enummapset, psqueues, semigroups
         , stdenv, utility-ht
         }:
         mkDerivation {
           pname = "set-cover";
           version = "0.0.9";
           sha256 = "afebfd20c00ff68cd99c7e457d15542003228a56d98af63565549a77852f73e1";
           revision = "2";
           editedCabalFile = "1jpg9iyq0mymdbq392nfmicwfmcmq5mg688ndmhvjx08ljdl54ha";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers enummapset psqueues semigroups utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/set-cover/";
           description = "Solve exact set cover problems like Sudoku, 8 Queens, Soma Cube, Tetris Cube";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "setenv" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "setenv";
           version = "0.1.1.3";
           sha256 = "e358df39afc03d5a39e2ec650652d845c85c80cc98fe331654deafb4767ecb32";
           revision = "1";
           editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           description = "A cross-platform library for setting environment variables";
           license = stdenv.lib.licenses.mit;
         }) {};
      "setlocale" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "setlocale";
           version = "1.0.0.9";
           sha256 = "3bb386f705fc918615b288f55422ce6c14f087ff36e554cbafb9ffab9dea66a1";
           revision = "1";
           editedCabalFile = "01i087l8v129q90jf09khaw5p4iqix5s17gzgfz2pbi030zhb82h";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/Kritzefitz/haskell-setlocale";
           description = "Haskell bindings to setlocale";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sexp-grammar" = callPackage
        ({ mkDerivation, alex, array, base, bytestring, containers, deepseq
         , happy, invertible-grammar, prettyprinter, recursion-schemes
         , scientific, semigroups, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "sexp-grammar";
           version = "2.0.2";
           sha256 = "270d54ac86766cff367013287a42e17fd41f96ab99ecfcf1a72d5d2e8e2fb6b2";
           libraryHaskellDepends = [
             array base bytestring containers deepseq invertible-grammar
             prettyprinter recursion-schemes scientific semigroups text
             utf8-string
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/esmolanka/sexp-grammar";
           description = "Invertible grammar combinators for S-expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sexpr-parser" = callPackage
        ({ mkDerivation, base, bytestring, megaparsec, process, stdenv }:
         mkDerivation {
           pname = "sexpr-parser";
           version = "0.1.1.2";
           sha256 = "4948477db69a57c907dbd99f27ac0b861b92971c48a9368f8e627f39510b74a0";
           revision = "3";
           editedCabalFile = "0sv07n6s023z2dl6n89kx26nnc3nrkpmbbfj4sqcrj6i3q4k06g4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base megaparsec ];
           executableHaskellDepends = [ base bytestring megaparsec process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rcook/sexpr-parser#readme";
           description = "Simple s-expression parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shake" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, directory
         , extra, file-embed, filepath, filepattern, hashable, heaps
         , js-dgtable, js-flot, js-jquery, primitive, process, random
         , stdenv, template-haskell, time, transformers, unix
         , unordered-containers, utf8-string
         }:
         mkDerivation {
           pname = "shake";
           version = "0.18.5";
           sha256 = "576ab57f53b8051f67ceeb97bd9abf2e0926f592334a7a1c27c07b36afca240f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bytestring deepseq directory extra filepath filepattern
             hashable heaps js-dgtable js-flot js-jquery primitive process
             random time transformers unix unordered-containers utf8-string
           ];
           executableHaskellDepends = [
             base binary bytestring deepseq directory extra file-embed filepath
             filepattern hashable heaps js-dgtable js-flot js-jquery primitive
             process random template-haskell time transformers unix
             unordered-containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://shakebuild.com";
           description = "Build system library, like Make, but more accurate dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shake-language-c" = callPackage
        ({ mkDerivation, base, data-default-class, fclabels, process, shake
         , split, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "shake-language-c";
           version = "0.12.0";
           sha256 = "661e350179e55c930c3c36f53853db2bc2697d88c5265049085cea09f5aa1ab0";
           libraryHaskellDepends = [
             base data-default-class fclabels process shake split
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/samplecount/shake-language-c";
           description = "Utilities for cross-compiling with Shake";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "shakespeare" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , containers, directory, exceptions, ghc-prim, parsec, process
         , scientific, stdenv, template-haskell, text, time, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "shakespeare";
           version = "2.0.24";
           sha256 = "03f2f202be187a5aaa835c49cfdcacf6fe8b6241ab48f89e76cef7b355c1f3ba";
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring containers directory
             exceptions ghc-prim parsec process scientific template-haskell text
             time transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/shakespearean-templates";
           description = "A toolkit for making compile-time interpolated templates";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shared-memory" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "shared-memory";
           version = "0.2.0.0";
           sha256 = "266739418194429f0e3a316decd28bf15ae8cc4ce2e1e19c523dc92b3f023abc";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/shared-memory";
           description = "POSIX shared memory";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shell-conduit" = callPackage
        ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
         , directory, filepath, monads-tf, process, resourcet, semigroups
         , split, stdenv, template-haskell, text, transformers, unix
         , unliftio
         }:
         mkDerivation {
           pname = "shell-conduit";
           version = "4.7.0";
           sha256 = "6f31c5b6fb46219c4da575b4405f1a5af51eed1f22073d315df80c8a40ddbe30";
           libraryHaskellDepends = [
             async base bytestring conduit conduit-extra directory filepath
             monads-tf process resourcet semigroups split template-haskell text
             transformers unix unliftio
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/shell-conduit";
           description = "Write shell scripts with Conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shell-escape" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, stdenv
         , vector
         }:
         mkDerivation {
           pname = "shell-escape";
           version = "0.2.0";
           sha256 = "e23c9ba94a27e45430cb39e6bb236557e789d24129257c3def377f441b2cba4a";
           libraryHaskellDepends = [
             base binary bytestring containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solidsnack/shell-escape";
           description = "Shell escaping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shellmet" = callPackage
        ({ mkDerivation, base, markdown-unlit, process, stdenv, text }:
         mkDerivation {
           pname = "shellmet";
           version = "0.0.3.0";
           sha256 = "897c1c7c9b57a7d626b5a3976fab348e232f38b01989796253316b3811fd69c4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base process text ];
           executableHaskellDepends = [ base text ];
           executableToolDepends = [ markdown-unlit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/shellmet";
           description = "Out of the shell solution for scripting in Haskell";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "shelltestrunner" = callPackage
        ({ mkDerivation, base, cmdargs, Diff, directory, filemanip
         , filepath, HUnit, parsec, pretty-show, process, regex-tdfa, safe
         , stdenv, test-framework, test-framework-hunit, utf8-string
         }:
         mkDerivation {
           pname = "shelltestrunner";
           version = "1.9";
           sha256 = "cbc4358d447e32babe4572cda0d530c648cc4c67805f9f88002999c717feb3a8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base cmdargs Diff directory filemanip filepath HUnit parsec
             pretty-show process regex-tdfa safe test-framework
             test-framework-hunit utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmichael/shelltestrunner";
           description = "Easy, repeatable testing of CLI programs/commands";
           license = "GPL";
         }) {};
      "shelly" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, directory
         , enclosed-exceptions, exceptions, lifted-async, lifted-base
         , monad-control, mtl, process, stdenv, system-fileio
         , system-filepath, text, time, transformers, transformers-base
         , unix, unix-compat
         }:
         mkDerivation {
           pname = "shelly";
           version = "1.8.1";
           sha256 = "de8814879c7a5e7f1f7f0d9c56c1dfee30d6d63ba1140946e5ed158dd75e6e08";
           revision = "1";
           editedCabalFile = "0crf0m077wky76f5nav2p9q4fa5q4yhv5l4bq9hd073dzdaywhz0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring containers directory enclosed-exceptions
             exceptions lifted-async lifted-base monad-control mtl process
             system-fileio system-filepath text time transformers
             transformers-base unix unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/Shelly.hs";
           description = "shell-like (systems) programming in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shikensu" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, filepath, flow
         , Glob, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "shikensu";
           version = "0.3.11";
           sha256 = "69f59f067522715a86f60bf4e60f9597bc1243e50d204b99b31e89e8e8c63010";
           libraryHaskellDepends = [
             aeson base bytestring directory filepath flow Glob text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/icidasset/shikensu#readme";
           description = "Run a sequence of functions on in-memory representations of files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shortcut-links" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "shortcut-links";
           version = "0.4.2.1";
           sha256 = "0d36ecfabc8e2d3a4c0015b521b6cb8efa8469bbd518a509326f07a3aa24deff";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/shortcut-links";
           description = "Link shortcuts for use in text markup";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "should-not-typecheck" = callPackage
        ({ mkDerivation, base, deepseq, HUnit, stdenv }:
         mkDerivation {
           pname = "should-not-typecheck";
           version = "2.1.0";
           sha256 = "f538ac70ce07679bc2e6c1651db82a86866664ab995665fdc78e6cb12bd8d591";
           libraryHaskellDepends = [ base deepseq HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/CRogers/should-not-typecheck";
           description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "show-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "show-combinators";
           version = "0.1.1.0";
           sha256 = "d53abf2b289a3075555f1ede76f5beba0fadce352cd94efbad610bc1eb76020a";
           revision = "1";
           editedCabalFile = "1zr6xw4fvgx187yiqy7n0r9mnasyv1hxg2q9xzw3lmsf4z3xz6y7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/show-combinators#readme";
           description = "Combinators to write Show instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "show-prettyprint" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, prettyprinter, stdenv
         , trifecta
         }:
         mkDerivation {
           pname = "show-prettyprint";
           version = "0.3.0.1";
           sha256 = "b34df8dec052a9b73fdba0122cd19cbbfade7e0244bc8b5c202b1ef0f3fd0d0c";
           revision = "1";
           editedCabalFile = "1sfspc1a5nhwap6mwx1wn75ar8csb2kx8r0rpampdrpk427idvzs";
           libraryHaskellDepends = [
             ansi-wl-pprint base prettyprinter trifecta
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/quchen/show-prettyprint#readme";
           description = "Robust prettyprinter for output of auto-generated Show instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shower" = callPackage
        ({ mkDerivation, base, megaparsec, pretty, stdenv }:
         mkDerivation {
           pname = "shower";
           version = "0.2.0.2";
           sha256 = "f6ddc86ba4d363fe37dcaa9cf1c7e2a739f7f5290549e3d6159ce3bd13698a3a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base megaparsec pretty ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://monadfix.com/shower";
           description = "Clean up the formatting of 'show' output";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "siggy-chardust" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "siggy-chardust";
           version = "1.0.0";
           sha256 = "9f730c3cc04ea629e0b655bfff66f83e146eb3b9f0908d5dc00b4c558d5f5a43";
           revision = "1";
           editedCabalFile = "1lknm1jr6h5qpixc727aj3zbmj4ia21r9lb8gzj50iildgmfk33b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blockscope/flare-timing/tree/master/siggy-chardust#readme";
           description = "Rounding rationals to significant digits and decimal places";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "signal" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "signal";
           version = "0.1.0.4";
           sha256 = "c4bfdd92b75347e02759c1a7d75963fbc7052e948ec96e25299ca5262e5d76e5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base unix ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pmlodawski/signal";
           description = "Multiplatform signal support for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "silently" = callPackage
        ({ mkDerivation, base, deepseq, directory, stdenv }:
         mkDerivation {
           pname = "silently";
           version = "1.2.5.1";
           sha256 = "7fc9baf6f47ffc082e7e05c9dade1451bdee06a0c4e2d882e8e0b692f50bfad1";
           libraryHaskellDepends = [ base deepseq directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/silently";
           description = "Prevent or capture writing to stdout and other handles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, cmdargs, directory, filepath
         , http-types, mime-types, monad-control, mtl, process, setenv
         , simple-templates, stdenv, text, transformers, transformers-base
         , unordered-containers, vector, wai, wai-extra
         }:
         mkDerivation {
           pname = "simple";
           version = "0.11.3";
           sha256 = "4ce52280605c54a71c95d2040d736067ae4bb61fa0b796c09abe6aa6b8b92e62";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring blaze-builder bytestring directory
             filepath http-types mime-types monad-control mtl simple-templates
             text transformers transformers-base unordered-containers vector wai
             wai-extra
           ];
           executableHaskellDepends = [
             aeson attoparsec base bytestring cmdargs directory filepath process
             setenv simple-templates text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "A minimalist web framework for the WAI server interface";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-cabal" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, stdenv }:
         mkDerivation {
           pname = "simple-cabal";
           version = "0.1.1";
           sha256 = "7b1e7c36da8910a439b3e80efd1c25834b415b1ad8a35169fa109776f44cd684";
           libraryHaskellDepends = [ base Cabal directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/simple-cabal";
           description = "Cabal file wrapper library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-cmd" = callPackage
        ({ mkDerivation, base, directory, filepath, process, stdenv, unix
         }:
         mkDerivation {
           pname = "simple-cmd";
           version = "0.2.1";
           sha256 = "5ac384f6c8608f4276efa8336dd134d3935b358deab826efb2c30e93bb8665ac";
           libraryHaskellDepends = [ base directory filepath process unix ];
           doHaddock = false;
           doCheck = false;
           description = "Simple String-based process commands";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-cmd-args" = callPackage
        ({ mkDerivation, base, optparse-applicative, stdenv }:
         mkDerivation {
           pname = "simple-cmd-args";
           version = "0.1.4";
           sha256 = "913f7f1ac48f38de8f2b898ded00c53319adbec4fcbe9275b63061a0a86a6b0b";
           libraryHaskellDepends = [ base optparse-applicative ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/simple-cmd-args";
           description = "Simple command args parsing and execution";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-log" = callPackage
        ({ mkDerivation, async, base, base-unicode-symbols, containers
         , data-default, deepseq, directory, exceptions, filepath, hformat
         , microlens, microlens-platform, mmorph, mtl, SafeSemaphore, stdenv
         , text, time, transformers
         }:
         mkDerivation {
           pname = "simple-log";
           version = "0.9.12";
           sha256 = "5c1074229a41ee2c2b1d6eb7036a82927e6585e9ef81d8c6e721fac497566880";
           libraryHaskellDepends = [
             async base base-unicode-symbols containers data-default deepseq
             directory exceptions filepath hformat microlens microlens-platform
             mmorph mtl SafeSemaphore text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mvoidex/simple-log";
           description = "Simple log for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-reflect" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "simple-reflect";
           version = "0.3.3";
           sha256 = "07825ea04c135298008cf080133e3bfc8e04cbacd24719c46ac6a2ca4acfdb2b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
           description = "Simple reflection of expressions containing variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-sendfile" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, unix }:
         mkDerivation {
           pname = "simple-sendfile";
           version = "0.2.30";
           sha256 = "b6864d2b3c62ff8ea23fa24e9e26f751bfe5253c8efb1f1e4fee2ba91d065284";
           libraryHaskellDepends = [ base bytestring network unix ];
           doHaddock = false;
           doCheck = false;
           description = "Cross platform library for the sendfile system call";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-session" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, byteable
         , bytestring, containers, cookie, cryptohash, http-types, simple
         , stdenv, transformers, wai, wai-extra
         }:
         mkDerivation {
           pname = "simple-session";
           version = "0.10.1.1";
           sha256 = "8a9c9cb7a80080b6440a80549919d3cee3409af6c516b3d10d1392708b48e7c1";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder byteable bytestring containers
             cookie cryptohash http-types simple transformers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "Cookie-based session management for the Simple web framework";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-templates" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "simple-templates";
           version = "0.9.0.0";
           sha256 = "aac13b08fa89ecec8e329678cfff580fed6abd49ff913835cebb1592bd0e4827";
           libraryHaskellDepends = [
             aeson attoparsec base scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "A basic template language for the Simple web framework";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-vec3" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, vector }:
         mkDerivation {
           pname = "simple-vec3";
           version = "0.6";
           sha256 = "1062808e3c440999d4d8ed13703191782fc6f57874ddc76836122267691f80ef";
           libraryHaskellDepends = [ base QuickCheck vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dzhus/simple-vec3#readme";
           description = "Three-dimensional vectors of doubles with basic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simplistic-generics" = callPackage
        ({ mkDerivation, base, comonad, kind-apply, stdenv }:
         mkDerivation {
           pname = "simplistic-generics";
           version = "0.1.0.0";
           sha256 = "3278c2e18573a70514b89c21464cb8567c26e850c643de93f0e2a6dc4815e087";
           libraryHaskellDepends = [ base comonad kind-apply ];
           doHaddock = false;
           doCheck = false;
           description = "Generic programming without too many type classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "since" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "since";
           version = "0.0.0";
           sha256 = "7aa713c0fc0b2a748c9b5ddc413b918f77335e45b56d3968100428a42cdfc1ff";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/since#readme";
           description = "Get the number of seconds since the last invocation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "singleton-bool" = callPackage
        ({ mkDerivation, base, dec, stdenv }:
         mkDerivation {
           pname = "singleton-bool";
           version = "0.1.5";
           sha256 = "405dd57dea92857c04f539c3394894c40c8103ea0c4f3f0fdbfbd8acccde899f";
           revision = "2";
           editedCabalFile = "118j0h29nqg2acqbzif2ffqnanjbwnqmv2kch9z7xiwqkz6iq8an";
           libraryHaskellDepends = [ base dec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/singleton-bool#readme";
           description = "Type level booleans";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "singleton-nats" = callPackage
        ({ mkDerivation, base, singletons, stdenv }:
         mkDerivation {
           pname = "singleton-nats";
           version = "0.4.3";
           sha256 = "f16b3a490bf8e4de566392a51430185b5d1ebdc5bc760c921703d5af9be14576";
           libraryHaskellDepends = [ base singletons ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrasKovacs/singleton-nats";
           description = "Unary natural numbers relying on the singletons infrastructure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "singletons" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , ghc-boot-th, mtl, pretty, stdenv, syb, template-haskell, text
         , th-desugar, transformers
         }:
         mkDerivation {
           pname = "singletons";
           version = "2.5.1";
           sha256 = "20b00a3a732812ec1141014d2f8d379e392165ce7881fa7de9add8db0e22f147";
           setupHaskellDepends = [ base Cabal directory filepath ];
           libraryHaskellDepends = [
             base containers ghc-boot-th mtl pretty syb template-haskell text
             th-desugar transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/goldfirere/singletons";
           description = "A framework for generating singleton types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "siphash" = callPackage
        ({ mkDerivation, base, bytestring, cpu, stdenv }:
         mkDerivation {
           pname = "siphash";
           version = "1.0.3";
           sha256 = "cf81ce41c6ca40c4fec9add5dcebc161cb2d31f522f9ad727df23d30ac6a05f3";
           revision = "1";
           editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring cpu ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-siphash";
           description = "siphash: a fast short input PRF";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "size-based" = callPackage
        ({ mkDerivation, base, dictionary-sharing, stdenv, template-haskell
         , testing-type-modifiers
         }:
         mkDerivation {
           pname = "size-based";
           version = "0.1.2.0";
           sha256 = "779ff6c45476d20ffd2ad7327b44cefaaf0436ed89f43b2967761c0b58a4151a";
           revision = "1";
           editedCabalFile = "0kax1ypjyglkn6iff1x4yz12y7f2n249m95xvdhrc63hsa4xlcqv";
           libraryHaskellDepends = [
             base dictionary-sharing template-haskell testing-type-modifiers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sized functors, for size-based enumerations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sized-grid" = callPackage
        ({ mkDerivation, adjunctions, aeson, base, comonad, constraints
         , distributive, generics-sop, lens, mtl, random, stdenv, vector
         , vector-space
         }:
         mkDerivation {
           pname = "sized-grid";
           version = "0.1.1.6";
           sha256 = "4907af7a4ac56a838d599f319b2096a63c4f30eaf84cac0a5a22d937605c0b1b";
           libraryHaskellDepends = [
             adjunctions aeson base comonad constraints distributive
             generics-sop lens mtl random vector vector-space
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/edwardwas/sized-grid";
           description = "Multidimensional grids with sized specified at compile time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "skein" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, stdenv
         , tagged
         }:
         mkDerivation {
           pname = "skein";
           version = "1.0.9.4";
           sha256 = "f882ca0cc5ed336ef898fb3c89579e392900259296b2320edf968b9fc16cb8c9";
           libraryHaskellDepends = [
             base bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meteficha/skein";
           description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "skews" = callPackage
        ({ mkDerivation, base, bytestring, deque, stdenv, websockets }:
         mkDerivation {
           pname = "skews";
           version = "0.1.0.2";
           sha256 = "1740e41a60a2ccd09205473483c4833cedceab9f83cd431822e01c7736fd8977";
           libraryHaskellDepends = [ base bytestring deque websockets ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iij-ii/direct-hs/tree/master/skews";
           description = "A very quick-and-dirty WebSocket server";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "skip-var" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "skip-var";
           version = "0.1.1.0";
           sha256 = "bfbce57abd47c9c892f734b5c7d2bccad90fa5f8f8a6d4747cca15d2a493d41e";
           revision = "1";
           editedCabalFile = "0vl2y19l7xhlq08f91ggycj4imfdxvkj2fsaz8ifc0waxk3q7ja8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dtaskoff/skip-var#readme";
           description = "Skip variables";
           license = stdenv.lib.licenses.mit;
         }) {};
      "skylighting" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , skylighting-core, stdenv
         }:
         mkDerivation {
           pname = "skylighting";
           version = "0.8.2.1";
           sha256 = "bf97eedeea512dc416f3508c3aaa2ef10e08cc2ce542d25529f59ca698479af6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers skylighting-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/skylighting";
           description = "syntax highlighting library";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "skylighting-core" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, attoparsec, base
         , base64-bytestring, binary, blaze-html, bytestring
         , case-insensitive, colour, containers, directory, filepath, hxt
         , mtl, regex-base, regex-pcre-builtin, safe, stdenv, text
         , transformers, utf8-string
         }:
         mkDerivation {
           pname = "skylighting-core";
           version = "0.8.2.1";
           sha256 = "3a6446918e77d43977a8c9cc7f2b677334aeb8e3999e5df6e1c929b27684ac41";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-terminal attoparsec base base64-bytestring binary
             blaze-html bytestring case-insensitive colour containers directory
             filepath hxt mtl regex-base regex-pcre-builtin safe text
             transformers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/skylighting";
           description = "syntax highlighting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "slack-web" = callPackage
        ({ mkDerivation, aeson, base, containers, errors, http-api-data
         , http-client, http-client-tls, megaparsec, mtl, servant
         , servant-client, servant-client-core, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "slack-web";
           version = "0.2.0.11";
           sha256 = "47d1226c6f0870ec23edfed17f09c91013bc49309bd4408011b1581d8ea5cf92";
           libraryHaskellDepends = [
             aeson base containers errors http-api-data http-client
             http-client-tls megaparsec mtl servant servant-client
             servant-client-core text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jpvillaisaza/slack-web";
           description = "Bindings for the Slack web API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "smallcheck" = callPackage
        ({ mkDerivation, base, ghc-prim, logict, mtl, pretty, stdenv }:
         mkDerivation {
           pname = "smallcheck";
           version = "1.1.5";
           sha256 = "9020e67895a57bde02d7df2c0af06a4c769eff56d48b6a830f6d803df891aea4";
           revision = "1";
           editedCabalFile = "1zhhmad21sv0201hd7fahq769xpmzcj352l0sfalcwqs4kbc3mg0";
           libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/strake/smallcheck.hs";
           description = "A property-based testing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smallcheck-series" = callPackage
        ({ mkDerivation, base, bytestring, containers, logict, smallcheck
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "smallcheck-series";
           version = "0.6.1";
           sha256 = "61a4853702e0aeb17639e15596fdd57d8a8b6abfd881096a7a26764e225b721e";
           revision = "2";
           editedCabalFile = "1944nax2aq32cd8i335nc511zis3lcwkclkh5caigsfs34kwwglg";
           libraryHaskellDepends = [
             base bytestring containers logict smallcheck text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdnavarro/smallcheck-series";
           description = "Extra SmallCheck series and utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smoothie" = callPackage
        ({ mkDerivation, aeson, base, linear, stdenv, text, vector }:
         mkDerivation {
           pname = "smoothie";
           version = "0.4.2.10";
           sha256 = "b40872a29f232b266057ea41a3f87b07a6fd8d3b203560b955af45bc5f143915";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base linear text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/smoothie";
           description = "Smooth curves via several interpolation modes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, snap-core, stdenv }:
         mkDerivation {
           pname = "snap-blaze";
           version = "0.2.1.5";
           sha256 = "b36e35bd4ba3087b3de92702e488ba6570675719243b5dbdf4eae0b819988841";
           libraryHaskellDepends = [ base blaze-html snap-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/snap-blaze";
           description = "blaze-html integration for Snap";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-core" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
         , case-insensitive, containers, directory, filepath, hashable
         , HUnit, io-streams, lifted-base, monad-control, mtl, network
         , network-uri, old-locale, random, readable, regex-posix, stdenv
         , text, time, transformers, transformers-base, unix-compat
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "snap-core";
           version = "1.0.4.1";
           sha256 = "c0b177d47fcee1923d08bdba5b5f975d54e5e495ca666be5cc617aa71776b5a5";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-builder case-insensitive
             containers directory filepath hashable HUnit io-streams lifted-base
             monad-control mtl network network-uri old-locale random readable
             regex-posix text time transformers transformers-base unix-compat
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "Snap: A Haskell Web Framework (core interfaces and types)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-server" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , bytestring-builder, case-insensitive, clock, containers, filepath
         , HsOpenSSL, io-streams, io-streams-haproxy, lifted-base, mtl
         , network, old-locale, openssl-streams, snap-core, stdenv, text
         , time, unix, unix-compat, vector
         }:
         mkDerivation {
           pname = "snap-server";
           version = "1.1.1.1";
           sha256 = "450b651e0123307b1f438d9c2960ae773029f170d13139d85bd9527079398453";
           revision = "3";
           editedCabalFile = "1xma33r1by1q79qqbb70lwf4d846qlqs0f22rzrd3cdzkzcf9qf5";
           configureFlags = [ "-fopenssl" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring bytestring-builder
             case-insensitive clock containers filepath HsOpenSSL io-streams
             io-streams-haproxy lifted-base mtl network old-locale
             openssl-streams snap-core text time unix unix-compat vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "A web server for the Snap Framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snowflake" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "snowflake";
           version = "0.1.1.1";
           sha256 = "f156ca321ae17033fe1cbe7e676fea403136198e1c3a132924a080cd3145cddd";
           revision = "1";
           editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "soap" = callPackage
        ({ mkDerivation, base, bytestring, conduit, configurator
         , data-default, exceptions, http-client, http-types, iconv, mtl
         , resourcet, stdenv, text, unordered-containers, xml-conduit
         , xml-conduit-writer, xml-types
         }:
         mkDerivation {
           pname = "soap";
           version = "0.2.3.6";
           sha256 = "cdfc8ee01d3adb0334521a954e32e64f52a3e404fb469679e39904d4ed52b176";
           libraryHaskellDepends = [
             base bytestring conduit configurator data-default exceptions
             http-client http-types iconv mtl resourcet text
             unordered-containers xml-conduit xml-conduit-writer xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "SOAP client tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "soap-tls" = callPackage
        ({ mkDerivation, base, configurator, connection, data-default
         , http-client, http-client-tls, soap, stdenv, text, tls, x509
         , x509-store, x509-validation
         }:
         mkDerivation {
           pname = "soap-tls";
           version = "0.1.1.4";
           sha256 = "ce8b33cd4bb2cc60093df4de231967edd789fd9da44a261a539a221116853a14";
           revision = "1";
           editedCabalFile = "11djy824gaw3cbsvphq263hxjrn1b3v5p1kdivsvlyn7q9bgvms9";
           libraryHaskellDepends = [
             base configurator connection data-default http-client
             http-client-tls soap text tls x509 x509-store x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "TLS-enabled SOAP transport (using tls package)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "socket-activation" = callPackage
        ({ mkDerivation, base, network, stdenv, transformers, unix }:
         mkDerivation {
           pname = "socket-activation";
           version = "0.1.0.2";
           sha256 = "b99e7b4f296cd462aac84e5bb61fb02953e2080d1351e9e10a63d35dc34eb43b";
           revision = "1";
           editedCabalFile = "0bvm8ik8fp0v5gjw6q4h767zgs1i4ydckdypvqa85sarc985hkmp";
           libraryHaskellDepends = [ base network transformers unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddfisher/haskell-socket-activation";
           description = "systemd socket activation library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "socks" = callPackage
        ({ mkDerivation, base, basement, bytestring, cereal, network
         , stdenv
         }:
         mkDerivation {
           pname = "socks";
           version = "0.6.1";
           sha256 = "734447558bb061ce768f53a0df1f2401902c6bee396cc96ce627edd986ef6a73";
           libraryHaskellDepends = [
             base basement bytestring cereal network
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-socks";
           description = "Socks proxy (ver 5)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sop-core" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "sop-core";
           version = "0.4.0.0";
           sha256 = "a381b0efb8e2dedb6627da6adb0a2b72421f87d43d9b53d68d5b2e866015911d";
           revision = "1";
           editedCabalFile = "0nh92nja8ybk9mzn4s4pml4hqa6snhhnng5y94y31l5sml3si9wi";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "True Sums of Products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sort" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "sort";
           version = "1.0.0.0";
           sha256 = "cee3894879cb4b2150331eca96d5d27f51a6114bcb082d1d8dded55881f5770d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/sort";
           description = "A Haskell sorting toolkit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sorted-list" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "sorted-list";
           version = "0.2.1.0";
           sha256 = "b4e476157cf0df745eb3c39921357ffb2bf411cd169e755e99536031e07c5ef4";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
           description = "Type-enforced sorted lists and related functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sourcemap" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, process
         , stdenv, text, unordered-containers, utf8-string
         }:
         mkDerivation {
           pname = "sourcemap";
           version = "0.1.6";
           sha256 = "b9a04cccb4fe7eea8b37a2eaf2bc776eae5640038ab76fb948c5a3ea09a9ce7a";
           revision = "1";
           editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring process text unordered-containers
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of source maps as proposed by Google and Mozilla";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sox" = callPackage
        ({ mkDerivation, base, containers, explicit-exception
         , extensible-exceptions, process, sample-frame, semigroups, stdenv
         , transformers, unix, utility-ht
         }:
         mkDerivation {
           pname = "sox";
           version = "0.2.3.1";
           sha256 = "70a6ab47d1e16271332574667dd30f77eefb331a6e7dda4e959f48ac3359aa45";
           libraryHaskellDepends = [
             base containers explicit-exception extensible-exceptions process
             sample-frame semigroups transformers unix utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Sox";
           description = "Play, write, read, convert audio signals using Sox";
           license = "GPL";
         }) {};
      "soxlib" = callPackage
        ({ mkDerivation, base, bytestring, explicit-exception
         , extensible-exceptions, sample-frame, sox, stdenv, storablevector
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "soxlib";
           version = "0.0.3.1";
           sha256 = "cde9c76515588257fddece108376537bcda7698d0107bf0386b968ea5189ec38";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring explicit-exception extensible-exceptions
             sample-frame storablevector transformers utility-ht
           ];
           libraryPkgconfigDepends = [ sox ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Sox";
           description = "Write, read, convert audio signals using libsox";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) sox;};
      "sparse-linear-algebra" = callPackage
        ({ mkDerivation, base, containers, exceptions, hspec, mtl
         , primitive, QuickCheck, stdenv, transformers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "sparse-linear-algebra";
           version = "0.3.1";
           sha256 = "c762778b2e45bdba24336be58375871963d4c2ad76cb03c548f0fe0b72f3dcc9";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers exceptions hspec mtl primitive QuickCheck
             transformers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/sparse-linear-algebra";
           description = "Numerical computing in native Haskell";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "spatial-math" = callPackage
        ({ mkDerivation, base, binary, cereal, ghc-prim, lens, linear
         , stdenv, TypeCompose
         }:
         mkDerivation {
           pname = "spatial-math";
           version = "0.5.0.1";
           sha256 = "c91cf29157c2a3425f40afdd6fb763f2fc4299eb4c32725ac64d2ba568c2a410";
           libraryHaskellDepends = [
             base binary cereal ghc-prim lens linear TypeCompose
           ];
           doHaddock = false;
           doCheck = false;
           description = "3d math including quaternions/euler angles/dcms and utility functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "special-values" = callPackage
        ({ mkDerivation, base, bytestring, ieee754, scientific, stdenv
         , text
         }:
         mkDerivation {
           pname = "special-values";
           version = "0.1.0.0";
           sha256 = "3c14dd1304dacc8e54c2dcf95ebb3bb74b172b5409b9b45352108a4698e06dce";
           libraryHaskellDepends = [
             base bytestring ieee754 scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/special-values#readme";
           description = "Typeclass providing special values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "speculate" = callPackage
        ({ mkDerivation, base, cmdargs, containers, leancheck, stdenv }:
         mkDerivation {
           pname = "speculate";
           version = "0.3.5";
           sha256 = "706cb2ac18b2d646bc20cc80135bad10e30bd0096ab479308cd110077035ea44";
           libraryHaskellDepends = [ base cmdargs containers leancheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/speculate#readme";
           description = "discovery of properties about Haskell functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "speedy-slice" = callPackage
        ({ mkDerivation, base, kan-extensions, lens, mcmc-types
         , mwc-probability, pipes, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "speedy-slice";
           version = "0.3.0";
           sha256 = "efbf8a10b681b940078f70fb9aca43fec8ba436c82f3faf719bbe495ba152899";
           libraryHaskellDepends = [
             base kan-extensions lens mcmc-types mwc-probability pipes primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/speedy-slice";
           description = "Speedy slice sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sphinx" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
         , network, stdenv, text, text-icu, xml
         }:
         mkDerivation {
           pname = "sphinx";
           version = "0.6.0.2";
           sha256 = "76a977c6ce6e71c220bd5fed7acd0be500c2a1b5c8d081a29564a8e37ba7a6df";
           libraryHaskellDepends = [
             base binary bytestring data-binary-ieee754 network text text-icu
             xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gregwebs/haskell-sphinx-client";
           description = "Haskell bindings to the Sphinx full-text searching daemon";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "splice" = callPackage
        ({ mkDerivation, base, network, stdenv }:
         mkDerivation {
           pname = "splice";
           version = "0.6.1.1";
           sha256 = "81fabe6652571f0dbf6b8904bd782daaeccc9d89d40f77b15dff46b7499d4e53";
           libraryHaskellDepends = [ base network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://corsis.github.com/splice/";
           description = "Cross-platform Socket to Socket Data Splicing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "split" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "split";
           version = "0.2.3.3";
           sha256 = "1dcd674f7c5f276f33300f5fd59e49d1ac6fc92ae949fd06a0f6d3e9d9ac1413";
           revision = "2";
           editedCabalFile = "1c8bcssxq5rkxkixgms6w6x6lzf4n7cxk6cx6av1dp3lixdy9j34";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Combinator library for splitting lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "splitmix" = callPackage
        ({ mkDerivation, base, deepseq, random, stdenv, time }:
         mkDerivation {
           pname = "splitmix";
           version = "0.0.3";
           sha256 = "fce462557f490c6c3d264ca70ef98a2c644ba341a71e6ee9f87ee7f3e7ab0acc";
           revision = "1";
           editedCabalFile = "178d81ksnmgppbd09ci53r88iyacn3phy55v5i4ybfz5d8rfjpa5";
           libraryHaskellDepends = [ base deepseq random time ];
           doHaddock = false;
           doCheck = false;
           description = "Fast Splittable PRNG";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "spoon" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "spoon";
           version = "0.3.1";
           sha256 = "b9b350b6730e34c246bbf7e228a86b3d4925b52c95542f7676d719ef2a9881d4";
           revision = "1";
           editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Catch errors thrown from pure computations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "spreadsheet" = callPackage
        ({ mkDerivation, base, explicit-exception, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "spreadsheet";
           version = "0.1.3.8";
           sha256 = "646716e795f3cd82f0277ffb672eca26a03f6897d85da3c267ee04cf4dc4a765";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base explicit-exception transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Spreadsheet";
           description = "Read and write spreadsheets from and to CSV files in a lazy way";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sql-words" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "sql-words";
           version = "0.1.6.3";
           sha256 = "2575bd23b81d8cfb792ef78ab8bef70c6b2d74d9309b07be8573e7df0a7ae687";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "SQL keywords data constructors into OverloadedString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sqlite-simple" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, blaze-textual
         , bytestring, containers, direct-sqlite, Only, semigroups, stdenv
         , template-haskell, text, time, transformers
         }:
         mkDerivation {
           pname = "sqlite-simple";
           version = "0.4.16.0";
           sha256 = "60d2a188d1967ebc0d3ec9175776c45a6e1e6e7a4d44567548cb7fe6961d30de";
           revision = "1";
           editedCabalFile = "123bykwxl3p6918bjxv073ksf8k1hn6s0rlph934h18400n51fdf";
           libraryHaskellDepends = [
             attoparsec base blaze-builder blaze-textual bytestring containers
             direct-sqlite Only semigroups template-haskell text time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nurpax/sqlite-simple";
           description = "Mid-Level SQLite client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sqlite-simple-errors" = callPackage
        ({ mkDerivation, base, parsec, sqlite-simple, stdenv, text }:
         mkDerivation {
           pname = "sqlite-simple-errors";
           version = "0.6.1.0";
           sha256 = "5101f84a6d74d658398cc4ef557ad3c6158d53e9c948301cc47ed0cc3eaa716f";
           libraryHaskellDepends = [ base parsec sqlite-simple text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/sqlite-simple-errors";
           description = "Wrapper around errors from sqlite-simple";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "srcloc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "srcloc";
           version = "0.5.1.2";
           sha256 = "069edbce6bb72e0771cece3aa5a6b67b9e0b0bd0148e9404842fa43035fec06e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mainland/srcloc";
           description = "Data types for managing source code locations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stache" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , directory, filepath, megaparsec, mtl, stdenv, template-haskell
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "stache";
           version = "2.0.1";
           sha256 = "739ff0d0a882f46bbcd391a2b1ee271906e9c049c463fb8846c1d32d3f829e2b";
           revision = "3";
           editedCabalFile = "1y1wff5mdcin3wc9pbj3agsircrf1pxjjm8j90n8g40l7acnf63c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq directory filepath
             megaparsec mtl template-haskell text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/stache";
           description = "Mustache templates for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stack" = callPackage
        ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal, array
         , async, attoparsec, base, base64-bytestring, bytestring, Cabal
         , colour, conduit, conduit-extra, containers, cryptonite
         , cryptonite-conduit, deepseq, directory, echo, exceptions, extra
         , file-embed, filelock, filepath, fsnotify, generic-deriving
         , hackage-security, hashable, hi-file-parser, hpack, hpc
         , http-client, http-client-tls, http-conduit, http-download
         , http-types, memory, microlens, mintty, mono-traversable, mtl
         , mustache, neat-interpolation, network-uri, open-browser
         , optparse-applicative, pantry, path, path-io, persistent
         , persistent-sqlite, persistent-template, pretty, primitive
         , process, project-template, regex-applicative-text, resource-pool
         , resourcet, retry, rio, rio-prettyprint, semigroups, split, stdenv
         , stm, streaming-commons, tar, template-haskell, temporary
         , terminal-size, text, text-metrics, th-reify-many, time, tls
         , transformers, typed-process, unicode-transforms, unix
         , unix-compat, unliftio, unordered-containers, vector, yaml
         , zip-archive, zlib
         }:
         mkDerivation {
           pname = "stack";
           version = "2.1.3.1";
           sha256 = "f983369a22a3e3af9ae09770cf34e4ba439cc7f5ef5a0e87f4db11c1ec5356e0";
           configureFlags = [
             "-fdisable-git-info" "-fhide-dependency-versions"
             "-fsupported-build"
           ];
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal filepath ];
           libraryHaskellDepends = [
             aeson annotated-wl-pprint ansi-terminal array async attoparsec base
             base64-bytestring bytestring Cabal colour conduit conduit-extra
             containers cryptonite cryptonite-conduit deepseq directory echo
             exceptions extra file-embed filelock filepath fsnotify
             generic-deriving hackage-security hashable hi-file-parser hpack hpc
             http-client http-client-tls http-conduit http-download http-types
             memory microlens mintty mono-traversable mtl mustache
             neat-interpolation network-uri open-browser optparse-applicative
             pantry path path-io persistent persistent-sqlite
             persistent-template pretty primitive process project-template
             regex-applicative-text resource-pool resourcet retry rio
             rio-prettyprint semigroups split stm streaming-commons tar
             template-haskell temporary terminal-size text text-metrics
             th-reify-many time tls transformers typed-process
             unicode-transforms unix unix-compat unliftio unordered-containers
             vector yaml zip-archive zlib
           ];
           executableHaskellDepends = [
             aeson annotated-wl-pprint ansi-terminal array async attoparsec base
             base64-bytestring bytestring Cabal colour conduit conduit-extra
             containers cryptonite cryptonite-conduit deepseq directory echo
             exceptions extra file-embed filelock filepath fsnotify
             generic-deriving hackage-security hashable hi-file-parser hpack hpc
             http-client http-client-tls http-conduit http-download http-types
             memory microlens mintty mono-traversable mtl mustache
             neat-interpolation network-uri open-browser optparse-applicative
             pantry path path-io persistent persistent-sqlite
             persistent-template pretty primitive process project-template
             regex-applicative-text resource-pool resourcet retry rio
             rio-prettyprint semigroups split stm streaming-commons tar
             template-haskell temporary terminal-size text text-metrics
             th-reify-many time tls transformers typed-process
             unicode-transforms unix unix-compat unliftio unordered-containers
             vector yaml zip-archive zlib
           ];
           doHaddock = false;
           doCheck = false;
           preCheck = "export HOME=$TMPDIR";
           postInstall = ''
             exe=$out/bin/stack
             mkdir -p $out/share/bash-completion/completions
             $exe --bash-completion-script $exe >$out/share/bash-completion/completions/stack
           '';
           homepage = "http://haskellstack.org";
           description = "The Haskell Tool Stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "starter" = callPackage
        ({ mkDerivation, base, fsnotify, stdenv }:
         mkDerivation {
           pname = "starter";
           version = "0.3.0";
           sha256 = "fd569cd27cfd62fb9d3e544e222450ec2734c44a3293994f35a26af982ce3d93";
           libraryHaskellDepends = [ base fsnotify ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rkaippully/starter#readme";
           description = "Develop applications without restarts";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "state-codes" = callPackage
        ({ mkDerivation, aeson, base, shakespeare, stdenv, text }:
         mkDerivation {
           pname = "state-codes";
           version = "0.1.3";
           sha256 = "1667dc977607fc89a0ca736294b2f0a19608fbe861f03f404c3f8ee91fd0f4a1";
           libraryHaskellDepends = [ aeson base shakespeare text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acamino/state-codes#README";
           description = "ISO 3166-2:US state codes and i18n names";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stateref" = callPackage
        ({ mkDerivation, base, mtl, stdenv, stm }:
         mkDerivation {
           pname = "stateref";
           version = "0.3";
           sha256 = "7dd390aab346ca877cde1217d5b62145cdfa6f9390e3b7a53c9296229ee1b741";
           libraryHaskellDepends = [ base mtl stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~mokus/stateref/";
           description = "Abstraction for things that work like IORef";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "statestack" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "statestack";
           version = "0.2.0.5";
           sha256 = "f4eadcf9b08c14cb084436f81e16edf78d6eeda77a3f93e38ba5d7e263ea5f66";
           revision = "3";
           editedCabalFile = "0s9v88gcc5wnfj4c6xq86asadmh4y8z8ycv2wz5nwfwfazfgzcy3";
           libraryHaskellDepends = [
             base mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple State-like monad transformer with saveable and restorable state";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "static-text" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, template-haskell, text
         , vector
         }:
         mkDerivation {
           pname = "static-text";
           version = "0.2.0.4";
           sha256 = "07cfa2b73e98c67a95f64de5ed8c8a1b088c7f8d3b1b4683418f9bcbc41ea4a5";
           libraryHaskellDepends = [
             base bytestring template-haskell text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dzhus/static-text#readme";
           description = "Lists, Texts, ByteStrings and Vectors of statically known length";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "statistics" = callPackage
        ({ mkDerivation, aeson, async, base, base-orphans, binary
         , data-default-class, deepseq, dense-linear-algebra, math-functions
         , monad-par, mwc-random, primitive, stdenv, vector
         , vector-algorithms, vector-binary-instances, vector-th-unbox
         }:
         mkDerivation {
           pname = "statistics";
           version = "0.15.2.0";
           sha256 = "c496dbb8767a65ea3c352fd08ce1918200a0cc9d8f8b5f262aebbb43dee22a49";
           libraryHaskellDepends = [
             aeson async base base-orphans binary data-default-class deepseq
             dense-linear-algebra math-functions monad-par mwc-random primitive
             vector vector-algorithms vector-binary-instances vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/statistics";
           description = "A library of statistical types, data, and functions";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "stb-image-redux" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "stb-image-redux";
           version = "0.2.1.3";
           sha256 = "24da421150f269ebb6679d7ea2c18dcea5cd253b3e27bf4bded656e7e90eb507";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typedrat/stb-image-redux#readme";
           description = "Image loading and writing microlibrary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "step-function" = callPackage
        ({ mkDerivation, base, base-compat-batteries, containers, deepseq
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "step-function";
           version = "0.2";
           sha256 = "d260fcb72bd3afe3c2b0a80f3f3a5c7afae63d98138d137a80ed8ba131fee7d5";
           revision = "4";
           editedCabalFile = "0zxjrsa54g65p7kf5mfpjb897d1add2dfp5dm4xfs5321rs31knv";
           libraryHaskellDepends = [
             base base-compat-batteries containers deepseq QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonpetterbergman/step-function";
           description = "Staircase functions or piecewise constant functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-chans" = callPackage
        ({ mkDerivation, base, Cabal, stdenv, stm }:
         mkDerivation {
           pname = "stm-chans";
           version = "3.0.0.4";
           sha256 = "2344fc5bfa33d565bad7b009fc0e2c5a7a595060ba149c661f44419fc0d54738";
           revision = "1";
           editedCabalFile = "0v9axxcfszqdmf3dhjxy34ybh22x3r5c48mdnbvjh5i5lp7g7vp2";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Additional types of channels for STM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-conduit" = callPackage
        ({ mkDerivation, async, base, cereal, cereal-conduit, conduit
         , conduit-extra, directory, exceptions, monad-loops, resourcet
         , stdenv, stm, stm-chans, transformers, unliftio
         }:
         mkDerivation {
           pname = "stm-conduit";
           version = "4.0.1";
           sha256 = "e80e5be72a4564fa45e1e27f91c0984e12d2a736d0ceb9594350d573efee1442";
           libraryHaskellDepends = [
             async base cereal cereal-conduit conduit conduit-extra directory
             exceptions monad-loops resourcet stm stm-chans transformers
             unliftio
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cgaebel/stm-conduit";
           description = "Introduces conduits to channels, and promotes using conduits concurrently";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-delay" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-delay";
           version = "0.1.1.1";
           sha256 = "b132581aac47e6cba6a1691a485e1700fbb047c02b7e1e43ae9bbd8476108a32";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joeyadams/haskell-stm-delay";
           description = "Updatable one-shot timer polled with STM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-extras" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-extras";
           version = "0.1.0.3";
           sha256 = "88210a157d5a5a2c3bd10b3b9f0ead9bef91f47ecfe6fd56deca058c7270b75e";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/stm-extras#readme";
           description = "Extra STM functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-split" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-split";
           version = "0.0.2.1";
           sha256 = "e8e687268c86a6b635e7ee08415f31921d4a46eed267fe573a57981ec00d8419";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           description = "TMVars, TVars and TChans with distinguished input and output side";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stopwatch" = callPackage
        ({ mkDerivation, base, clock, stdenv, transformers }:
         mkDerivation {
           pname = "stopwatch";
           version = "0.1.0.6";
           sha256 = "5018769e91e551086bc96457da44faa3a03b4470a55212505102bc09518174bf";
           libraryHaskellDepends = [ base clock transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/stopwatch";
           description = "A simple stopwatch utility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-complex" = callPackage
        ({ mkDerivation, base, base-orphans, stdenv }:
         mkDerivation {
           pname = "storable-complex";
           version = "0.2.3.0";
           sha256 = "9af499b2b19b2f173f97db37f843938efd2c59c30285e436564aefd2aa5bdc3a";
           libraryHaskellDepends = [ base base-orphans ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cartazio/storable-complex";
           description = "Storable instance for Complex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-record" = callPackage
        ({ mkDerivation, base, semigroups, stdenv, transformers, utility-ht
         }:
         mkDerivation {
           pname = "storable-record";
           version = "0.0.4.1";
           sha256 = "a8bc8dbe2389656ad34744648d28d303a061419359bbf8e3cf8b7b10504052f1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base semigroups transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/storable-record/";
           description = "Elegant definition of Storable instances for records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-tuple" = callPackage
        ({ mkDerivation, base, base-orphans, stdenv, storable-record
         , utility-ht
         }:
         mkDerivation {
           pname = "storable-tuple";
           version = "0.0.3.3";
           sha256 = "dcfac049527a45c386c80a7c40ec211455b83d74311af88fa686063b5f87df35";
           libraryHaskellDepends = [
             base base-orphans storable-record utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/storable-tuple/";
           description = "Storable instance for pairs and triples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storablevector" = callPackage
        ({ mkDerivation, base, deepseq, non-negative, QuickCheck
         , semigroups, stdenv, syb, transformers, unsafe, utility-ht
         }:
         mkDerivation {
           pname = "storablevector";
           version = "0.2.13";
           sha256 = "f83742d572aca9431f8ee6325d29169bc630beb2d8ab1957f7165abed138b9fe";
           libraryHaskellDepends = [
             base deepseq non-negative QuickCheck semigroups syb transformers
             unsafe utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Storable_Vector";
           description = "Fast, packed, strict storable arrays with a list interface like ByteString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "store-core" = callPackage
        ({ mkDerivation, base, bytestring, fail, ghc-prim, primitive
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "store-core";
           version = "0.4.4.2";
           sha256 = "c94185c3c3832ab8195ae17b0535fa020067c0a3f4d550a713eccf03211f8ea0";
           libraryHaskellDepends = [
             base bytestring fail ghc-prim primitive text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/store#readme";
           description = "Fast and lightweight binary serialization";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stratosphere" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, containers
         , hashable, lens, stdenv, template-haskell, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "stratosphere";
           version = "0.40.0";
           sha256 = "3f44ea58082e1a0eec40c34f2c9cc470e5bfe335af592745e00d6ee7295b4876";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring containers hashable lens
             template-haskell text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frontrowed/stratosphere#readme";
           description = "EDSL for AWS CloudFormation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streaming" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, mmorph, mtl, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "streaming";
           version = "0.2.3.0";
           sha256 = "b4008eee1fcee6a9f63d0d31eebefd6cf72731fab65d943831338c3961fafd62";
           libraryHaskellDepends = [
             base containers ghc-prim mmorph mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-streaming/streaming";
           description = "an elementary streaming prelude and general stream type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streaming-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv, streaming
         , streaming-bytestring
         }:
         mkDerivation {
           pname = "streaming-attoparsec";
           version = "1.0.0.1";
           sha256 = "1ec9f3570dd7e27803053b3c682de94a32c2a1026d14b91c0fb0a98577942f94";
           libraryHaskellDepends = [
             attoparsec base bytestring streaming streaming-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-streaming/streaming-attoparsec";
           description = "Attoparsec integration for the streaming ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streaming-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, exceptions, mmorph, mtl
         , resourcet, stdenv, streaming, transformers, transformers-base
         }:
         mkDerivation {
           pname = "streaming-bytestring";
           version = "0.1.6";
           sha256 = "c1d723fc9676b85f62f9fc937d756af61d81f69c9c6591e5d38c9b09b7a253d3";
           libraryHaskellDepends = [
             base bytestring deepseq exceptions mmorph mtl resourcet streaming
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-streaming/streaming-bytestring";
           description = "effectful byte steams, or: bytestring io done right";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streaming-cassava" = callPackage
        ({ mkDerivation, base, bytestring, cassava, mtl, stdenv, streaming
         , streaming-bytestring, transformers
         }:
         mkDerivation {
           pname = "streaming-cassava";
           version = "0.1.0.1";
           sha256 = "b1a8abd8e6d44a6aa824576d2f429f023be5017447eda57287f170ffbe422537";
           libraryHaskellDepends = [
             base bytestring cassava mtl streaming streaming-bytestring
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Cassava support for the streaming ecosystem";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streaming-commons" = callPackage
        ({ mkDerivation, array, async, base, bytestring, directory, network
         , process, random, stdenv, stm, text, transformers, unix, zlib
         }:
         mkDerivation {
           pname = "streaming-commons";
           version = "0.2.1.2";
           sha256 = "ea2a6d4b2dfabe8cdf3b4e0a29db9b14170f59d3554b70e0377779867efcfc16";
           libraryHaskellDepends = [
             array async base bytestring directory network process random stm
             text transformers unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/streaming-commons";
           description = "Common lower-level functions needed by various streaming data libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streaming-wai" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-builder, http-types
         , stdenv, streaming, wai
         }:
         mkDerivation {
           pname = "streaming-wai";
           version = "0.1.1";
           sha256 = "35b4182386cc1d23731b3eac78dda79a1b7878c0b6bd78fd99907c776dbfaf30";
           libraryHaskellDepends = [
             base bytestring bytestring-builder http-types streaming wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jb55/streaming-wai";
           description = "Streaming Wai utilities";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streamly" = callPackage
        ({ mkDerivation, atomic-primops, base, containers, deepseq
         , exceptions, ghc-prim, heaps, lockfree-queue, monad-control, mtl
         , stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "streamly";
           version = "0.6.1";
           sha256 = "c2bd7228862f9ce25de424f3df629b265e7e54da87335929ef0c3c4b18613d90";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             atomic-primops base containers deepseq exceptions ghc-prim heaps
             lockfree-queue monad-control mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/composewell/streamly";
           description = "Beautiful Streaming, Concurrent and Reactive Composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streamproc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "streamproc";
           version = "1.6.2";
           sha256 = "e76effaaff83e6a066df949415db109b405bda0aaeb95f0710906c65892584f2";
           revision = "1";
           editedCabalFile = "19c51gks028x8mnywkx1nz0s6bwn2mxs5ddmaj2q8n9l5pvfkcgs";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/streamproc";
           description = "Stream Processer Arrow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streams" = callPackage
        ({ mkDerivation, adjunctions, base, comonad, distributive
         , semigroupoids, semigroups, stdenv
         }:
         mkDerivation {
           pname = "streams";
           version = "3.3";
           sha256 = "2933f80d6a83fed326af5588b0cce93985b07233359c311bd69c5bac19954e40";
           libraryHaskellDepends = [
             adjunctions base comonad distributive semigroupoids semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/streams/issues";
           description = "Various Haskell 2010 stream comonads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "strict";
           version = "0.3.2";
           sha256 = "2cd35a67938db635a87617d9576d5df0158b581e8e5694f07487c0f4b1549221";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
           description = "Strict data types and String IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict-base-types" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, binary, deepseq, ghc-prim
         , hashable, lens, QuickCheck, stdenv, strict
         }:
         mkDerivation {
           pname = "strict-base-types";
           version = "0.6.1";
           sha256 = "f8866a3acc7d61f1fbffc2823c24d35b4f63f90612bf0c63292f3d25a3dc307a";
           libraryHaskellDepends = [
             aeson base bifunctors binary deepseq ghc-prim hashable lens
             QuickCheck strict
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meiersi/strict-base-types";
           description = "Strict variants of the types provided in base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict-concurrency" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "strict-concurrency";
           version = "0.2.4.3";
           sha256 = "02d934ec5053d3d42031798e5a3cd25547ccde5973d562f9fc943d635d9956c0";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ygale/strict-concurrency";
           description = "Strict concurrency abstractions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict-list" = callPackage
        ({ mkDerivation, base, hashable, semigroupoids, stdenv }:
         mkDerivation {
           pname = "strict-list";
           version = "0.1.5";
           sha256 = "ba7338766ba5fbb4069b748e5bdce12866379c32f1ab1c6015d45dbd1010bb1a";
           libraryHaskellDepends = [ base hashable semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/strict-list";
           description = "Strict linked list";
           license = stdenv.lib.licenses.mit;
         }) {};
      "string-class" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, tagged, text }:
         mkDerivation {
           pname = "string-class";
           version = "0.1.7.0";
           sha256 = "8e5b00563ec2a62120036ab5e06cade5eb7ff8c9caa86f42213c66be39900be8";
           libraryHaskellDepends = [ base bytestring tagged text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/string-class/string-class";
           description = "String class library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "string-combinators";
           version = "0.6.0.5";
           sha256 = "94914abfbd7d17051edab4bc9927c191fd05a652d9ef3cf259b5d0e0ca177e1e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/string-combinators";
           description = "Polymorphic functions to build and combine stringlike values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-conv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "string-conv";
           version = "0.1.2";
           sha256 = "f259a03e6f296af19a71c07ab9a98a38661dfe40679f360f8e371334ea226039";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/string-conv";
           description = "Standardized conversion between string types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-conversions" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, utf8-string }:
         mkDerivation {
           pname = "string-conversions";
           version = "0.4.0.1";
           sha256 = "46bcce6d9ce62c558b7658a75d9c6a62f7259d6b0473d011d8078234ad6a1994";
           libraryHaskellDepends = [ base bytestring text utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/string-conversions#readme";
           description = "Simplifies dealing with different types for strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-interpolate" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-meta, stdenv
         , template-haskell, text, text-conversions, utf8-string
         }:
         mkDerivation {
           pname = "string-interpolate";
           version = "0.1.0.1";
           sha256 = "8cfcf18cc73293dff928bf5a2b932ee13eea019f27dc6b618061b2af626e653e";
           libraryHaskellDepends = [
             base bytestring haskell-src-meta template-haskell text
             text-conversions utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell string/text/bytestring interpolation that just works";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-qq" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "string-qq";
           version = "0.0.4";
           sha256 = "c85b9c1e27596ea8e765e4b630b7be53c331c51b680ad46cc2d248d3099fdd71";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "string-transform" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, utf8-string }:
         mkDerivation {
           pname = "string-transform";
           version = "1.1.1";
           sha256 = "1caeff34b02cd860ae1740629ae97f7df8458bb7ab6a83e3b15c124b513e5e21";
           libraryHaskellDepends = [ base bytestring text utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/string-transform#readme";
           description = "simple and easy haskell string transform wrapper";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stringbuilder" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "stringbuilder";
           version = "0.5.1";
           sha256 = "d878bdc4da806dbce5ab684ef13d2634c17c15b991d0ed3bb25a331eba6603ba";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A writer monad for multi-line string literals";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stringsearch" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "stringsearch";
           version = "0.3.6.6";
           sha256 = "295f1971920bc52263d8275d7054ad223a7e1aefe75533f9887735c9644ffe4a";
           revision = "1";
           editedCabalFile = "0z5pz5dccapz9k39r2zmf056m0x2m2lj3jahhnw3mfxlmps07378";
           libraryHaskellDepends = [ array base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dafis/stringsearch";
           description = "Fast searching, splitting and replacing of ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stripe-concepts" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "stripe-concepts";
           version = "1.0.2.0";
           sha256 = "533c36aa753911836705b4d52cac94ed868008bdf5ca51fb6373a08dea251729";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeclasses/stripe";
           description = "Types for the Stripe API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-scotty" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-types, scotty
         , stdenv, stripe-concepts, stripe-signature, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "stripe-scotty";
           version = "1.0.0.0";
           sha256 = "7a69544cc9cde5e6884ba5d1b322347a0ca03e59218793a5f85317aa870abba4";
           revision = "1";
           editedCabalFile = "0c3r39217650yjxxs1523ywvyiirrh2f209gl4hfznyigkx2kg41";
           libraryHaskellDepends = [
             aeson base bytestring http-types scotty stripe-concepts
             stripe-signature text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeclasses/stripe";
           description = "Listen for Stripe webhook events with Scotty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-signature" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, cryptonite
         , memory, stdenv, stripe-concepts, text
         }:
         mkDerivation {
           pname = "stripe-signature";
           version = "1.0.0.1";
           sha256 = "362b681d6ef90bc6ab90affd2fa29634015416d91c9c2f1c8ab70eb369e0afd0";
           libraryHaskellDepends = [
             base base16-bytestring bytestring cryptonite memory stripe-concepts
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeclasses/stripe";
           description = "Verification of Stripe webhook signatures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-wreq" = callPackage
        ({ mkDerivation, aeson, base, bytestring, lens, stdenv
         , stripe-concepts, text, unordered-containers, wreq
         }:
         mkDerivation {
           pname = "stripe-wreq";
           version = "1.0.1.0";
           sha256 = "7ef4ebeebda0ffcbe1cb0dcf8655c1ada87a57c153a41bcc489b28f81303ad44";
           libraryHaskellDepends = [
             aeson base bytestring lens stripe-concepts text
             unordered-containers wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeclasses/stripe";
           description = "Use the Stripe API via Wreq";
           license = stdenv.lib.licenses.mit;
         }) {};
      "strive" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, gpolyline
         , http-client, http-client-tls, http-types, stdenv
         , template-haskell, text, time, transformers
         }:
         mkDerivation {
           pname = "strive";
           version = "5.0.9";
           sha256 = "e2a961ed1f282d9fcb660ddc3a9a9bae06d3ac8f35ac964f38836450498e4280";
           libraryHaskellDepends = [
             aeson base bytestring data-default gpolyline http-client
             http-client-tls http-types template-haskell text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/strive#readme";
           description = "A client for the Strava V3 API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "structs" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, deepseq, ghc-prim
         , primitive, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "structs";
           version = "0.1.3";
           sha256 = "990a88c234205eccfb802b7a6d8cb73080abef27335bb12d9cf92faf29211cf9";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base deepseq ghc-prim primitive template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/structs/";
           description = "Strict GC'd imperative object-oriented programming with cheap pointers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "structured-cli" = callPackage
        ({ mkDerivation, base, data-default, haskeline, mtl, split, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "structured-cli";
           version = "2.5.2.0";
           sha256 = "40157b7a14b2564d9e4cdc55b703a7838231bdf50bede9ba1d6d9c87fd13076b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base data-default haskeline mtl split transformers
           ];
           executableHaskellDepends = [ base data-default mtl split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/codemonkeylabs/structured-cli#readme";
           description = "Application library for building interactive console CLIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sum-type-boilerplate" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "sum-type-boilerplate";
           version = "0.1.1";
           sha256 = "3169da14c604e19afdcbf721ef1749b9486618ba23bbec14e86ae9862bf0ab9f";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/sum-type-boilerplate#readme";
           description = "Library for reducing the boilerplate involved with sum types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "summoner" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, base-noprelude
         , bytestring, directory, filepath, generic-deriving, gitrev
         , neat-interpolation, optparse-applicative, process, relude
         , shellmet, stdenv, text, time, tomland
         }:
         mkDerivation {
           pname = "summoner";
           version = "1.3.0.1";
           sha256 = "fa94dc57a47e17e6c91d51a00e2bebb7b2c8ac196633ceaa015de674a3b008d4";
           revision = "5";
           editedCabalFile = "1fy1d12rq8cqafyr0yvwsnslmmvdhpjigjv2ppvhs4ihgghrrij3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base-noprelude bytestring directory filepath
             generic-deriving gitrev neat-interpolation optparse-applicative
             process relude shellmet text time tomland
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/summoner";
           description = "Tool for scaffolding fully configured batteries-included production-level Haskell projects";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "sundown" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "sundown";
           version = "0.6";
           sha256 = "cb9b7e98138311375148ffe0fa4c4b04eb7a9f8ec2ae13a674d465e5d71db027";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bitonic/sundown";
           description = "Bindings to the sundown markdown library";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "superbuffer" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "superbuffer";
           version = "0.3.1.1";
           sha256 = "d7a5fb5478731deab80f89233e4f85511949c04b96ad6284f99f16c5c4166c78";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/superbuffer#readme";
           description = "Efficiently build a bytestring from smaller chunks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sv" = callPackage
        ({ mkDerivation, attoparsec, base, bifunctors, bytestring
         , contravariant, hw-dsv, semigroupoids, stdenv, sv-core
         , transformers, utf8-string, validation
         }:
         mkDerivation {
           pname = "sv";
           version = "1.3.1";
           sha256 = "53b85d2cdb4a2b76a87158191f5444ba6e1179503428d4b674ef05a2ea932249";
           revision = "2";
           editedCabalFile = "1c0q010bpzdmjlncjn58fvz50l5z2wqp4hjpj0isvdr5iq96pgza";
           libraryHaskellDepends = [
             attoparsec base bifunctors bytestring contravariant hw-dsv
             semigroupoids sv-core transformers utf8-string validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/sv";
           description = "Encode and decode separated values (CSV, PSV, ...)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sv-cassava" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, cassava, stdenv
         , sv-core, utf8-string, validation, vector
         }:
         mkDerivation {
           pname = "sv-cassava";
           version = "0.3";
           sha256 = "2b1c5725aa13dfed861b975ca359bd0a8186928b098ee35dc94f97792e539cb0";
           revision = "3";
           editedCabalFile = "13414sn9rllq842bz0lv8qzdy6fxv72jbhmk64krrxq2xmw7wkhb";
           libraryHaskellDepends = [
             attoparsec base bytestring cassava sv-core utf8-string validation
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/sv";
           description = "Integration to use sv with cassava's parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sv-core" = callPackage
        ({ mkDerivation, attoparsec, base, bifunctors, bytestring
         , containers, contravariant, deepseq, double-conversion, lens, mtl
         , parsec, profunctors, readable, semigroupoids, semigroups, stdenv
         , text, transformers, trifecta, utf8-string, validation, vector
         , void
         }:
         mkDerivation {
           pname = "sv-core";
           version = "0.4.1";
           sha256 = "c7baf9edb83f0a5a0cac69a9cf80e534b20bfd7f1d4d85c14e2f2b2d046c32af";
           revision = "2";
           editedCabalFile = "05h0lsj434qv81b2fvnm80wyb7272wcwly3jfk4l1qp5hjyq6917";
           libraryHaskellDepends = [
             attoparsec base bifunctors bytestring containers contravariant
             deepseq double-conversion lens mtl parsec profunctors readable
             semigroupoids semigroups text transformers trifecta utf8-string
             validation vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/sv";
           description = "Encode and decode separated values (CSV, PSV, ...)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "svg-builder" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, hashable, stdenv
         , text, unordered-containers
         }:
         mkDerivation {
           pname = "svg-builder";
           version = "0.1.1";
           sha256 = "4fd0e3f2cbc5601fc69e7eab41588cbfa1150dc508d9d86bf5f3d393880382cc";
           revision = "2";
           editedCabalFile = "100nmkgcm1ncv4mkr1xcsa7bb3z6zx0lfayk8innd4hm62xsvhj3";
           libraryHaskellDepends = [
             base blaze-builder bytestring hashable text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/diagrams/svg-builder.git";
           description = "DSL for building SVG";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "svg-tree" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , JuicyPixels, lens, linear, mtl, scientific, stdenv, text
         , transformers, vector, xml
         }:
         mkDerivation {
           pname = "svg-tree";
           version = "0.6.2.4";
           sha256 = "4ce471e3c3378587360c2e3de055267991b88d846e858bcc3135b4ea0c171ac2";
           libraryHaskellDepends = [
             attoparsec base bytestring containers JuicyPixels lens linear mtl
             scientific text transformers vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "SVG file loader and serializer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "swagger" = callPackage
        ({ mkDerivation, aeson, base, bytestring, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "swagger";
           version = "0.3.0";
           sha256 = "c7144fb22a0d223eb2463a896200936eab665dc01f39affc103d2ee6a38f54d0";
           libraryHaskellDepends = [
             aeson base bytestring text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of swagger data model";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "swagger2" = callPackage
        ({ mkDerivation, aeson, base, base-compat-batteries, bytestring
         , Cabal, cabal-doctest, containers, cookie, generics-sop, hashable
         , http-media, insert-ordered-containers, lens, mtl, network
         , QuickCheck, scientific, stdenv, template-haskell, text, time
         , transformers, transformers-compat, unordered-containers
         , uuid-types, vector
         }:
         mkDerivation {
           pname = "swagger2";
           version = "2.4";
           sha256 = "91718133e85ba1af57e33aa9760609861ac706b4d6ffd74d8f068ef2eda10854";
           revision = "1";
           editedCabalFile = "02qlfsgqc5jmc616xn30hn213dwhsqlkrrk2pa6774f0dcn8rpiz";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson base base-compat-batteries bytestring containers cookie
             generics-sop hashable http-media insert-ordered-containers lens mtl
             network QuickCheck scientific template-haskell text time
             transformers transformers-compat unordered-containers uuid-types
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GetShopTV/swagger2";
           description = "Swagger 2.0 data model";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "swish" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, hashable
         , intern, mtl, network-uri, old-locale, polyparse, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "swish";
           version = "0.10.0.2";
           sha256 = "c1496923e477450155d72f2065ab268ae03cec93b36d68f7137ce4d29174dce4";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers directory filepath hashable intern mtl network-uri
             old-locale polyparse text time
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/dburke/swish";
           description = "A semantic web toolkit";
           license = stdenv.lib.licenses.lgpl21;
         }) {};
      "syb" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "syb";
           version = "0.7.1";
           sha256 = "e04a9c7ae48d9fe25e9b7a064f7122d39c710753544511e15df7a6e87fdfe700";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
           description = "Scrap Your Boilerplate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "symbol" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "symbol";
           version = "0.2.4";
           sha256 = "d074a7741f6ce0f2a604e4467c1c46e1acc2b707db107b3458395e646a9b8831";
           revision = "2";
           editedCabalFile = "0jdbaap11pkgb6m98v57k7qnx62pqxy7pa2i7293ywa4q305qgm1";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.drexel.edu/~mainland/";
           description = "A 'Symbol' type for fast symbol comparison";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "symengine" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "symengine";
           version = "0.1.2.0";
           sha256 = "0a59f76a924686ae84b1873c8783eb80f6e4092c90f3c971340053c1e6ca82f4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/symengine/symengine.hs#readme";
           description = "SymEngine symbolic mathematics engine for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sysinfo" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "sysinfo";
           version = "0.1.1";
           sha256 = "46db40f2d186956547cca98f5583b28828a2b50255fbd404272c381db64dca29";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/sysinfo#readme";
           description = "Haskell Interface for getting overall system statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "system-argv0" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text }:
         mkDerivation {
           pname = "system-argv0";
           version = "0.1.1";
           sha256 = "6d51da9d2157be14a83f8dca3e9d4196d420e667cd685effb8d7b39185cf4ec6";
           libraryHaskellDepends = [ base bytestring system-filepath text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-filesystem/";
           description = "Get argv[0] as a FilePath";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-fileio" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text
         , time, unix
         }:
         mkDerivation {
           pname = "system-fileio";
           version = "0.3.16.4";
           sha256 = "34e58b88a19a69ff1a559e211af6edb596e33ee1b1d5f44490febf325c78c6c7";
           libraryHaskellDepends = [
             base bytestring system-filepath text time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-filesystem";
           description = "Consistent filesystem interaction across GHC versions (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-filepath" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, deepseq, stdenv, text }:
         mkDerivation {
           pname = "system-filepath";
           version = "0.4.14";
           sha256 = "1656ce3c0d585650784ceb3f794748286e19fb635f557e7b29b0897f8956d993";
           revision = "1";
           editedCabalFile = "18llfvisghrn9w9yfgacqn51gs50a0lngah3bmg852h0swj7vkp8";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-filesystem";
           description = "High-level, byte-based file and directory path manipulations (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "systemd" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, transformers
         , unix
         }:
         mkDerivation {
           pname = "systemd";
           version = "1.2.0";
           sha256 = "af1c64f9ee869a08ced257106bff8082c5e7b6ba21fa554e5fc708cf7b7c5f12";
           libraryHaskellDepends = [
             base bytestring network transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erebe/systemd";
           description = "Systemd facilities (Socket activation, Notify)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tabular" = callPackage
        ({ mkDerivation, base, csv, html, mtl, stdenv }:
         mkDerivation {
           pname = "tabular";
           version = "0.2.2.7";
           sha256 = "13f8da12108dafcf3194eb6bf25febf0081c7e4734f66d2d4aeee899f3c14ffb";
           libraryHaskellDepends = [ base csv html mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/kowey/tabular";
           description = "Two-dimensional data tables with rendering functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagchup" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-accessor
         , explicit-exception, non-empty, stdenv, transformers, utility-ht
         , xml-basic
         }:
         mkDerivation {
           pname = "tagchup";
           version = "0.4.1.1";
           sha256 = "e5b4ee185f30a64d854fb02291f7bdf60f8846f1fcc3d67ebc6ab1f61e74ee88";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers data-accessor explicit-exception
             non-empty transformers utility-ht xml-basic
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/tagchup/";
           description = "alternative package for processing of tag soups";
           license = "GPL";
         }) {};
      "tagged" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "tagged";
           version = "0.8.6";
           sha256 = "ad16def0884cf6f05ae1ae8e90192cf9d8d9673fa264b249499bd9e4fac791dd";
           revision = "2";
           editedCabalFile = "1y8z8hmm846z7h3wqncpi0d4zhsnkwf08q0wchivkjw8di7ahz0z";
           libraryHaskellDepends = [
             base deepseq template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/tagged";
           description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagged-binary" = callPackage
        ({ mkDerivation, base, base-compat, binary, bytestring, pureMD5
         , stdenv
         }:
         mkDerivation {
           pname = "tagged-binary";
           version = "0.2.0.1";
           sha256 = "72cfaa0995838dfb7f0cda897175c469d6b7aef6fd396fc56abc70194b0f645b";
           libraryHaskellDepends = [
             base base-compat binary bytestring pureMD5
           ];
           doHaddock = false;
           doCheck = false;
           description = "Provides tools for serializing data tagged with type information";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tagged-identity" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "tagged-identity";
           version = "0.1.3";
           sha256 = "2cec62a7aac67cae90003e811eda26bfcf3c297b9987e548c0d54cc6b653b2d8";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/tagged-identity";
           description = "Trivial monad transformer that allows identical monad stacks have different types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagged-transformer" = callPackage
        ({ mkDerivation, base, comonad, contravariant, distributive
         , exceptions, mtl, reflection, semigroupoids, stdenv, tagged
         }:
         mkDerivation {
           pname = "tagged-transformer";
           version = "0.8.1";
           sha256 = "a0ff6121e852c78f6428e583c18e90e3bf899f59a529fb2076236e1146eedcb9";
           libraryHaskellDepends = [
             base comonad contravariant distributive exceptions mtl reflection
             semigroupoids tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/tagged-transformer";
           description = "Monad transformer carrying an extra phantom type tag";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagshare" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "tagshare";
           version = "0.0";
           sha256 = "d2314bae2e6820700f2a61db9c9f7976e1b53547a49cdd3352bdf29ac3856ce0";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "TagShare - explicit sharing with tags";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagsoup" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text }:
         mkDerivation {
           pname = "tagsoup";
           version = "0.14.8";
           sha256 = "ba7e5500d853d29f0675b90655b7fdd032a4a7eee82a56e7ee3ef9949fe93ad5";
           libraryHaskellDepends = [ base bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/tagsoup#readme";
           description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagstream-conduit" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , case-insensitive, conduit, conduit-extra, data-default, resourcet
         , stdenv, text, transformers, xml-conduit
         }:
         mkDerivation {
           pname = "tagstream-conduit";
           version = "0.5.5.3";
           sha256 = "b296e8f0ba18ae951b5bb3fc2d9d964954666df61ea9363d667f251af17134ab";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring case-insensitive conduit
             conduit-extra data-default resourcet text transformers xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yihuang/tagstream-conduit";
           description = "streamlined html tag parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tao" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "tao";
           version = "1.0.0";
           sha256 = "0b0a1e9606b15eb3bd334eaaf09f01a52f5cb086e5947959116d1d4409541a47";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jship/tao#readme";
           description = "Type-level assertion operators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tao-example" = callPackage
        ({ mkDerivation, base, stdenv, tao }:
         mkDerivation {
           pname = "tao-example";
           version = "1.0.0";
           sha256 = "65de395b78e922d95ce7badf6588c00c6d01ea5c14b33c062cde19229f4b00b2";
           libraryHaskellDepends = [ base tao ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jship/tao#readme";
           description = "Example usage of the tao package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tar" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , directory, filepath, stdenv, time
         }:
         mkDerivation {
           pname = "tar";
           version = "0.5.1.1";
           sha256 = "b384449f62b2b0aa3e6d2cb1004b8060b01f21ec93e7b63e7af6d8fad8a9f1de";
           revision = "2";
           editedCabalFile = "131f369a2vjzr26r7f2c2p534xvyw0s7cvgvih2ck56lqha58wbs";
           configureFlags = [ "-f-old-time" ];
           libraryHaskellDepends = [
             array base bytestring containers deepseq directory filepath time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Reading, writing and manipulating \".tar\" archive files.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tar-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , directory, filepath, safe-exceptions, stdenv, text, unix
         }:
         mkDerivation {
           pname = "tar-conduit";
           version = "0.3.2";
           sha256 = "004578db7088e7ad53e23f8a293d739314698f0ec421ffad7be101e13c1cf62d";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators directory filepath
             safe-exceptions text unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/tar-conduit#readme";
           description = "Extract and create tar files using conduit for streaming";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tardis" = callPackage
        ({ mkDerivation, base, mmorph, mtl, stdenv }:
         mkDerivation {
           pname = "tardis";
           version = "0.4.1.0";
           sha256 = "e672abadd75055c2372d722c98058f7f3403fcca18258565d1cdd8e0dc25a5d9";
           revision = "1";
           editedCabalFile = "1wp6vp90g19hv8r2l83ava7qxf0933gb7ni2zgyfa66vlvxvhibv";
           libraryHaskellDepends = [ base mmorph mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/tardis";
           description = "Bidirectional state monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, clock, containers, mtl
         , optparse-applicative, stdenv, stm, tagged, unbounded-delays, unix
         , wcwidth
         }:
         mkDerivation {
           pname = "tasty";
           version = "1.2.3";
           sha256 = "8ca107abc12a476cfbc84f516f30a614c81be315903f910bc681137eb702f662";
           libraryHaskellDepends = [
             ansi-terminal async base clock containers mtl optparse-applicative
             stm tagged unbounded-delays unix wcwidth
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/tasty";
           description = "Modern and extensible testing framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-ant-xml" = callPackage
        ({ mkDerivation, base, containers, directory, filepath
         , generic-deriving, ghc-prim, mtl, stdenv, stm, tagged, tasty
         , transformers, xml
         }:
         mkDerivation {
           pname = "tasty-ant-xml";
           version = "1.1.6";
           sha256 = "1c17899e3870922113bbfbf50e33b24478b53cae85dc76906a2de57c03bd188f";
           libraryHaskellDepends = [
             base containers directory filepath generic-deriving ghc-prim mtl
             stm tagged tasty transformers xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/tasty-ant-xml";
           description = "Render tasty output to XML for Jenkins";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-dejafu" = callPackage
        ({ mkDerivation, base, dejafu, random, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-dejafu";
           version = "2.0.0.1";
           sha256 = "3face0f15baf33e55d1ecef336bf262cd70f84696e1925f8863378f642fe8fa5";
           libraryHaskellDepends = [ base dejafu random tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Deja Fu support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-discover" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, Glob
         , stdenv
         }:
         mkDerivation {
           pname = "tasty-discover";
           version = "4.2.1";
           sha256 = "be6c5b384614a592fb056e2e4f7806416aa37f114db77d0f8986938ba7cc1d3e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory filepath Glob
           ];
           executableHaskellDepends = [
             base containers directory filepath Glob
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://git.coop/lwm/tasty-discover";
           description = "Test discovery for the tasty framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-expected-failure" = callPackage
        ({ mkDerivation, base, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-expected-failure";
           version = "0.11.1.2";
           sha256 = "1689d91bf02994858bdaa7fdad0944eebfa8ea27744da9bae48cea59c36caf9c";
           revision = "1";
           editedCabalFile = "1r367zar3gdad99nh53z7pr1qcw640pkcdv8zgl1b162ds3sv6zz";
           libraryHaskellDepends = [ base tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nomeata/tasty-expected-failure";
           description = "Mark tasty tests as failure expected";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-golden" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, deepseq
         , directory, filepath, mtl, optparse-applicative, process, stdenv
         , tagged, tasty, temporary
         }:
         mkDerivation {
           pname = "tasty-golden";
           version = "2.3.2";
           sha256 = "04103d2a2fd6acc8f66b67d943060e88a2ea36b799502bf3e76c2726a15c714c";
           libraryHaskellDepends = [
             async base bytestring containers deepseq directory filepath mtl
             optparse-applicative process tagged tasty temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/tasty-golden";
           description = "Golden tests support for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-hedgehog" = callPackage
        ({ mkDerivation, base, hedgehog, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-hedgehog";
           version = "1.0.0.2";
           sha256 = "65538f7371f5ccf52c232a4723d931dd0278ea49bf478c2abe50c3bc4c1d5bef";
           revision = "1";
           editedCabalFile = "0r4mijgy1z9rdi3as2a1a02xykwyqalhg5vahsjzgdgmf7bmmc6h";
           libraryHaskellDepends = [ base hedgehog tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/tasty-hedgehog";
           description = "Integration for tasty and hedgehog";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-hspec" = callPackage
        ({ mkDerivation, base, hspec, hspec-core, QuickCheck, stdenv, tasty
         , tasty-quickcheck, tasty-smallcheck
         }:
         mkDerivation {
           pname = "tasty-hspec";
           version = "1.1.5.1";
           sha256 = "fe889ec0f7b3991c46a07d9ff9cf09608a73a18f434a7480d2a09c79e56f3345";
           revision = "5";
           editedCabalFile = "1ramy5jn7a6xvxc6s8bvn34m1vzniks05277s3i80cp4qprwx8ri";
           libraryHaskellDepends = [
             base hspec hspec-core QuickCheck tasty tasty-quickcheck
             tasty-smallcheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/tasty-hspec";
           description = "Hspec support for the Tasty test framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-hunit" = callPackage
        ({ mkDerivation, base, call-stack, stdenv, tasty }:
         mkDerivation {
           pname = "tasty-hunit";
           version = "0.10.0.2";
           sha256 = "4823c85efe15f36e1d71867aaa6cdcdff3ef39f97492321e9bb8a30c742f6ef7";
           libraryHaskellDepends = [ base call-stack tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/tasty";
           description = "HUnit support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-kat" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, tasty }:
         mkDerivation {
           pname = "tasty-kat";
           version = "0.0.3";
           sha256 = "a72501f0f77db372648566bbba1dd1d6d0d0c975b42238875d663313e9a5db93";
           libraryHaskellDepends = [ base bytestring tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/tasty-kat";
           description = "Known Answer Tests (KAT) framework for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-leancheck" = callPackage
        ({ mkDerivation, base, leancheck, stdenv, tasty }:
         mkDerivation {
           pname = "tasty-leancheck";
           version = "0.0.1";
           sha256 = "2791628bf9698aee88c9e1b07ff2f910510664cdc44e2a30c805c2026888d31a";
           libraryHaskellDepends = [ base leancheck tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/tasty-leancheck#readme";
           description = "LeanCheck support for the Tasty test framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-lua" = callPackage
        ({ mkDerivation, base, bytestring, file-embed, hslua, stdenv, tasty
         , text
         }:
         mkDerivation {
           pname = "tasty-lua";
           version = "0.2.2";
           sha256 = "fb21bb6ffd2f30d0733df18ee11664204e73e49f214196a952f11b999d6be554";
           libraryHaskellDepends = [
             base bytestring file-embed hslua tasty text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hslua/tasty-lua";
           description = "Write tests in Lua, integrate into tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-program" = callPackage
        ({ mkDerivation, base, deepseq, directory, filepath, process
         , stdenv, tasty
         }:
         mkDerivation {
           pname = "tasty-program";
           version = "1.0.5";
           sha256 = "4cb255ad5f037029cc6ae244fffdfb0ed7c65a4b0575d98ec61c067d6f5829c4";
           libraryHaskellDepends = [
             base deepseq directory filepath process tasty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jstolarek/tasty-program";
           description = "Use tasty framework to test whether a program executes correctly";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-quickcheck" = callPackage
        ({ mkDerivation, base, optparse-applicative, QuickCheck, random
         , stdenv, tagged, tasty
         }:
         mkDerivation {
           pname = "tasty-quickcheck";
           version = "0.10.1.1";
           sha256 = "f8326014c975ad31cac9e3da55f4bc86d0b26139557987d58c1f9554a8f31f25";
           libraryHaskellDepends = [
             base optparse-applicative QuickCheck random tagged tasty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/tasty";
           description = "QuickCheck support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-silver" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
         , deepseq, directory, filepath, mtl, optparse-applicative, process
         , process-extras, regex-tdfa, semigroups, stdenv, stm, tagged
         , tasty, temporary, text
         }:
         mkDerivation {
           pname = "tasty-silver";
           version = "3.1.13";
           sha256 = "da5d755276652b75aa2f8876f2b62f81bfa368f12c17dbd018dcd2cde4eba9e9";
           libraryHaskellDepends = [
             ansi-terminal async base bytestring containers deepseq directory
             filepath mtl optparse-applicative process process-extras regex-tdfa
             semigroups stm tagged tasty temporary text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phile314/tasty-silver";
           description = "A fancy test runner, including support for golden tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-smallcheck" = callPackage
        ({ mkDerivation, async, base, smallcheck, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-smallcheck";
           version = "0.8.1";
           sha256 = "314ba7acdb7793730e7677f553a72dd6a4a8f9a45ff3e931cd7d384affb3c6d8";
           libraryHaskellDepends = [ async base smallcheck tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "SmallCheck support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-th" = callPackage
        ({ mkDerivation, base, haskell-src-exts, stdenv, tasty
         , template-haskell
         }:
         mkDerivation {
           pname = "tasty-th";
           version = "0.1.7";
           sha256 = "435aac8f317e2f8cb1aa96fb3f7c9003c1ac28e6d3ca4c3c23f5142178de512c";
           libraryHaskellDepends = [
             base haskell-src-exts tasty template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bennofs/tasty-th";
           description = "Automatic tasty test case discovery using TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tce-conf" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "tce-conf";
           version = "1.3";
           sha256 = "b051843bb941ed137242edfcfb28b1c15083951272fe292e82c140c9e1ad26a2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/dino/tce-conf";
           description = "Very simple config file reading";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tcp-streams" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, io-streams
         , network, pem, stdenv, tls, x509, x509-store, x509-system
         }:
         mkDerivation {
           pname = "tcp-streams";
           version = "1.0.1.1";
           sha256 = "0a6313e4b329b6f9fd3854963868cc2208aaad4259ae6618afa91950990fe2b7";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring data-default-class io-streams network pem tls x509
             x509-store x509-system
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/didi-FP/tcp-streams";
           description = "One stop solution for tcp client and server with tls support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tcp-streams-openssl" = callPackage
        ({ mkDerivation, base, bytestring, HsOpenSSL, HsOpenSSL-x509-system
         , io-streams, network, stdenv, tcp-streams
         }:
         mkDerivation {
           pname = "tcp-streams-openssl";
           version = "1.0.1.0";
           sha256 = "c3e7588ba7348fac87a9dcc531909f90bb3b4a1c01da9eb871a918d02b146afe";
           libraryHaskellDepends = [
             base bytestring HsOpenSSL HsOpenSSL-x509-system io-streams network
             tcp-streams
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/didi-FP/tcp-streams";
           description = "Tcp streams using openssl for tls support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tdigest" = callPackage
        ({ mkDerivation, base, base-compat, binary, Cabal, cabal-doctest
         , deepseq, reducers, semigroupoids, stdenv, transformers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "tdigest";
           version = "0.2.1";
           sha256 = "d46e38067c4d064f3c9c77219f570ba4e9dbbd7273a5edc4860610cde4afb84e";
           revision = "5";
           editedCabalFile = "1crjfhxhs8ihbl2xn1dqr5w19g7w74mcf2w889my6zb935l7lyjs";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base base-compat binary deepseq reducers semigroupoids transformers
             vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/haskell-tdigest#readme";
           description = "On-line accumulation of rank-based statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "template-toolkit" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , directory, hashtables, mtl, parsec, pcre-utils
         , regex-pcre-builtin, scientific, stdenv, text, time
         , unordered-containers, uri-encode
         }:
         mkDerivation {
           pname = "template-toolkit";
           version = "0.1.1.0";
           sha256 = "e112d6896958d9d6eb7a4fc63b0b77a9a185d5452d0d4318c6a62121b17b1a5b";
           libraryHaskellDepends = [
             aeson base binary bytestring containers directory hashtables mtl
             parsec pcre-utils regex-pcre-builtin scientific text time
             unordered-containers uri-encode
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kobargh/template-toolkit#readme";
           description = "Template Toolkit implementation for Haskell";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "temporary" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, random
         , stdenv, transformers, unix
         }:
         mkDerivation {
           pname = "temporary";
           version = "1.3";
           sha256 = "8c442993694b5ffca823ce864af95bd2841fb5264ee511c61cf48cc71d879890";
           libraryHaskellDepends = [
             base directory exceptions filepath random transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/temporary";
           description = "Portable temporary file and directory support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "temporary-rc" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, stdenv
         , transformers, unix
         }:
         mkDerivation {
           pname = "temporary-rc";
           version = "1.2.0.3";
           sha256 = "1a4f8dd65f7db92316a68ef64c3518873799115babce92ef9869103d318011db";
           libraryHaskellDepends = [
             base directory exceptions filepath transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/feuerbach/temporary";
           description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "temporary-resourcet" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, resourcet
         , stdenv, transformers, unix
         }:
         mkDerivation {
           pname = "temporary-resourcet";
           version = "0.1.0.1";
           sha256 = "e0406f6834690ffa3a0b9727302a5ae928cbdc1eb42431a15daaac498fcaee71";
           libraryHaskellDepends = [
             base directory exceptions filepath resourcet transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/ttuegel/temporary-resourcet";
           description = "Portable temporary files and directories with automatic deletion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tensorflow-test" = callPackage
        ({ mkDerivation, base, HUnit, stdenv, vector }:
         mkDerivation {
           pname = "tensorflow-test";
           version = "0.1.0.0";
           sha256 = "378217dde895daf6599a8d3fb07ed59de5e2d8024958277558faca190bb44afc";
           libraryHaskellDepends = [ base HUnit vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tensorflow/haskell#readme";
           description = "Some common functions for test suites";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "tensors" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, vector }:
         mkDerivation {
           pname = "tensors";
           version = "0.1.4";
           sha256 = "d65d2c0dc7c6c90357c892b42dc13f853c95b96270e4b5afb3d717d42f1a38f2";
           revision = "1";
           editedCabalFile = "0a96iw75ylygbjdlab5dj3dkkqamd2k1g2nfy6w7ly6j7rq6f84p";
           libraryHaskellDepends = [ base deepseq vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leptonyu/tensors#readme";
           description = "Tensor in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "termbox" = callPackage
        ({ mkDerivation, array, base, c2hs, stdenv }:
         mkDerivation {
           pname = "termbox";
           version = "0.2.0";
           sha256 = "0fcb204e2ddfdac84add91f49b8e28da1502ef8671a02611d8d01a568ce4c113";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ array base ];
           libraryToolDepends = [ c2hs ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/termbox";
           description = "termbox bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "terminal-progress-bar" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, terminal-size, text, time
         }:
         mkDerivation {
           pname = "terminal-progress-bar";
           version = "0.4.1";
           sha256 = "a61ca10c92cacc712dbbe28881dc23f41cc139760b7b2eef66bd0faa60ea5e24";
           libraryHaskellDepends = [ base deepseq terminal-size text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/roelvandijk/terminal-progress-bar";
           description = "A progress bar in the terminal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "terminal-size" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "terminal-size";
           version = "0.3.2.1";
           sha256 = "b5c23e964756bc13914649a67d63233f59ad0a813abe7cadeb2fc9d586dc9658";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Get terminal window height and width";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework" = callPackage
        ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
         , hostname, old-locale, random, regex-posix, stdenv, time, xml
         }:
         mkDerivation {
           pname = "test-framework";
           version = "0.8.2.0";
           sha256 = "f5aec7a15dbcb39e951bcf6502606fd99d751197b5510f41706899aa7e660ac2";
           revision = "5";
           editedCabalFile = "18g92ajx3ghznd6k3ihj22ln29n676ailzwx3k0f1kj3bmpilnh6";
           libraryHaskellDepends = [
             ansi-terminal ansi-wl-pprint base containers hostname old-locale
             random regex-posix time xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.github.io/test-framework/";
           description = "Framework for running and organising tests, with HUnit and QuickCheck support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-hunit" = callPackage
        ({ mkDerivation, base, extensible-exceptions, HUnit, stdenv
         , test-framework
         }:
         mkDerivation {
           pname = "test-framework-hunit";
           version = "0.3.0.2";
           sha256 = "95cb8ee02a850b164bfdabdf4dbc839d621361f3ac770ad21ea43a8bde360bf8";
           revision = "3";
           editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
           libraryHaskellDepends = [
             base extensible-exceptions HUnit test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://batterseapower.github.io/test-framework/";
           description = "HUnit support for the test-framework package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-leancheck" = callPackage
        ({ mkDerivation, base, leancheck, stdenv, test-framework }:
         mkDerivation {
           pname = "test-framework-leancheck";
           version = "0.0.1";
           sha256 = "236c4c2e6b647c5eb84aeda94a949d50341999825d1a9372f195218137609f2f";
           libraryHaskellDepends = [ base leancheck test-framework ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/test-framework-leancheck#readme";
           description = "LeanCheck support for test-framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-quickcheck2" = callPackage
        ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
         , stdenv, test-framework
         }:
         mkDerivation {
           pname = "test-framework-quickcheck2";
           version = "0.3.0.5";
           sha256 = "c9f678d4ec30599172eb887031f0bce2012b532daeb713836bd912bff64eee59";
           revision = "2";
           editedCabalFile = "1apgf91van2070m6jhj9w3h2xmr42r4kk0da9crq9994hd8zwny2";
           libraryHaskellDepends = [
             base extensible-exceptions QuickCheck random test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.github.io/test-framework/";
           description = "QuickCheck-2 support for the test-framework package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-smallcheck" = callPackage
        ({ mkDerivation, base, smallcheck, stdenv, test-framework
         , transformers
         }:
         mkDerivation {
           pname = "test-framework-smallcheck";
           version = "0.2";
           sha256 = "6081c4f35967b0d0cb92ac09a915fa9e2da01c401266b20ce18793fbc2bceff6";
           libraryHaskellDepends = [
             base smallcheck test-framework transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/smallcheck";
           description = "Support for SmallCheck tests in test-framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-th" = callPackage
        ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
         , regex-posix, stdenv, template-haskell, test-framework
         }:
         mkDerivation {
           pname = "test-framework-th";
           version = "0.2.4";
           sha256 = "8b780d9e3edd8d91e24f72d9fa1f80420e52959428ad7c22d0694901a43f9c8a";
           libraryHaskellDepends = [
             base haskell-src-exts language-haskell-extract regex-posix
             template-haskell test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/finnsson/test-generator";
           description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "testing-feat" = callPackage
        ({ mkDerivation, base, QuickCheck, size-based, stdenv
         , testing-type-modifiers
         }:
         mkDerivation {
           pname = "testing-feat";
           version = "1.1.0.0";
           sha256 = "1904d31ddce611474e8c836582efbca1ae7d1c7dc76083cf4300e8e0eeff58ec";
           libraryHaskellDepends = [
             base QuickCheck size-based testing-type-modifiers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/JonasDuregard/testing-feat";
           description = "Functional Enumeration of Algebraic Types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "testing-type-modifiers" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "testing-type-modifiers";
           version = "0.1.0.1";
           sha256 = "050bdade2c6f0122b1a04a3833ab7eea2399ffda8258bca6d93ba6614bb202f2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Data type modifiers for property based testing";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "texmath" = callPackage
        ({ mkDerivation, base, containers, mtl, pandoc-types, parsec
         , stdenv, syb, xml
         }:
         mkDerivation {
           pname = "texmath";
           version = "0.11.3";
           sha256 = "2e01dd4534f3dba26a4d5ec889dcb2c6195bd0211b125eab305aae41eeea370f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers mtl pandoc-types parsec syb xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/texmath";
           description = "Conversion between formats used to represent mathematics";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "text-binary" = callPackage
        ({ mkDerivation, base, binary, stdenv, text }:
         mkDerivation {
           pname = "text-binary";
           version = "0.2.1.1";
           sha256 = "b697b2bd09080643d4686705c779122129638904870df5c1d41c8fc72f08f4a1";
           libraryHaskellDepends = [ base binary text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kawu/text-binary";
           description = "Binary instances for text types";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "text-builder" = callPackage
        ({ mkDerivation, base, bytestring, deferred-folds, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "text-builder";
           version = "0.6.6.1";
           sha256 = "b5fa52a4a33bc6ba727996607ccdff0c35b951d1d522e786c96e59f16dafd20d";
           libraryHaskellDepends = [
             base bytestring deferred-folds text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/text-builder";
           description = "An efficient strict text builder";
           license = stdenv.lib.licenses.mit;
         }) {};
      "text-conversions" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, errors, stdenv, text
         }:
         mkDerivation {
           pname = "text-conversions";
           version = "0.3.0";
           sha256 = "1756be2f6b515fea9e00b383c00d1ee851f8b25ddbc2901dd6be27d9b6292c21";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring errors text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cjdev/text-conversions#readme";
           description = "Safe conversions between textual types";
           license = stdenv.lib.licenses.isc;
         }) {};
      "text-format" = callPackage
        ({ mkDerivation, array, base, double-conversion, ghc-prim
         , integer-gmp, old-locale, stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "text-format";
           version = "0.3.2";
           sha256 = "326637b8ad8420a51c0531cb444e45e0029d68c5980a53d5ffdfa2297d47bae3";
           revision = "2";
           editedCabalFile = "05findgw709h930wshaq514maxarjyjhsam6pkyzq83iz1yc2gra";
           libraryHaskellDepends = [
             array base double-conversion ghc-prim integer-gmp old-locale text
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text-format";
           description = "Text formatting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-icu" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, icu, stdenv, text }:
         mkDerivation {
           pname = "text-icu";
           version = "0.7.0.1";
           sha256 = "e2764c2749033706eed5b9fb3cda11177ad15cdf11912028f551eca39a2c7f78";
           libraryHaskellDepends = [ base bytestring deepseq text ];
           librarySystemDepends = [ icu ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text-icu";
           description = "Bindings to the ICU library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) icu;};
      "text-latin1" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, data-checked
         , hashable, semigroups, stdenv, text
         }:
         mkDerivation {
           pname = "text-latin1";
           version = "0.3.1";
           sha256 = "6c7482ae0cfde06fe6ad8f0e6ea6b0d082d27a075370b5c018c31e53aad9abf3";
           libraryHaskellDepends = [
             base bytestring case-insensitive data-checked hashable semigroups
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/text-latin1";
           description = "Latin-1 (including ASCII) utility functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-ldap" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, dlist
         , memory, stdenv, transformers
         }:
         mkDerivation {
           pname = "text-ldap";
           version = "0.1.1.13";
           sha256 = "ec174c30333548e21b045554329e6332d54bc355d96e0951ea3ea524463a2a34";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base bytestring containers dlist memory transformers
           ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Parser and Printer for LDAP text data stream";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-manipulate" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "text-manipulate";
           version = "0.2.0.1";
           sha256 = "e0e9c71d9b1cfb7d3bca3d0a500d939b3efc6684515c0d7bd685503aa4f49d2f";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/text-manipulate";
           description = "Case conversion, word boundary manipulation, and textual subjugation";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "text-metrics" = callPackage
        ({ mkDerivation, base, containers, stdenv, text, vector }:
         mkDerivation {
           pname = "text-metrics";
           version = "0.3.0";
           sha256 = "3874af74060e35f01702640b353ac2180d93bb5d292a204e0ee3cadd26efbfa2";
           revision = "4";
           editedCabalFile = "017drxq9x56b345d8w5m8xdsi1zzs0z16pbdx8j35cd1lsnh3kf1";
           libraryHaskellDepends = [ base containers text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/text-metrics";
           description = "Calculate various string metrics efficiently";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-postgresql" = callPackage
        ({ mkDerivation, base, dlist, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "text-postgresql";
           version = "0.0.3.1";
           sha256 = "c6e26888d2751b78e3102747d0bccedeee4002a1eb6c76dd1fe6c3836b5082e8";
           libraryHaskellDepends = [
             base dlist transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Parser and Printer of PostgreSQL extended types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-printer" = callPackage
        ({ mkDerivation, base, bytestring, pretty, semigroups, stdenv, text
         , text-latin1
         }:
         mkDerivation {
           pname = "text-printer";
           version = "0.5.0.1";
           sha256 = "58a7680fc75a058ef8a03a6d519d5266f204bae2eb30021663de135a1c31b518";
           libraryHaskellDepends = [
             base bytestring pretty semigroups text text-latin1
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/text-printer";
           description = "Abstract interface for text builders/printers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-region" = callPackage
        ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
         , groups, lens, stdenv, text
         }:
         mkDerivation {
           pname = "text-region";
           version = "0.3.1.0";
           sha256 = "a74cac02ae5b3c37d09d415f2440a2ea1977145b962b3e291c6484d7cffac5ff";
           revision = "1";
           editedCabalFile = "1z5l1hv8sc4ida5s4r03ihak612lrq0rf7sdfkw7gf05f67c622p";
           libraryHaskellDepends = [
             aeson base base-unicode-symbols bytestring groups lens text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvoidex/text-region";
           description = "Marking text regions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-short" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, ghc-prim
         , hashable, stdenv, text
         }:
         mkDerivation {
           pname = "text-short";
           version = "0.1.3";
           sha256 = "bf5b9fedb7d0301e8fdf33e3223d10ca940e9e72c18bac135be80b6016edd977";
           revision = "2";
           editedCabalFile = "17cb7p0qywf2dsrq3g8qb3ssknd9wl5k0nc2pxz9gc3l8rxpkw51";
           libraryHaskellDepends = [
             base binary bytestring deepseq ghc-prim hashable text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Memory-efficient representation of Unicode text strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-show" = callPackage
        ({ mkDerivation, array, base, base-compat-batteries, bifunctors
         , bytestring, bytestring-builder, containers, contravariant
         , generic-deriving, ghc-boot-th, ghc-prim, integer-gmp, nats
         , semigroups, stdenv, tagged, template-haskell, text
         , th-abstraction, th-lift, transformers, transformers-compat, void
         }:
         mkDerivation {
           pname = "text-show";
           version = "3.8.2";
           sha256 = "9f63ac31b76afa4b4e28eb50e98a69aedd868e46b616491d79e3772a5fc18658";
           revision = "1";
           editedCabalFile = "0fdlba9rmjk7irf376rglyyi9rbz49mhm5zyx112ah8nqgh50myi";
           libraryHaskellDepends = [
             array base base-compat-batteries bifunctors bytestring
             bytestring-builder containers contravariant generic-deriving
             ghc-boot-th ghc-prim integer-gmp nats semigroups tagged
             template-haskell text th-abstraction th-lift transformers
             transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/text-show";
           description = "Efficient conversion of values into Text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-show-instances" = callPackage
        ({ mkDerivation, base, base-compat-batteries, bifunctors, binary
         , containers, directory, ghc-boot-th, haskeline, hpc, old-locale
         , old-time, pretty, random, semigroups, stdenv, tagged
         , template-haskell, terminfo, text, text-short, text-show, time
         , transformers, transformers-compat, unix, unordered-containers
         , vector, xhtml
         }:
         mkDerivation {
           pname = "text-show-instances";
           version = "3.8.3";
           sha256 = "ad549ae8614843558f7cc44ee6d054ae9950c9ac45d349b18cc97d3e6e196387";
           revision = "5";
           editedCabalFile = "1czi0gl7kxc64kk8v36xw2ln0vjj2pls3x9nmh754nvdg0616jfj";
           libraryHaskellDepends = [
             base base-compat-batteries bifunctors binary containers directory
             ghc-boot-th haskeline hpc old-locale old-time pretty random
             semigroups tagged template-haskell terminfo text text-short
             text-show time transformers transformers-compat unix
             unordered-containers vector xhtml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/text-show-instances";
           description = "Additional instances for text-show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-zipper" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, text, vector }:
         mkDerivation {
           pname = "text-zipper";
           version = "0.10.1";
           sha256 = "9afaeb93d55b0bb6d0d6f495e3ff0789a60d0dee57fb6103f52e4c05ae64b14b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base deepseq text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/text-zipper/";
           description = "A text editor zipper library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "textlocal" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, http-conduit, stdenv, text, unix-time
         }:
         mkDerivation {
           pname = "textlocal";
           version = "0.1.0.5";
           sha256 = "8954ff6270c9920fc390be6b9f398975ea06dd6808a411cbf8fa5fb4a9cf3087";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-conduit text
             unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/just-chow/textlocal";
           description = "Haskell wrapper for textlocal SMS gateway";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tf-random" = callPackage
        ({ mkDerivation, base, primitive, random, stdenv, time }:
         mkDerivation {
           pname = "tf-random";
           version = "0.5";
           sha256 = "2e30cec027b313c9e1794d326635d8fc5f79b6bf6e7580ab4b00186dadc88510";
           libraryHaskellDepends = [ base primitive random time ];
           doHaddock = false;
           doCheck = false;
           description = "High-quality splittable pseudorandom number generator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tfp" = callPackage
        ({ mkDerivation, base, stdenv, utility-ht }:
         mkDerivation {
           pname = "tfp";
           version = "1.0.1.1";
           sha256 = "71b494920377cfd1c58f220e5d8862c1f2c0d2b1ce529352f2fde20428a96ce2";
           libraryHaskellDepends = [ base utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Type_arithmetic";
           description = "Type-level integers, booleans, lists using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-abstraction" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "th-abstraction";
           version = "0.3.1.0";
           sha256 = "4b9e1bcc6ec3d897fb09c3d7fa2f37f0672d5370e0e3e49809886da81fe001b9";
           revision = "1";
           editedCabalFile = "1c0sy614vfcdvshn0z09nzfiq89v5if31yvvpxzrivrdy9gf912s";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/glguy/th-abstraction";
           description = "Nicer interface for reified information about data types";
           license = stdenv.lib.licenses.isc;
         }) {};
      "th-data-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-data-compat";
           version = "0.0.2.7";
           sha256 = "13aaff2410e39e518f6de74a5bdd20de0e0139fc4af2c344e7c282cf63fa4e7a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Compatibility for data definition template of TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-desugar" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, syb
         , template-haskell, th-expand-syns, th-lift, th-orphans
         }:
         mkDerivation {
           pname = "th-desugar";
           version = "1.9";
           sha256 = "f14a7a854df55abb3bbca5ef0ec202ed4d7e1631a5fb51767d360dc1b604afef";
           libraryHaskellDepends = [
             base containers mtl syb template-haskell th-expand-syns th-lift
             th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/goldfirere/th-desugar";
           description = "Functions to desugar Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-expand-syns" = callPackage
        ({ mkDerivation, base, containers, stdenv, syb, template-haskell }:
         mkDerivation {
           pname = "th-expand-syns";
           version = "0.4.5.0";
           sha256 = "5e909e674bc6311d4a8c2376df1e5bda2d8ecde8d79ec8d3d51f59c5bc779cdc";
           libraryHaskellDepends = [ base containers syb template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanielSchuessler/th-expand-syns";
           description = "Expands type synonyms in Template Haskell ASTs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-extras" = callPackage
        ({ mkDerivation, base, stdenv, syb, template-haskell }:
         mkDerivation {
           pname = "th-extras";
           version = "0.0.0.4";
           sha256 = "8feff450aaf28ec4f08c45a5656c62879861a8e7f45591cb367d5351ddc3fbed";
           libraryHaskellDepends = [ base syb template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/th-extras";
           description = "A grab bag of functions for use with Template Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "th-lift" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, template-haskell
         , th-abstraction
         }:
         mkDerivation {
           pname = "th-lift";
           version = "0.8.1";
           sha256 = "3fa1f4193794d8d6dc7864e20a2f89ab268c321a4b3d254fd38282619f8e5ed7";
           libraryHaskellDepends = [
             base ghc-prim template-haskell th-abstraction
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/RyanGlScott/th-lift";
           description = "Derive Template Haskell's Lift class for datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-lift-instances" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv
         , template-haskell, text, th-lift, transformers, vector
         }:
         mkDerivation {
           pname = "th-lift-instances";
           version = "0.1.14";
           sha256 = "e87c194c9aa85576ba32dd7f7c70b8c182a3089d9c3107c9e5c448b6ad242b64";
           revision = "1";
           editedCabalFile = "1jsh3vz8kkzwhfm3m9ji5am8lmv2x7l8g0kkyh3ffngpr4xpswwc";
           libraryHaskellDepends = [
             base bytestring containers template-haskell text th-lift
             transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bennofs/th-lift-instances/";
           description = "Lift instances for template-haskell for common data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-nowq" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, time }:
         mkDerivation {
           pname = "th-nowq";
           version = "0.1.0.3";
           sha256 = "a997d2807b566ac4b4a22633b338ce80a03a60653f4ba611b5b98e9cd6f18c22";
           libraryHaskellDepends = [ base template-haskell time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dzhus/th-nowq#readme";
           description = "Template Haskell splice that expands to current time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-orphans" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell, th-lift
         , th-lift-instances, th-reify-many
         }:
         mkDerivation {
           pname = "th-orphans";
           version = "0.13.9";
           sha256 = "3f3c6bead037cb11faf633b3938d1af2c6b11399e8353b72e80d9eb3b57e41f6";
           revision = "1";
           editedCabalFile = "100gpi0np50vxlapyl6d05w8ss9l2gqacn28i228hsvhvrxxwjdy";
           libraryHaskellDepends = [
             base mtl template-haskell th-lift th-lift-instances th-reify-many
           ];
           doHaddock = false;
           doCheck = false;
           description = "Orphan instances for TH datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-printf" = callPackage
        ({ mkDerivation, base, charset, containers, microlens-platform, mtl
         , parsec, semigroups, stdenv, template-haskell, th-lift
         , transformers
         }:
         mkDerivation {
           pname = "th-printf";
           version = "0.6.0";
           sha256 = "c258ed7852cbafa6c4b7142343d6294513081a7b7ddeeb89c089b082fa5f0ed7";
           libraryHaskellDepends = [
             base charset containers microlens-platform mtl parsec semigroups
             template-haskell th-lift transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pikajude/th-printf#readme";
           description = "Quasiquoters for printf";
           license = stdenv.lib.licenses.mit;
         }) {};
      "th-reify-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-reify-compat";
           version = "0.0.1.5";
           sha256 = "af1b2e7e39e029d8c9a20efdd7b49d4d15616ac360adddc7a09560b9a223359c";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/khibino/haskell-th-reify-compat/";
           description = "Compatibility for the result type of TH reify";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-reify-many" = callPackage
        ({ mkDerivation, base, containers, mtl, safe, stdenv
         , template-haskell, th-expand-syns
         }:
         mkDerivation {
           pname = "th-reify-many";
           version = "0.1.9";
           sha256 = "f889dd029d5ab191ace99fe595f363c60314d536e61c8c58f6167f1a9d29ae43";
           libraryHaskellDepends = [
             base containers mtl safe template-haskell th-expand-syns
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mgsloan/th-reify-many";
           description = "Recurseively reify template haskell datatype info";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-strict-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-strict-compat";
           version = "0.1.0.1";
           sha256 = "c3fad31e4b657047d8dd248803e2206c6a5b7375e22d3940714d0cc42d93aa4a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/igrep/th-strict-compat";
           description = "Compatibility shim for Bang and Strict in Template Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "th-test-utils" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, transformers }:
         mkDerivation {
           pname = "th-test-utils";
           version = "1.0.1";
           sha256 = "9d75fd38252cceac121e38c18645ef14d799332739432d18a836f0ac3e917de1";
           libraryHaskellDepends = [ base template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/LeapYear/th-test-utils#readme";
           description = "Utility functions for testing Template Haskell code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-utilities" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , primitive, stdenv, syb, template-haskell, text, th-orphans
         }:
         mkDerivation {
           pname = "th-utilities";
           version = "0.2.3.1";
           sha256 = "264dff849c2593886195d525fe17a78c5299aeee2229cf524afc17c4f85bc3eb";
           libraryHaskellDepends = [
             base bytestring containers directory filepath primitive syb
             template-haskell text th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/th-utilities#readme";
           description = "Collection of useful functions for use with Template Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "these" = callPackage
        ({ mkDerivation, aeson, assoc, base, base-compat, binary, deepseq
         , hashable, QuickCheck, semigroupoids, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "these";
           version = "1.0.1";
           sha256 = "79cc1ee35d268c5871f585681c649daded2ffe5fc657c3db87a9b2f38a8917cc";
           revision = "3";
           editedCabalFile = "1z6aqz41m1cdm5q5y4jj4fl9j1qcvi32d08r2a103x5ndhf8151q";
           libraryHaskellDepends = [
             aeson assoc base base-compat binary deepseq hashable QuickCheck
             semigroupoids unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isomorphism/these";
           description = "An either-or-both data type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "thread-hierarchy" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm }:
         mkDerivation {
           pname = "thread-hierarchy";
           version = "0.3.0.1";
           sha256 = "8181448452c759b660f6d7c8775fd99479ccc382cd291460903b15574e5d5c34";
           libraryHaskellDepends = [ base containers stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/thread-hierarchy#readme";
           description = "Simple Haskel thread management in hierarchical manner";
           license = stdenv.lib.licenses.mit;
         }) {};
      "thread-local-storage" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "thread-local-storage";
           version = "0.2";
           sha256 = "d648e01631189036a386d91de22f2b862e830ad0625b1f6096b347974f465294";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/thread-local-storage";
           description = "Several options for thread-local-storage (TLS) in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threads" = callPackage
        ({ mkDerivation, base, Cabal, stdenv, stm }:
         mkDerivation {
           pname = "threads";
           version = "0.5.1.6";
           sha256 = "139ac3c067fcbb392b5b9c2feaa98184b75ebe7f2e580726eea6ce812d94562e";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/threads";
           description = "Fork threads and wait for their result";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threepenny-gui" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, containers
         , data-default, deepseq, exceptions, file-embed, filepath, hashable
         , safe, snap-core, snap-server, stdenv, stm, template-haskell, text
         , transformers, unordered-containers, vault, vector, websockets
         , websockets-snap
         }:
         mkDerivation {
           pname = "threepenny-gui";
           version = "0.8.3.1";
           sha256 = "5497dcfa3328de5bd834f7440df863ddb56c70652c69f8fce7dfada995b75522";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson async base bytestring containers data-default deepseq
             exceptions file-embed filepath hashable safe snap-core snap-server
             stm template-haskell text transformers unordered-containers vault
             vector websockets websockets-snap
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Threepenny-gui";
           description = "GUI framework that uses the web browser as a display";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "throttle-io-stream" = callPackage
        ({ mkDerivation, async, base, clock, stdenv, stm, stm-chans }:
         mkDerivation {
           pname = "throttle-io-stream";
           version = "0.2.0.1";
           sha256 = "e897a869062bcb4bcef372cfcf2a1e86699647fab8c721cfb22dbe6c47cf2c8e";
           libraryHaskellDepends = [ async base clock stm stm-chans ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/throttle-io-stream#readme";
           description = "Throttler between arbitrary IO producer and consumer functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "throwable-exceptions" = callPackage
        ({ mkDerivation, base, safe-exceptions, stdenv, template-haskell }:
         mkDerivation {
           pname = "throwable-exceptions";
           version = "0.1.0.9";
           sha256 = "3ab23c1dd24036a5d1229bed2b140ef50259e365e74c97face9d837c50c769a9";
           libraryHaskellDepends = [ base safe-exceptions template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aiya000/hs-throwable-exceptions#README.md";
           description = "throwable-exceptions gives the easy way to throw exceptions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "thyme" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, containers
         , cpphs, deepseq, mtl, old-locale, profunctors, QuickCheck, random
         , stdenv, text, time, vector, vector-space, vector-th-unbox
         }:
         mkDerivation {
           pname = "thyme";
           version = "0.3.5.5";
           sha256 = "84c6701fb7b40841d22582202382c362fd9e0d6e5f1c959b7e0f2f91a85c796c";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring containers deepseq mtl old-locale
             profunctors QuickCheck random text time vector vector-space
             vector-th-unbox
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liyang/thyme";
           description = "A faster time library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tile" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "tile";
           version = "0.3.0.0";
           sha256 = "15ed186360bea0bfc64dd4e6fc27b4e4aed9ba2cc344f1d8ea69687933cc65f0";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/tile#readme";
           description = "Slippy map tile functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-compat" = callPackage
        ({ mkDerivation, base, base-orphans, deepseq, stdenv, time }:
         mkDerivation {
           pname = "time-compat";
           version = "1.9.2.2";
           sha256 = "a268613385d359274edf48fb2dad4af29874f58486b2d5625e3b95a371066a17";
           revision = "2";
           editedCabalFile = "1i94pch4zj713gxcrlb09airbh3hqqs7cscjjfkxk9lixkk6iwnc";
           libraryHaskellDepends = [ base base-orphans deepseq time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/time-compat";
           description = "Compatibility package for time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-lens" = callPackage
        ({ mkDerivation, base, data-lens-light, stdenv, time }:
         mkDerivation {
           pname = "time-lens";
           version = "0.4.0.2";
           sha256 = "d8cbb8fcb79867d4a5fe6bc024d0badd68fad8986f6cdc1161b0f41afa49d01e";
           libraryHaskellDepends = [ base data-lens-light time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/time-lens";
           description = "Lens-based interface to Data.Time data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-locale-compat" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "time-locale-compat";
           version = "0.1.1.5";
           sha256 = "07ff1566de7d851423a843b2de385442319348c621d4f779b3d365ce91ac502c";
           configureFlags = [ "-f-old-locale" ];
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/khibino/haskell-time-locale-compat";
           description = "Compatibile module for time-format locale";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-locale-vietnamese" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "time-locale-vietnamese";
           version = "1.0.0.0";
           sha256 = "96062db31c2a858c20c8e3eb10aaff93e87f6514f335c14d0243429a7f730b76";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tungd/time-locale-vietnamese#readme";
           description = "Vietnamese locale for date and time format";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "time-manager" = callPackage
        ({ mkDerivation, auto-update, base, stdenv }:
         mkDerivation {
           pname = "time-manager";
           version = "0.0.0";
           sha256 = "90a616ed20b2119bb64f78f84230b6798cde22a35e87bc8d9ee08cdf1d90fcdb";
           libraryHaskellDepends = [ auto-update base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "Scalable timer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "time-parsers" = callPackage
        ({ mkDerivation, base, parsers, stdenv, template-haskell, time }:
         mkDerivation {
           pname = "time-parsers";
           version = "0.1.2.1";
           sha256 = "bbf133bd986e79664560f42f2a36b7ad2e89c1095316029e7d6b228412355380";
           revision = "2";
           editedCabalFile = "10bawg6cwfwm31fcs63z8imd1cdl1wq8syn669yfkycrk77wfkli";
           libraryHaskellDepends = [ base parsers template-haskell time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/time-parsers#readme";
           description = "Parsers for types in `time`";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-qq" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, time
         , time-locale-compat
         }:
         mkDerivation {
           pname = "time-qq";
           version = "0.0.1.0";
           sha256 = "ad6f0e5a6e5606ec2df3bb20006f92158100f20298a1b71fe6d79532c6814c87";
           libraryHaskellDepends = [
             base template-haskell time time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/christian-marie/time-qq";
           description = "Quasi-quoter for UTCTime times";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timeit" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "timeit";
           version = "2.0";
           sha256 = "a14df4e578db371e5c609f0784209144545f9cae90026d24a3398042f7c591ea";
           revision = "1";
           editedCabalFile = "0d4vjg48xyqjmydnjqjxica0zr30vgb91b3vv75cig686ikpjmq7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/merijn/timeit";
           description = "Time monadic computations with an IO base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timelens" = callPackage
        ({ mkDerivation, base, lens, stdenv, time }:
         mkDerivation {
           pname = "timelens";
           version = "0.2.0.2";
           sha256 = "f4e6fa016ec37f79c96a62cff174929f04152831c308ab1f9a797f5b5674a764";
           libraryHaskellDepends = [ base lens time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/timelens";
           description = "Lenses for the time package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timer-wheel" = callPackage
        ({ mkDerivation, atomic-primops, base, psqueues, stdenv, vector }:
         mkDerivation {
           pname = "timer-wheel";
           version = "0.2.0.1";
           sha256 = "be93289e65b43a790a2529551e0871123081e77b90dea1b69ea4ae5912d86bd4";
           libraryHaskellDepends = [ atomic-primops base psqueues vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/timer-wheel";
           description = "A timer wheel";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timerep" = callPackage
        ({ mkDerivation, attoparsec, base, monoid-subclasses, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "timerep";
           version = "2.0.0.2";
           sha256 = "1d4e417f3ca08921941c16791680e13b66fb1844d94759068846ede78c965339";
           libraryHaskellDepends = [
             attoparsec base monoid-subclasses text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HugoDaniel/timerep";
           description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timezone-olson" = callPackage
        ({ mkDerivation, base, binary, bytestring, extensible-exceptions
         , stdenv, time, timezone-series
         }:
         mkDerivation {
           pname = "timezone-olson";
           version = "0.1.9";
           sha256 = "32230509029bcf9e1bd95b5ad7ee69b8b0250cffc4bb8f2df88a651b3af74b15";
           libraryHaskellDepends = [
             base binary bytestring extensible-exceptions time timezone-series
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/time-ng/";
           description = "A pure Haskell parser and renderer for binary Olson timezone files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timezone-series" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, time }:
         mkDerivation {
           pname = "timezone-series";
           version = "0.1.9";
           sha256 = "e5d35df5dc2408803120602b0a66ed63439e36b38dd0895f3e2159fcbd7d9cae";
           libraryHaskellDepends = [ base deepseq time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/time-ng/";
           description = "Enhanced timezone handling for Data.Time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tintin" = callPackage
        ({ mkDerivation, base, clay, containers, data-has, directory
         , frontmatter, inflections, inliterate, lucid, optparse-generic
         , process, require, stdenv, temporary, text, universum, yaml
         }:
         mkDerivation {
           pname = "tintin";
           version = "1.10.1";
           sha256 = "2217674d77a5756acf84bdf0072cb3faec82a788b600c36299b3e3f14fc82da4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base clay containers data-has directory frontmatter inflections
             inliterate lucid process require temporary text universum yaml
           ];
           libraryToolDepends = [ require ];
           executableHaskellDepends = [
             base optparse-generic require universum
           ];
           executableToolDepends = [ require ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/theam/tintin#readme";
           description = "A softer alternative to Haddock";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "tinylog" = callPackage
        ({ mkDerivation, base, bytestring, containers, double-conversion
         , fast-logger, stdenv, text, transformers, unix-time
         }:
         mkDerivation {
           pname = "tinylog";
           version = "0.15.0";
           sha256 = "cb71164ce47af991babc9837e3e86c4f9d4e0cac1440f56faa71f4497af58d5f";
           libraryHaskellDepends = [
             base bytestring containers double-conversion fast-logger text
             transformers unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/tinylog/";
           description = "Simplistic logging using fast-logger";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "titlecase" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "titlecase";
           version = "1.0.1";
           sha256 = "e7731c29509d2b41b1d94b89484edffa10b86689a755c4019617a6c9485e49cc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/titlecase#readme";
           description = "Convert English Words to Title Case";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tldr" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, cmark, directory
         , filepath, optparse-applicative, semigroups, stdenv, text
         , typed-process
         }:
         mkDerivation {
           pname = "tldr";
           version = "0.4.0.2";
           sha256 = "c22187ab15d0eeffe8efbd630b3c72e0a6a5df633aef996ff83ef6759ef7c9ff";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base bytestring cmark text
           ];
           executableHaskellDepends = [
             base directory filepath optparse-applicative semigroups
             typed-process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/tldr-hs#readme";
           description = "Haskell tldr client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tls" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, async, base, bytestring
         , cereal, cryptonite, data-default-class, memory, mtl, network
         , stdenv, transformers, x509, x509-store, x509-validation
         }:
         mkDerivation {
           pname = "tls";
           version = "1.4.1";
           sha256 = "bbead1afc0b808bd5cff7bddaeae84ade37f18bbe72bd78d45a2fa4ac41908f8";
           revision = "1";
           editedCabalFile = "0qk07miindqvynhgsqj8jjk1d6i95lbgwipanwnn4vh1707z8xhv";
           libraryHaskellDepends = [
             asn1-encoding asn1-types async base bytestring cereal cryptonite
             data-default-class memory mtl network transformers x509 x509-store
             x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-tls";
           description = "TLS/SSL protocol native implementation (Server and Client)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tls-debug" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, data-default-class
         , network, pem, stdenv, time, tls, x509, x509-store, x509-system
         , x509-validation
         }:
         mkDerivation {
           pname = "tls-debug";
           version = "0.4.5";
           sha256 = "a345c4863bf923829d73abb8e2b706dab8058b12cdf73859d3860eaf7223eb9b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring cryptonite data-default-class network pem time tls
             x509 x509-store x509-system x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-tls";
           description = "Set of programs for TLS testing and debugging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tls-session-manager" = callPackage
        ({ mkDerivation, auto-update, base, basement, bytestring, clock
         , memory, psqueues, stdenv, tls
         }:
         mkDerivation {
           pname = "tls-session-manager";
           version = "0.0.4";
           sha256 = "ba207f79b4536a65625063106c621e8bafc0dc7928bd9273270e19f36d59938c";
           libraryHaskellDepends = [
             auto-update base basement bytestring clock memory psqueues tls
           ];
           doHaddock = false;
           doCheck = false;
           description = "In-memory TLS session manager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tmapchan" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, stm
         , unordered-containers
         }:
         mkDerivation {
           pname = "tmapchan";
           version = "0.0.3";
           sha256 = "e86db4c2e6cdd373b0cbe91e01d2a223c95d5d36930f5a6c484c1586ae5011e0";
           libraryHaskellDepends = [
             base containers hashable stm unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/tmapchan#readme";
           description = "An insert-ordered multimap (indexed FIFO) which consumes values as you lookup";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tmapmvar" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, stm
         , unordered-containers
         }:
         mkDerivation {
           pname = "tmapmvar";
           version = "0.0.4";
           sha256 = "a6e58cfd8bed77c9ec6122d26db79b3d16f139c977a255bd336fe3c53822b4e3";
           libraryHaskellDepends = [
             base containers hashable stm unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "A single-entity stateful Map in STM, similar to tmapchan";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tmp-postgres" = callPackage
        ({ mkDerivation, async, base, bytestring, directory, network
         , port-utils, postgresql-simple, process, stdenv, temporary, unix
         }:
         mkDerivation {
           pname = "tmp-postgres";
           version = "0.2.0.0";
           sha256 = "04cff3ddcf4935df9693f44b4338d35da2905a467d5829606de72a8f60468823";
           libraryHaskellDepends = [
             async base bytestring directory network port-utils
             postgresql-simple process temporary unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/tmp-postgres#readme";
           description = "Start and stop a temporary postgres for testing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "token-bucket" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "token-bucket";
           version = "0.1.0.1";
           sha256 = "312609c0037271b1091f23c2edf467e9449edca5bbed0cfb45c2c93c1bee6ad0";
           revision = "5";
           editedCabalFile = "049d9bk5f8qa6d7gjgg4nqd56xz1mrxr1rxcwxsrk4vkqcpmzs6q";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/token-bucket";
           description = "Rate limiter using lazy bucket algorithm";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "tomland" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, hashable
         , markdown-unlit, megaparsec, mtl, parser-combinators, stdenv, text
         , time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "tomland";
           version = "1.1.0.1";
           sha256 = "51cde31c25056c6a0714758eb782bda0c019bdd2ef58f29baf6364cbf6451f46";
           revision = "1";
           editedCabalFile = "16382q0q77bv9zlahmgbmc90hvl1b23g9fxk4dl2f1lhlfqjkxnw";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers deepseq hashable megaparsec mtl
             parser-combinators text time transformers unordered-containers
           ];
           executableHaskellDepends = [ base text time unordered-containers ];
           executableToolDepends = [ markdown-unlit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/tomland";
           description = "Bidirectional TOML serialization";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "tonalude" = callPackage
        ({ mkDerivation, base, bytestring, rio, stdenv, unliftio }:
         mkDerivation {
           pname = "tonalude";
           version = "0.1.1.0";
           sha256 = "5aa0ce5f89d5e7568e303f1ba41ca998ba05fbf94c17eb42fb01d3e65b601018";
           libraryHaskellDepends = [ base bytestring rio unliftio ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonatona-project/tonatona#readme";
           description = "A standard library for Tonatona framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tonaparser" = callPackage
        ({ mkDerivation, base, envy, rio, say, stdenv }:
         mkDerivation {
           pname = "tonaparser";
           version = "0.1.0.0";
           sha256 = "402215adc8596cd3053f3dc6ffceaf11b6f53f0d8d6a7ccfa44c7a3a0273386d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base envy rio say ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonatona-project/tonatona#readme";
           description = "Scalable way to pass runtime configurations for tonatona";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tonatona" = callPackage
        ({ mkDerivation, base, rio, stdenv, tonaparser }:
         mkDerivation {
           pname = "tonatona";
           version = "0.1.1.0";
           sha256 = "340d5079ca966662f2458d42ff5c5943370777d3a003f0d358379d28ea480d9e";
           libraryHaskellDepends = [ base rio tonaparser ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonatona-project/tonatona#readme";
           description = "meta application framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tonatona-logger" = callPackage
        ({ mkDerivation, base, rio, stdenv, tonaparser, tonatona }:
         mkDerivation {
           pname = "tonatona-logger";
           version = "0.2.0.0";
           sha256 = "caed8d35fc9aa9482b974df7d3f3050347047d3e4e0579bce1d579485dcdf192";
           libraryHaskellDepends = [ base rio tonaparser tonatona ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonatona-project/tonatona#readme";
           description = "tonatona plugin for logging";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tonatona-persistent-postgresql" = callPackage
        ({ mkDerivation, base, monad-logger, persistent
         , persistent-postgresql, resource-pool, rio, stdenv, tonaparser
         , tonatona
         }:
         mkDerivation {
           pname = "tonatona-persistent-postgresql";
           version = "0.1.0.1";
           sha256 = "b6bc628099ad456a54863ae5788a1734411d25ac8971d6a812802e22001caebb";
           libraryHaskellDepends = [
             base monad-logger persistent persistent-postgresql resource-pool
             rio tonaparser tonatona
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonatona-project/tonatona#readme";
           description = "tonatona plugin for accessing PostgreSQL database";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tonatona-persistent-sqlite" = callPackage
        ({ mkDerivation, base, monad-logger, persistent, persistent-sqlite
         , resource-pool, rio, stdenv, tonaparser, tonatona
         }:
         mkDerivation {
           pname = "tonatona-persistent-sqlite";
           version = "0.1.0.1";
           sha256 = "cbe78bf4d2866d025cfc643cd577b5576c3bdc66032ae1d5c939b61b407c1228";
           libraryHaskellDepends = [
             base monad-logger persistent persistent-sqlite resource-pool rio
             tonaparser tonatona
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonatona-project/tonatona#readme";
           description = "tonatona plugin for accessing Sqlite database";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tonatona-servant" = callPackage
        ({ mkDerivation, base, data-default, exceptions, http-types
         , monad-logger, rio, servant, servant-server, stdenv, tonaparser
         , tonatona, tonatona-logger, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "tonatona-servant";
           version = "0.1.0.3";
           sha256 = "3963c887e4952ec46076c61866459ca541aa41e606deb64de5db7ee1ae2281ec";
           libraryHaskellDepends = [
             base data-default exceptions http-types monad-logger rio servant
             servant-server tonaparser tonatona tonatona-logger wai wai-extra
             warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonatona-project/tonatona#readme";
           description = "tonatona plugin for servant";
           license = stdenv.lib.licenses.mit;
         }) {};
      "torsor" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "torsor";
           version = "0.1";
           sha256 = "75a3f53a08b9333613a16c5e98f12a069a1c1a360dc3c2abf7b47522acb06d9c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/torsor#readme";
           description = "Torsor Typeclass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tostring" = callPackage
        ({ mkDerivation, base, case-insensitive, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "tostring";
           version = "0.2.1.1";
           sha256 = "efa700d44aec57c82be60c0eabd610f62f2df0d9b06cf41b5fc35a2b77502531";
           libraryHaskellDepends = [ base case-insensitive text utf8-string ];
           doHaddock = false;
           doCheck = false;
           description = "The ToString class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tracing" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , case-insensitive, containers, http-client, ip, mtl, network
         , random, stdenv, stm, text, time, transformers, unliftio
         }:
         mkDerivation {
           pname = "tracing";
           version = "0.0.4.0";
           sha256 = "4be2c266499f6dc494e548ebe75c84aa19d43f14202513a0f652fb5573821ad0";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring case-insensitive containers
             http-client ip mtl network random stm text time transformers
             unliftio
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtth/tracing";
           description = "Distributed tracing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transaction" = callPackage
        ({ mkDerivation, base, mono-traversable, stdenv }:
         mkDerivation {
           pname = "transaction";
           version = "0.1.1.3";
           sha256 = "d264b1324726e70aceafdc2fa7eef1c863c527c69486a967116dee29aa23c0c5";
           libraryHaskellDepends = [ base mono-traversable ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arowM/haskell-transaction#readme";
           description = "Monadic representation of transactions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "transformers-base" = callPackage
        ({ mkDerivation, base, base-orphans, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "transformers-base";
           version = "0.4.5.2";
           sha256 = "d0c80c63fdce6a077dd8eda4f1ff289b85578703a3f1272e141d400fe23245e8";
           libraryHaskellDepends = [
             base base-orphans stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/transformers-base";
           description = "Lift computations from the bottom of a transformer stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-bifunctors" = callPackage
        ({ mkDerivation, base, mmorph, stdenv, transformers }:
         mkDerivation {
           pname = "transformers-bifunctors";
           version = "0.1";
           sha256 = "3c25d3d76361f62b4c7c37d4bc4b7497af691d000fcd8e5fe9cbb3544d284807";
           revision = "1";
           editedCabalFile = "1vjyk2ldwfi2pkvk79p37ii5xgg1399kxqhkq3l4wvag4j5p4afs";
           libraryHaskellDepends = [ base mmorph transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jacobstanley/transformers-bifunctors";
           description = "Bifunctors over monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-compat" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, transformers }:
         mkDerivation {
           pname = "transformers-compat";
           version = "0.6.5";
           sha256 = "da67cf11515da751b32a8ce6e96549f7268f7c435769ad19dc9766b69774620b";
           configureFlags = [ "-ffive-three" ];
           libraryHaskellDepends = [ base ghc-prim transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/transformers-compat/";
           description = "A small compatibility shim for the transformers library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-fix" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "transformers-fix";
           version = "1.0";
           sha256 = "65d1fff36b844d8ac22d47eb47e2c7e9d7ece54fafeeca4d4e38a08910be4a09";
           revision = "1";
           editedCabalFile = "126gyjr8jp42md6nblx7c0kan97jgsakvsf2vzv2pj828ax1icrs";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thumphries/transformers-fix";
           description = "Monad transformer for evaluating to a fixpoint";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "traverse-with-class" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, transformers }:
         mkDerivation {
           pname = "traverse-with-class";
           version = "1.0.1.0";
           sha256 = "d69b371265f20ecd6c72e3643036f835dc8b654516d2a5e496fabaae4f0ad1fa";
           libraryHaskellDepends = [ base template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Generic applicative traversals";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tree-diff" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, ansi-wl-pprint, base
         , base-compat, bytestring, bytestring-builder, containers, hashable
         , parsec, parsers, pretty, QuickCheck, scientific, stdenv, tagged
         , text, time, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "tree-diff";
           version = "0.1";
           sha256 = "e3d901ad6f3e2732f07e0dafcafb27bef2f2cadec46bf9c9a5c95e60f1b2a684";
           revision = "2";
           editedCabalFile = "081fcdkps3sc1pcfbcxs5f1ifnpx8hsk9ms2gafd793lia6whfsk";
           libraryHaskellDepends = [
             aeson ansi-terminal ansi-wl-pprint base base-compat bytestring
             bytestring-builder containers hashable parsec parsers pretty
             QuickCheck scientific tagged text time unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/tree-diff";
           description = "Diffing of (expression) trees";
           license = stdenv.lib.licenses.gpl2Plus;
         }) {};
      "tree-fun" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "tree-fun";
           version = "0.8.1.0";
           sha256 = "2ae925f198e9700dedbf809c2b77086fef32f58b4a4adb6c398dca49f4d56f1f";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Library for functions pertaining to tree exploration and manipulation";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "trifecta" = callPackage
        ({ mkDerivation, ansi-terminal, ansi-wl-pprint, array, base
         , blaze-builder, blaze-html, blaze-markup, bytestring, Cabal
         , cabal-doctest, charset, comonad, containers, deepseq, fingertree
         , ghc-prim, hashable, lens, mtl, parsers, profunctors, reducers
         , semigroups, stdenv, transformers, unordered-containers
         , utf8-string
         }:
         mkDerivation {
           pname = "trifecta";
           version = "2";
           sha256 = "53972fe9d206eab6ae1a654fe8c57274f01b373b0c8b3882ef01e962226af643";
           revision = "4";
           editedCabalFile = "0xbwyvwl6f2zylk60f2akwgq03qv49113xil7b1z1s3vlwbn5aj1";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             ansi-terminal ansi-wl-pprint array base blaze-builder blaze-html
             blaze-markup bytestring charset comonad containers deepseq
             fingertree ghc-prim hashable lens mtl parsers profunctors reducers
             semigroups transformers unordered-containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/trifecta/";
           description = "A modern parser combinator library with convenient diagnostics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "triplesec" = callPackage
        ({ mkDerivation, base, cryptonite, memory, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "triplesec";
           version = "0.2.2.1";
           sha256 = "3ab7ff8bc630fbdd3d479e993d67853dacfc2967a2ca46b8bb7ee9387158d971";
           libraryHaskellDepends = [
             base cryptonite memory mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/SamProtas/hs-triplesec";
           description = "TripleSec is a simple, triple-paranoid, symmetric encryption library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "trivial-constraint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "trivial-constraint";
           version = "0.6.0.0";
           sha256 = "e527a3f98b2d32ea8453bc2b29510b7c48c1076b4061168ef8b8d07a28f51178";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/leftaroundabout/trivial-constraint";
           description = "Constraints that any type, resp. no type fulfills";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "true-name" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "true-name";
           version = "0.1.0.3";
           sha256 = "c630ef80687e12c092a797229be96e930819c1042c7cc9f755637ef74774e468";
           revision = "1";
           editedCabalFile = "0x56r3wyrrsckx6kdvr4v9janrby5qa21fjqwg9k211765c9ddj6";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liyang/true-name";
           description = "Template Haskell hack to violate module abstractions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tsv2csv" = callPackage
        ({ mkDerivation, base, HUnit, split, stdenv }:
         mkDerivation {
           pname = "tsv2csv";
           version = "0.1.0.2";
           sha256 = "2c082f8bac93a5d47e312148493d0b8f078e2e0d0e919caa0fa24cab63dd3397";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base HUnit split ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Convert tsv to csv";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ttl-hashtables" = callPackage
        ({ mkDerivation, base, clock, containers, data-default, failable
         , hashable, hashtables, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "ttl-hashtables";
           version = "1.3.1.1";
           sha256 = "9bbfe272a87c0ff99b93f75b79f5fbae34d5949cfe87bc6323acbaf9deab5591";
           revision = "1";
           editedCabalFile = "17pkzci2nqi0d4zcpyxcv5l1hn7m04h2kwqjgqm7kc2c3p620qv3";
           libraryHaskellDepends = [
             base clock containers data-default failable hashable hashtables mtl
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Extends hashtables so that entries added can be expired after a TTL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ttrie" = callPackage
        ({ mkDerivation, atomic-primops, base, hashable, primitive, stdenv
         , stm
         }:
         mkDerivation {
           pname = "ttrie";
           version = "0.1.2.1";
           sha256 = "50444fe989559a0b16120df72765321ffd9de2fd97c943104513d894f21f4a68";
           libraryHaskellDepends = [
             atomic-primops base hashable primitive stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mcschroeder/ttrie";
           description = "Contention-free STM hash map";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tuple" = callPackage
        ({ mkDerivation, base, OneTuple, stdenv }:
         mkDerivation {
           pname = "tuple";
           version = "0.3.0.2";
           sha256 = "2fcb068ffafbe64170e02094a363f83d1725f44f8af963d9dad943a592e89624";
           libraryHaskellDepends = [ base OneTuple ];
           doHaddock = false;
           doCheck = false;
           description = "Various functions on tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tuple-sop" = callPackage
        ({ mkDerivation, base, generics-sop, stdenv }:
         mkDerivation {
           pname = "tuple-sop";
           version = "0.3.1.0";
           sha256 = "f6e18d0f444993c959eaa7d1aca87993c779b929260b1c6dd823715d3e736043";
           libraryHaskellDepends = [ base generics-sop ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Ferdinand-vW/tuple-sop#readme";
           description = "functions on n-ary tuples using generics-sop";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "tuple-th" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell }:
         mkDerivation {
           pname = "tuple-th";
           version = "0.2.5";
           sha256 = "56ea37dcede07b5cf5385108540ae626db163f9df0387583d3c7afdaf72634d7";
           libraryHaskellDepends = [ base containers template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Generate (non-recursive) utility functions for tuples of statically known size";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tuples-homogenous-h98" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "tuples-homogenous-h98";
           version = "0.1.1.0";
           sha256 = "025afc8f0fe9c92fb43cebedfa6a764f744d3dc3a3d52935d0a01bc80d111f3a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ppetr/tuples-homogenous-h98";
           description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "turtle" = callPackage
        ({ mkDerivation, ansi-wl-pprint, async, base, bytestring, clock
         , containers, directory, exceptions, foldl, hostname, managed
         , optional-args, optparse-applicative, process, semigroups, stdenv
         , stm, streaming-commons, system-fileio, system-filepath, temporary
         , text, time, transformers, unix, unix-compat
         }:
         mkDerivation {
           pname = "turtle";
           version = "1.5.16";
           sha256 = "5616e6d6c184fbe77e695f99f6f22c52072b80dce4a6e68974f51aaa5fd18c98";
           libraryHaskellDepends = [
             ansi-wl-pprint async base bytestring clock containers directory
             exceptions foldl hostname managed optional-args
             optparse-applicative process semigroups stm streaming-commons
             system-fileio system-filepath temporary text time transformers unix
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Shell programming, Haskell-style";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-errors" = callPackage
        ({ mkDerivation, base, first-class-families, stdenv, syb
         , template-haskell, th-abstraction
         }:
         mkDerivation {
           pname = "type-errors";
           version = "0.2.0.0";
           sha256 = "174d509c30ec806117a244add923fee578ba5f3505b0156f4e03a32023892eb4";
           libraryHaskellDepends = [
             base first-class-families syb template-haskell th-abstraction
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isovector/type-errors#readme";
           description = "Tools for writing better type errors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-errors-pretty" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-errors-pretty";
           version = "0.0.1.0";
           sha256 = "b466d66ec26441a05052ed9f57ab1ac7b6818daff11e8e667aaf2a5cf516e7f6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chshersh/type-errors-pretty";
           description = "Combinators for writing pretty type errors easily";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "type-fun" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-fun";
           version = "0.1.1";
           sha256 = "df5ec7428a101235df46c0b819a9ab3562d1d27991cc3b04303643952c555da1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/s9gf4ult/type-fun";
           description = "Collection of widely reimplemented type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-hint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-hint";
           version = "0.1";
           sha256 = "1161cdbf4b4b43c2953ee60438e948737604193e1bfe2c880ff178538faa99b9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/type-hint";
           description = "Guide type inference with proxy values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-level-integers" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-level-integers";
           version = "0.0.1";
           sha256 = "118be3a4b3ab65bb1d31220738079013bd14fc77db674a9a1577f5582ffcc7ba";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/type-level-integers";
           description = "Provides integers lifted to the type level";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-level-kv-list" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-level-kv-list";
           version = "1.1.0";
           sha256 = "4ff032e59108edc7dd27309ac0ee8987cc41ffba695d9699700bd37c6e7f7d73";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arowM/type-level-kv-list#readme";
           description = "A module for hash map like object with type level keys";
           license = stdenv.lib.licenses.mit;
         }) {};
      "type-level-numbers" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "type-level-numbers";
           version = "0.1.1.1";
           sha256 = "5b56ef5f6e0b6476b9aba46055c3919e67823cbc1b87ed8e6ed70113b1f2318a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Type level numbers implemented using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-map" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv, vector }:
         mkDerivation {
           pname = "type-map";
           version = "0.1.6.0";
           sha256 = "25d7ff6ceda7eb4f9aa95a1a4d8463fc71f88d019ca0d1410ecff2df56a1537d";
           libraryHaskellDepends = [ base containers ghc-prim vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/type-map";
           description = "Type-indexed maps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "type-of-html" = callPackage
        ({ mkDerivation, base, bytestring, containers, double-conversion
         , ghc-prim, stdenv, text
         }:
         mkDerivation {
           pname = "type-of-html";
           version = "1.5.1.0";
           sha256 = "4cc45bb6258ffe5c932d9ed7f25883adc6f6fdde345de774ccd665e3e4037f91";
           libraryHaskellDepends = [
             base bytestring containers double-conversion ghc-prim text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/knupfer/type-of-html";
           description = "High performance type driven html generation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-of-html-static" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, type-of-html }:
         mkDerivation {
           pname = "type-of-html-static";
           version = "0.1.0.2";
           sha256 = "29b3d951eed5498e8011db25996660a5aa0895e1e25fc12da7522fdae74f6200";
           libraryHaskellDepends = [ base template-haskell type-of-html ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/knupfer/type-of-html-static";
           description = "Optimize static parts of type-of-html";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-operators" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "type-operators";
           version = "0.2.0.0";
           sha256 = "9250be034d38b1412f530b92814b5de9ad189e97b5f0120b42955f9995dba3b2";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Shou/type-operators#readme";
           description = "Various type-level operators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-spec" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "type-spec";
           version = "0.4.0.0";
           sha256 = "b8eb5e12f4979dd3e2ea7c0edca60e31a7f4fbaab35d7dd44e9b5d5bf783247d";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/type-spec#readme";
           description = "Type Level Specification by Example";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "typed-process" = callPackage
        ({ mkDerivation, async, base, bytestring, process, stdenv, stm
         , transformers, unliftio-core
         }:
         mkDerivation {
           pname = "typed-process";
           version = "0.2.6.0";
           sha256 = "31a2a81f33463fedc33cc519ad5b9679787e648fe2ec7efcdebd7d54bdbbc2b1";
           libraryHaskellDepends = [
             async base bytestring process stm transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://haskell-lang.org/library/typed-process";
           description = "Run external processes, with strong typing of streams";
           license = stdenv.lib.licenses.mit;
         }) {};
      "typelits-witnesses" = callPackage
        ({ mkDerivation, base, dependent-sum, stdenv }:
         mkDerivation {
           pname = "typelits-witnesses";
           version = "0.4.0.0";
           sha256 = "e0505cdb323111d1a0dfb121b7e0dc7fd4b43cd931b7f3368187eaca942d1ece";
           libraryHaskellDepends = [ base dependent-sum ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/typelits-witnesses";
           description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "typenums" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "typenums";
           version = "0.1.2.1";
           sha256 = "c6b4e083e664ecea40be2555f24c2e8b322b4f32a4a434e6514fecd6d6d6991b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adituv/typenums#readme";
           description = "Type level numbers using existing Nat functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "typerep-map" = callPackage
        ({ mkDerivation, base, containers, deepseq, ghc-prim, primitive
         , stdenv, vector
         }:
         mkDerivation {
           pname = "typerep-map";
           version = "0.3.2";
           sha256 = "60bdbc337e34b446a7c126bc99dfe9ae0089500fd435c6967f38ca548184e768";
           revision = "3";
           editedCabalFile = "032y3parcz7ffmsqichmshczk7zxkg66dciwvr5d7fznqvy3sg1s";
           libraryHaskellDepends = [
             base containers deepseq ghc-prim primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kowainik/typerep-map";
           description = "Efficient implementation of a dependent map with types as keys";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tz" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, data-default
         , deepseq, stdenv, template-haskell, time, tzdata, vector
         }:
         mkDerivation {
           pname = "tz";
           version = "0.1.3.3";
           sha256 = "d18e3bf47a5008d90483956f7810ce6137d910925287cfcadcb59b49dbb0d1b2";
           libraryHaskellDepends = [
             base binary bytestring containers data-default deepseq
             template-haskell time tzdata vector
           ];
           doHaddock = false;
           doCheck = false;
           preConfigure = "export TZDIR=${pkgs.tzdata}/share/zoneinfo";
           homepage = "https://github.com/nilcons/haskell-tz";
           description = "Efficient time zone handling";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "tzdata" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, stdenv
         , vector
         }:
         mkDerivation {
           pname = "tzdata";
           version = "0.1.20190911.0";
           sha256 = "699108b493b13f50b7e299da00e2f2251f6885da851cb68a183daf1e00c1d594";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers deepseq vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nilcons/haskell-tzdata";
           description = "Time zone database (as files and as a module)";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "ua-parser" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, file-embed
         , pcre-light, stdenv, text, yaml
         }:
         mkDerivation {
           pname = "ua-parser";
           version = "0.7.5.1";
           sha256 = "1fcc39a99b9ad7eb2ddb2194ea84def35860078c0344531e2715dc2b819e3424";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring data-default file-embed pcre-light text yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "A library for parsing User-Agent strings, official Haskell port of ua-parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ucam-webauth" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, containers
         , cryptonite, errors, http-api-data, http-types, microlens
         , microlens-mtl, mtl, parser-combinators, pem, stdenv, text, time
         , ucam-webauth-types, x509
         }:
         mkDerivation {
           pname = "ucam-webauth";
           version = "0.1.0.0";
           sha256 = "335920d87a8d8fa24bcba34c4cba0a7adc84199c3161757ae00d7bad54428992";
           revision = "6";
           editedCabalFile = "1dammzdhin226byx8p287kdnn9pc7s49hfxcdmflly6hsy1psnvy";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring containers cryptonite errors
             http-api-data http-types microlens microlens-mtl mtl
             parser-combinators pem text time ucam-webauth-types x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dbaynard/UcamWebauth#readme";
           description = "The Ucam-Webauth protocol, used by Raven";
           license = "(BSD-3-Clause OR Apache-2.0)";
         }) {};
      "ucam-webauth-types" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , case-insensitive, containers, deepseq, http-types, microlens
         , microlens-mtl, mtl, stdenv, text, time, timerep
         }:
         mkDerivation {
           pname = "ucam-webauth-types";
           version = "0.1.0.0";
           sha256 = "d1ca7f834078ca63d398c1c2498e8f89e9edfae16b3150937973e5daaa32064b";
           revision = "4";
           editedCabalFile = "1lb0yq1051fi71qrbnkyg39c7rn5x62w2qkqvp88ih4wzdib8fzv";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring case-insensitive containers
             deepseq http-types microlens microlens-mtl mtl text time timerep
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dbaynard/UcamWebauth#readme";
           description = "Types for the Ucam-Webauth protocol, as used by Raven";
           license = "(BSD-3-Clause OR Apache-2.0)";
         }) {};
      "uglymemo" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "uglymemo";
           version = "0.1.0.1";
           sha256 = "fe89ef49c0cb15867c58815b050b33f17d394d4c48a9b7240a39780a5a79b847";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "A simple (but internally ugly) memoization function";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "unagi-chan" = callPackage
        ({ mkDerivation, atomic-primops, base, ghc-prim, primitive, stdenv
         }:
         mkDerivation {
           pname = "unagi-chan";
           version = "0.4.1.3";
           sha256 = "e232e525881eb05f0c20b5a4e53150a3063351e5d94917c6f55934477a9ad695";
           libraryHaskellDepends = [ atomic-primops base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           description = "Fast concurrent queues with a Chan-like API, and more";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unbound-generics" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, containers, contravariant
         , deepseq, exceptions, mtl, profunctors, stdenv, template-haskell
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "unbound-generics";
           version = "0.4.0";
           sha256 = "bd6aeda0921d540b3c4181805299ab34e0194389bd8617696d7fa9cc49d95511";
           libraryHaskellDepends = [
             ansi-wl-pprint base containers contravariant deepseq exceptions mtl
             profunctors template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lambdageek/unbound-generics";
           description = "Support for programming with names and binders using GHC Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unbounded-delays" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unbounded-delays";
           version = "0.1.1.0";
           sha256 = "8aa7f7d10a8d0073518804db76c3ef4c313359994ef175122341b0bce07329c7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/unbounded-delays";
           description = "Unbounded thread delays and timeouts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unboxed-ref" = callPackage
        ({ mkDerivation, base, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "unboxed-ref";
           version = "0.4.0.0";
           sha256 = "64eba8d550035a3a90cf9179e52f79877b426f0a6337cc216fdef45fcbb8773f";
           libraryHaskellDepends = [ base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/unboxed-ref";
           description = "Fast unboxed references for ST and IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unboxing-vector" = callPackage
        ({ mkDerivation, base, deepseq, mono-traversable, primitive, stdenv
         , vector
         }:
         mkDerivation {
           pname = "unboxing-vector";
           version = "0.1.1.0";
           sha256 = "48425b2780d84b0489a8bc95778768730248bf04dc4624155525b6bcff2b4d44";
           libraryHaskellDepends = [
             base deepseq mono-traversable primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minoki/unboxing-vector#readme";
           description = "A newtype-friendly variant of unboxed vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uncertain" = callPackage
        ({ mkDerivation, ad, base, base-compat, containers, free
         , mwc-random, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "uncertain";
           version = "0.3.1.0";
           sha256 = "6f67855ed4799e0c3465dfaef062b637efc61fbea40ebc44ced163028a996ff2";
           libraryHaskellDepends = [
             ad base base-compat containers free mwc-random primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/uncertain";
           description = "Manipulating numbers with inherent experimental/measurement uncertainty";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unconstrained" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "unconstrained";
           version = "0.1.0.2";
           sha256 = "d2717a66a0232ce454740f45c74645af5ef052e23ba81195ce6c3a06a10e010d";
           revision = "1";
           editedCabalFile = "13fj2jlh44774www49fwp7h7z6gr23scfbvg745rpywys49c0559";
           doHaddock = false;
           doCheck = false;
           description = "Null constraint";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unicode" = callPackage
        ({ mkDerivation, base, containers, semigroups, stdenv }:
         mkDerivation {
           pname = "unicode";
           version = "0.0.1.1";
           sha256 = "6fdbaa2f45e191c4226b305b4f56a1c43149eb4e253b0a3ebf80ab77e9b5f8c1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/unicode/";
           description = "Construct and transform unicode characters";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unicode-show" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unicode-show";
           version = "0.1.0.4";
           sha256 = "31d138f4c5634ce7357d3aa7e02ed28dad828ab64897ec46852ae8d3ccb61b95";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-jp/unicode-show#readme";
           description = "print and show in unicode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unicode-transforms" = callPackage
        ({ mkDerivation, base, bitarray, bytestring, stdenv, text }:
         mkDerivation {
           pname = "unicode-transforms";
           version = "0.3.6";
           sha256 = "8326d001c463893a81fcfb431e3cc50c652fab041e9a37e284c445adfd667aaa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bitarray bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/harendra-kumar/unicode-transforms";
           description = "Unicode normalization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unification-fd" = callPackage
        ({ mkDerivation, base, containers, logict, mtl, stdenv }:
         mkDerivation {
           pname = "unification-fd";
           version = "0.10.0.1";
           sha256 = "5bf46760e6db104c57f915322b32744f7604323281f5c7dd20185f905fb51996";
           libraryHaskellDepends = [ base containers logict mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Simple generic unification algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "union" = callPackage
        ({ mkDerivation, base, deepseq, hashable, profunctors, stdenv
         , tagged, vinyl
         }:
         mkDerivation {
           pname = "union";
           version = "0.1.2";
           sha256 = "63e9dc2901a7d857e278445ca2b03bb869ecb01264206a14319d073e39dd8ec4";
           revision = "4";
           editedCabalFile = "09b6wqnmv4g2pnjzl5k90yp78jcif8pk40c0spdrbr2vr5766clj";
           libraryHaskellDepends = [
             base deepseq hashable profunctors tagged vinyl
           ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible type-safe unions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "union-find" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "union-find";
           version = "0.2";
           sha256 = "e6c2682bb8c06e8c43e360f45658d0eea17209cce84953e2a7d2f0240591f0ec";
           revision = "1";
           editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/union-find";
           description = "Efficient union and equivalence testing of sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uniplate" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, syb
         , unordered-containers
         }:
         mkDerivation {
           pname = "uniplate";
           version = "1.6.12";
           sha256 = "fcc60bc6b3f6e925f611646db90e6db9f05286a9363405f844df1dc15572a8b7";
           revision = "1";
           editedCabalFile = "0gsrs2mk58jg3x36dyzxi4y46isd5p6q0rd6m9l834h5r7ds6a54";
           libraryHaskellDepends = [
             base containers hashable syb unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://community.haskell.org/~ndm/uniplate/";
           description = "Help writing simple, concise and fast generic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uniprot-kb" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "uniprot-kb";
           version = "0.1.2.0";
           sha256 = "d40c80522f9e70e6fe97234f362e503736ae9f520f1e10e9ab249a5cad750642";
           revision = "4";
           editedCabalFile = "1g4qds20lwsbn5hqrgbhb4yd5w5vx2gkw47mjvxr8z8nj20g2pii";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/biocad/uniprot-kb#readme";
           description = "UniProt-KB format parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uniq-deep" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "uniq-deep";
           version = "1.1.1";
           sha256 = "c642d17af439700fc359ac3a3c35cc7ce79ab77e0f34fdc9a0a26aacb7df33cf";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/uniq-deep#readme";
           description = "uniq-deep";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "unique" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "unique";
           version = "0";
           sha256 = "e3fb171b7b1787683863934df0fc082fb47c0da6972bb1839c2ee8ceb64a0a90";
           revision = "2";
           editedCabalFile = "0ydjjd6j7gr4mibky6j5rqwhy9frvfii0sr4g8shaxnph3y0kb6b";
           libraryHaskellDepends = [ base ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/unique/";
           description = "Fully concurrent unique identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unique-logic" = callPackage
        ({ mkDerivation, base, explicit-exception, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "unique-logic";
           version = "0.4";
           sha256 = "1209ab415264c97030f5ddae5f6bc5171abf0f7dd93b7b807446c65dcf03ea53";
           libraryHaskellDepends = [
             base explicit-exception transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/unique-logic/";
           description = "Solve simple simultaneous equations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unique-logic-tf" = callPackage
        ({ mkDerivation, base, containers, data-ref, semigroups, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "unique-logic-tf";
           version = "0.5.1";
           sha256 = "8b818cb19dea8ed6fbdd21795b76f3fa0dcc4416bcf5ceb4c7d6f179ea945028";
           libraryHaskellDepends = [
             base containers data-ref semigroups transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/unique-logic-tf/";
           description = "Solve simple simultaneous equations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unit-constraint" = callPackage
        ({ mkDerivation, base, constraints, stdenv }:
         mkDerivation {
           pname = "unit-constraint";
           version = "0.0.0";
           sha256 = "446de8480016c9db75676445477b5ce1ff5c6d486d6708c55b06de7cbd845e59";
           libraryHaskellDepends = [ base constraints ];
           doHaddock = false;
           doCheck = false;
           description = "Extremely simple typeclass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe" = callPackage
        ({ mkDerivation, stdenv, universe-base, universe-dependent-sum
         , universe-instances-extended, universe-reverse-instances
         }:
         mkDerivation {
           pname = "universe";
           version = "1.1.1";
           sha256 = "eff7cde7412d221cd9e93ad0dd1060cd00a0f208bd3e078b954130ba4ae4a54a";
           libraryHaskellDepends = [
             universe-base universe-dependent-sum universe-instances-extended
             universe-reverse-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "A class for finite and recursively enumerable types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-base" = callPackage
        ({ mkDerivation, base, containers, stdenv, tagged, transformers }:
         mkDerivation {
           pname = "universe-base";
           version = "1.1.1";
           sha256 = "1ded30b31b1abbc7621bdb0086ba0d91c1920157e87a4abeb4f2fcf9f3f6dea8";
           revision = "2";
           editedCabalFile = "0601hqv5h2274i11j1ai2yqb7zk2fkqkiqlpwnq5awbgdkwb10i8";
           libraryHaskellDepends = [ base containers tagged transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "A class for finite and recursively enumerable types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-dependent-sum" = callPackage
        ({ mkDerivation, base, dependent-sum, stdenv, template-haskell
         , th-abstraction, transformers, universe-base
         }:
         mkDerivation {
           pname = "universe-dependent-sum";
           version = "1.1.0.1";
           sha256 = "f1e2f0eacf57bf29ded105beda42c84a87e1018970f5474bb3144d9b0f74dbd5";
           revision = "2";
           editedCabalFile = "1vh93f1nq72fwnrhl9r8qwwiwr26l9pgcmdic56j2b2iz3imnfhc";
           libraryHaskellDepends = [
             base dependent-sum template-haskell th-abstraction transformers
             universe-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from dependent-sum";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-base" = callPackage
        ({ mkDerivation, base, stdenv, universe-base }:
         mkDerivation {
           pname = "universe-instances-base";
           version = "1.1";
           sha256 = "8bb1190ef89af0ba09c354b0512fefd61f44c10a805c509550a975f68febe49d";
           revision = "1";
           editedCabalFile = "0hjrjjl6v5q9f7cmxhrdxfdk1l86im0b8anxkpgrry7s8q998979";
           libraryHaskellDepends = [ base universe-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from the base package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-extended" = callPackage
        ({ mkDerivation, adjunctions, base, comonad, containers
         , contravariant, stdenv, universe-base
         }:
         mkDerivation {
           pname = "universe-instances-extended";
           version = "1.1.1";
           sha256 = "102a1f8af4706719da85736ffd7abf8e52b74bf9bfcdd452a33e339905a6f3de";
           revision = "1";
           editedCabalFile = "0g3qpvgw304yml1n9ly78qrsrrw53f6zpkciyk1xc0nmlm0dkwih";
           libraryHaskellDepends = [
             adjunctions base comonad containers contravariant universe-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from selected extra packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-trans" = callPackage
        ({ mkDerivation, base, stdenv, universe-base }:
         mkDerivation {
           pname = "universe-instances-trans";
           version = "1.1";
           sha256 = "c6aef59a7c5387c7b19efaa4f0af4d3543c9fa37f14d3789c4b5bc60563ee336";
           revision = "1";
           editedCabalFile = "0pyqcg8mfw6gg7gxxd46xq3hnhcpd39g7jb9q1awcdipzq7xjrh2";
           libraryHaskellDepends = [ base universe-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from the transformers and mtl packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-reverse-instances" = callPackage
        ({ mkDerivation, base, containers, stdenv, universe-base }:
         mkDerivation {
           pname = "universe-reverse-instances";
           version = "1.1";
           sha256 = "0dbb197676975bbdc6ea1fb07a6a4c79b9d165084ec25ed1800d5c6548d8b55d";
           revision = "3";
           editedCabalFile = "1zkpcipbzhxricr94pkhn4cqmjcnsxx301kxarx798qr9il37qzw";
           libraryHaskellDepends = [ base containers universe-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Instances of standard classes that are made possible by enumerations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universum" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, ghc-prim
         , hashable, microlens, microlens-mtl, mtl, safe-exceptions, stdenv
         , stm, text, transformers, unordered-containers, utf8-string
         , vector
         }:
         mkDerivation {
           pname = "universum";
           version = "1.5.0";
           sha256 = "53d29c4de630320c4364d37ea26a150c40e8df7faf81f69bb94372314f883f9f";
           libraryHaskellDepends = [
             base bytestring containers deepseq ghc-prim hashable microlens
             microlens-mtl mtl safe-exceptions stm text transformers
             unordered-containers utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/serokell/universum";
           description = "Custom prelude used in Serokell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "unix-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "unix-bytestring";
           version = "0.3.7.3";
           sha256 = "a3ec273da411988b7d9eb7317f6d84ce47f4b7fd39bdc721acd5229e7cff808c";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Unix/Posix-specific functions for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unix-compat" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "unix-compat";
           version = "0.5.2";
           sha256 = "659a4e442f71505d45b0d0fb28a347aa1ac5e1f39feaea5d58e674e5d2ce0ba9";
           revision = "1";
           editedCabalFile = "1yx38asvjaxxlfs8lpbq0dwd84ynhgi7hw91rn32i1hsmz7yn22m";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jacobstanley/unix-compat";
           description = "Portable POSIX-compatibility layer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unix-time" = callPackage
        ({ mkDerivation, base, binary, bytestring, old-time, stdenv }:
         mkDerivation {
           pname = "unix-time";
           version = "0.4.7";
           sha256 = "19233f8badf921d444c6165689253d877cfed58ce08f28cad312558a9280de09";
           libraryHaskellDepends = [ base binary bytestring old-time ];
           doHaddock = false;
           doCheck = false;
           description = "Unix time parser/formatter and utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unliftio" = callPackage
        ({ mkDerivation, async, base, bytestring, deepseq, directory
         , filepath, process, stdenv, stm, time, transformers, unix
         , unliftio-core
         }:
         mkDerivation {
           pname = "unliftio";
           version = "0.2.12";
           sha256 = "8fa9f4d4cc078fd7c76914652070d06a646f83d34e51547fede4fdd7f30ffe09";
           libraryHaskellDepends = [
             async base bytestring deepseq directory filepath process stm time
             transformers unix unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/unliftio/tree/master/unliftio#readme";
           description = "The MonadUnliftIO typeclass for unlifting monads to IO (batteries included)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "unliftio-core" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "unliftio-core";
           version = "0.1.2.0";
           sha256 = "24c38b3d610ca2642ed496d1de3d7b6b398ce0410aa0a15f3c7ce636ba8f7a78";
           revision = "2";
           editedCabalFile = "0jqrjjbgicx48wzcjxs1xmih48ay79rhmrz6081dldlfxynli6vz";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/unliftio/tree/master/unliftio-core#readme";
           description = "The MonadUnliftIO typeclass for unlifting monads to IO";
           license = stdenv.lib.licenses.mit;
         }) {};
      "unliftio-pool" = callPackage
        ({ mkDerivation, base, resource-pool, stdenv, time, transformers
         , unliftio-core
         }:
         mkDerivation {
           pname = "unliftio-pool";
           version = "0.2.1.0";
           sha256 = "bb54478ddf736783309296ffeeed694543c745d13f127f91b1e3537daa8f0f62";
           libraryHaskellDepends = [
             base resource-pool time transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "Data.Pool generalized to MonadUnliftIO.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unliftio-streams" = callPackage
        ({ mkDerivation, base, bytestring, io-streams, stdenv, text
         , unliftio-core
         }:
         mkDerivation {
           pname = "unliftio-streams";
           version = "0.1.1.0";
           sha256 = "7c8973b7c4bb473c94f95972f19361974d643a11ff8ed0eebbd82a100c43e762";
           libraryHaskellDepends = [
             base bytestring io-streams text unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generalization of io-streams to MonadUnliftIO";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "unlit" = callPackage
        ({ mkDerivation, base, directory, stdenv, text }:
         mkDerivation {
           pname = "unlit";
           version = "0.4.0.0";
           sha256 = "489ecde4843f1911ebdaac3099241d703bb1161f3d386e2b5143f2fd6c355515";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory text ];
           executableHaskellDepends = [ base directory text ];
           doHaddock = false;
           doCheck = false;
           description = "Tool to convert literate code between styles or to code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unordered-containers" = callPackage
        ({ mkDerivation, base, deepseq, hashable, stdenv }:
         mkDerivation {
           pname = "unordered-containers";
           version = "0.2.10.0";
           sha256 = "65f117bdbdea9efc75fb9fd539873de7687e005d8898bb21821020a4b383c573";
           revision = "1";
           editedCabalFile = "01727lm2spbqfn0rl89zv9zhpsmnls0kmizyckqf5nc3j9d0k6sy";
           libraryHaskellDepends = [ base deepseq hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/unordered-containers";
           description = "Efficient hashing-based container types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unordered-intmap" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv }:
         mkDerivation {
           pname = "unordered-intmap";
           version = "0.1.1";
           sha256 = "d8faaf0c23ed143942ba7948616c73134c78e02aa4cf252605c73fb2412876ef";
           libraryHaskellDepends = [ base deepseq primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ethercrow/unordered-intmap";
           description = "A specialization of `HashMap Int v`";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unsafe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unsafe";
           version = "0.0";
           sha256 = "df0a74ccf7b43956c1b5decd5580e235317d1f96a1bbd75e117fc21143ee8641";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/unsafe/";
           description = "Unified interface to unsafe functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-bytestring" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , containers, stdenv, template-haskell, th-lift-instances
         }:
         mkDerivation {
           pname = "uri-bytestring";
           version = "0.3.2.2";
           sha256 = "c7d47c25c1dbeae8c80ef7f83095093177e119effa90715a55b15fcaebd8ff6a";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring containers
             template-haskell th-lift-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/uri-bytestring";
           description = "Haskell URI parsing as ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-bytestring-aeson" = callPackage
        ({ mkDerivation, aeson, base, bytestring, stdenv, text
         , uri-bytestring
         }:
         mkDerivation {
           pname = "uri-bytestring-aeson";
           version = "0.1.0.7";
           sha256 = "7e90b5eb1c65a83461e127a27ce635f2f8279eb0d0cb14823831b6dfb503ef9b";
           libraryHaskellDepends = [
             aeson base bytestring text uri-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/reactormonk/uri-bytestring-aeson";
           description = "Aeson instances for URI Bytestring";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-encode" = callPackage
        ({ mkDerivation, base, bytestring, network-uri, stdenv, text
         , utf8-string
         }:
         mkDerivation {
           pname = "uri-encode";
           version = "1.5.0.5";
           sha256 = "e82b588aad63112d34f6bad6f1ef72489b9edebfe14f2f523dc1dabdcbe2b186";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring network-uri text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Unicode aware uri-encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-templater" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, bytestring, charset
         , containers, dlist, HTTP, mtl, parsers, stdenv, template-haskell
         , text, time, trifecta, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "uri-templater";
           version = "0.3.1.0";
           sha256 = "21e665ff2600b3de42b6ad01ef342b6165859dc6e66897f84a9075649f1c49c2";
           revision = "2";
           editedCabalFile = "1fc0agzm3qasslhns64qbyhml31s1akib0mfaj2298iqm8075jyg";
           libraryHaskellDepends = [
             ansi-wl-pprint base bytestring charset containers dlist HTTP mtl
             parsers template-haskell text time trifecta unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iand675/uri-templater";
           description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
           license = stdenv.lib.licenses.mit;
         }) {};
      "url" = callPackage
        ({ mkDerivation, base, stdenv, utf8-string }:
         mkDerivation {
           pname = "url";
           version = "2.1.3";
           sha256 = "5af27e3f8c0a27e52d0dcb98ef06a0fdd01efe8bb21242c29432e1bc380a4f61";
           libraryHaskellDepends = [ base utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Url";
           description = "A library for working with URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "urlpath" = callPackage
        ({ mkDerivation, attoparsec-uri, base, exceptions, mmorph
         , monad-control, monad-control-aligned, monad-logger, mtl, path
         , path-extra, resourcet, split, stdenv, strict, text, transformers
         , transformers-base, vector
         }:
         mkDerivation {
           pname = "urlpath";
           version = "9.0.1";
           sha256 = "2fe703a9c65fcfb12ba86bcffed22dca4c4a76fc78e1271816ae46b0f6a58e29";
           libraryHaskellDepends = [
             attoparsec-uri base exceptions mmorph monad-control
             monad-control-aligned monad-logger mtl path path-extra resourcet
             split strict text transformers transformers-base vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/urlpath#readme";
           description = "Painfully simple URL deployment";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "users" = callPackage
        ({ mkDerivation, aeson, base, bcrypt, path-pieces, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "users";
           version = "0.5.0.0";
           sha256 = "6761ac937b0d4c13c5158239a0c51199c394facb72cc734ada90a391f01e53d4";
           revision = "1";
           editedCabalFile = "1x26g7k6kmq2vng9y5qkz82z06rs322s2y8bs9y6r4vayvg07q9v";
           libraryHaskellDepends = [
             aeson base bcrypt path-pieces text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A library simplifying user management for web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-postgresql-simple" = callPackage
        ({ mkDerivation, base, bytestring, mtl, postgresql-simple, stdenv
         , text, time, users, uuid
         }:
         mkDerivation {
           pname = "users-postgresql-simple";
           version = "0.5.0.2";
           sha256 = "051b5d2c9c6cdeaacb6271a50ee4084cc1473de8d873825dc6d98023e96ec100";
           libraryHaskellDepends = [
             base bytestring mtl postgresql-simple text time users uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A PostgreSQL backend for the users package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-test" = callPackage
        ({ mkDerivation, base, hspec, stdenv, text, users }:
         mkDerivation {
           pname = "users-test";
           version = "0.5.0.1";
           sha256 = "f68549fa0cc002b16dc55f23a73b1a423aa2e64ab584c4041252a3bb6a5cac3e";
           libraryHaskellDepends = [ base hspec text users ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "Library to test backends for the users library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "utf8-light" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "utf8-light";
           version = "0.4.2";
           sha256 = "184c428ce7896d702da46f6f107e6873ff100dbc1af40b49b5ce87317e619e67";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Unicode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "utf8-string" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "utf8-string";
           version = "1.0.1.1";
           sha256 = "fb0b9e3acbe0605bcd1c63e51f290a7bbbe6628dfa3294ff453e4235fbaef140";
           revision = "3";
           editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/glguy/utf8-string/";
           description = "Support for reading and writing UTF8 Strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "util" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "util";
           version = "0.1.17.1";
           sha256 = "471b83468c146037d82f17be3206c1ba92bc4aecc53135bd2ec25b7d44261de2";
           revision = "1";
           editedCabalFile = "16hbcmcq2674j37gl808n5i02kv0vn3nwq5l2a6v5lj0dn34nicb";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "utility-ht" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "utility-ht";
           version = "0.0.14";
           sha256 = "69c2eee1330839cdff40fad4f68f8c7ce41ae3b46a9e1d575f589fcdcf7ceba8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uuid" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptohash-md5
         , cryptohash-sha1, entropy, network-info, random, stdenv, text
         , time, uuid-types
         }:
         mkDerivation {
           pname = "uuid";
           version = "1.3.13";
           sha256 = "dfac808a7026217d018b408eab18facc6a85c6183be308d4ac7877e80599b027";
           revision = "3";
           editedCabalFile = "1p2srrapgx1f3zkdjjzm5g0dyfpg1h2g056la85xmpyjs77la2rq";
           libraryHaskellDepends = [
             base binary bytestring cryptohash-md5 cryptohash-sha1 entropy
             network-info random text time uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/uuid";
           description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uuid-types" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, hashable
         , random, stdenv, text
         }:
         mkDerivation {
           pname = "uuid-types";
           version = "1.0.3";
           sha256 = "9276517ab24a9b06f39d6e3c33c6c2b4ace1fc2126dbc1cd9806866a6551b3fd";
           revision = "2";
           editedCabalFile = "1lmlmng4lph57cljga3r9jy2axdls5mllsb2xzcwy2a34wgidarc";
           libraryHaskellDepends = [
             base binary bytestring deepseq hashable random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aslatter/uuid";
           description = "Type definitions for Universally Unique Identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "validation" = callPackage
        ({ mkDerivation, base, bifunctors, deepseq, lens, semigroupoids
         , semigroups, stdenv
         }:
         mkDerivation {
           pname = "validation";
           version = "1.1";
           sha256 = "85a628430a0c3273b7344f47aa810ffefc638ce19deb5e00d133a032603d92a9";
           revision = "1";
           editedCabalFile = "1rrjg9z399k6pb55nv85mlr5bkmdqbjwkvl1cy7ydccdx6ks4syp";
           libraryHaskellDepends = [
             base bifunctors deepseq lens semigroupoids semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/validation";
           description = "A data-type like Either but with an accumulating Applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "validity" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "validity";
           version = "0.9.0.2";
           sha256 = "5b449a8b1e31d2a281197fd1a5efb80b62f422fdcaa6d0e13e9be31b2e1d49a9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity typeclass";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-aeson" = callPackage
        ({ mkDerivation, aeson, base, stdenv, validity, validity-scientific
         , validity-text, validity-unordered-containers, validity-vector
         }:
         mkDerivation {
           pname = "validity-aeson";
           version = "0.2.0.2";
           sha256 = "fac03d29cf3d6f72c288111b68feb3c656574a1ac616b49f40426a9daf0e1d04";
           libraryHaskellDepends = [
             aeson base validity validity-scientific validity-text
             validity-unordered-containers validity-vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, validity }:
         mkDerivation {
           pname = "validity-bytestring";
           version = "0.4.1.0";
           sha256 = "6defe19346145230a0f41dd873767700ee10834c1ba1dfc4bfe31811e2d6d84b";
           libraryHaskellDepends = [ base bytestring validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for bytestring";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-containers" = callPackage
        ({ mkDerivation, base, containers, stdenv, validity }:
         mkDerivation {
           pname = "validity-containers";
           version = "0.3.1.0";
           sha256 = "39096c06200f3ce670c89d557def5dbdd0ba3f608bdc7587b057c2344b3f20b2";
           libraryHaskellDepends = [ base containers validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-path" = callPackage
        ({ mkDerivation, base, filepath, path, stdenv, validity }:
         mkDerivation {
           pname = "validity-path";
           version = "0.3.0.2";
           sha256 = "979cda9b9fce257e4793c53e869076cbb41b9516f6a7cef2ea3edca84dc5e146";
           libraryHaskellDepends = [ base filepath path validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for Path";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-scientific" = callPackage
        ({ mkDerivation, base, scientific, stdenv, validity }:
         mkDerivation {
           pname = "validity-scientific";
           version = "0.2.0.2";
           sha256 = "8132aa43307c7dcb29718b5c1ef7c2b8e0d1fb6f650c0b117b99397c34da8dc1";
           libraryHaskellDepends = [ base scientific validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for scientific";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-text" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, validity }:
         mkDerivation {
           pname = "validity-text";
           version = "0.3.1.0";
           sha256 = "edd3f26e97ea07593c3995002a7ef7670f0306bfc31213f6b49ffe1a6fbc4264";
           libraryHaskellDepends = [ base bytestring text validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-time" = callPackage
        ({ mkDerivation, base, stdenv, time, validity }:
         mkDerivation {
           pname = "validity-time";
           version = "0.2.0.2";
           sha256 = "51b24adef82f272a1060d5d0dffaa2eb1e54c0016c7dcd75631e5916df45e265";
           libraryHaskellDepends = [ base time validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-unordered-containers" = callPackage
        ({ mkDerivation, base, hashable, stdenv, unordered-containers
         , validity
         }:
         mkDerivation {
           pname = "validity-unordered-containers";
           version = "0.2.0.2";
           sha256 = "50547e85c80e42a90143b816b41389cca1e0fccacd8d620a09142cf65b36181b";
           libraryHaskellDepends = [
             base hashable unordered-containers validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for unordered-containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-uuid" = callPackage
        ({ mkDerivation, base, stdenv, uuid, validity }:
         mkDerivation {
           pname = "validity-uuid";
           version = "0.1.0.2";
           sha256 = "95dc31e68630951d6971ad5b425e88d492c7400ccd4937a42252d464d89c564c";
           libraryHaskellDepends = [ base uuid validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for uuid";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-vector" = callPackage
        ({ mkDerivation, base, hashable, stdenv, validity, vector }:
         mkDerivation {
           pname = "validity-vector";
           version = "0.2.0.2";
           sha256 = "a7cc60182c9c5c25fa64d1073c1da61e79686fea6d2b2a9cf55690e61b83ce78";
           libraryHaskellDepends = [ base hashable validity vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for vector";
           license = stdenv.lib.licenses.mit;
         }) {};
      "valor" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "valor";
           version = "0.1.0.0";
           sha256 = "04ce514f40ef954cdd4b45acb6b2bf6228a30e905fdce0b671df3bf789d6bae6";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/reygoch/valor#readme";
           description = "Simple general structured validation library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vault" = callPackage
        ({ mkDerivation, base, containers, hashable, semigroups, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "vault";
           version = "0.3.1.3";
           sha256 = "e70c8c1981fe49fc21a91b2aa570ecf50cca94aca24a7984ea641cbbc521b56d";
           libraryHaskellDepends = [
             base containers hashable semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HeinrichApfelmus/vault";
           description = "a persistent store for values of arbitrary types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vec" = callPackage
        ({ mkDerivation, adjunctions, base, base-compat, deepseq
         , distributive, fin, hashable, lens, semigroupoids, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "vec";
           version = "0.1.1.1";
           sha256 = "5a95c5cc88252d302e3434c95cab2d0962915165f1dabab497aaec4da2bffe3f";
           revision = "1";
           editedCabalFile = "137f3zjj0fwn3dmynvjg7k4v7k9h24a1gzqfma36hd2svksg8c3d";
           libraryHaskellDepends = [
             adjunctions base base-compat deepseq distributive fin hashable lens
             semigroupoids transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/vec";
           description = "Vec: length-indexed (sized) list";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "vector";
           version = "0.12.1.2";
           sha256 = "3b6e27683f6f20b37b8a35d0fab9e34b57dad72ac64cb16f428726780d4011bd";
           libraryHaskellDepends = [ base deepseq ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/vector";
           description = "Efficient Arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-algorithms" = callPackage
        ({ mkDerivation, base, bytestring, primitive, stdenv, vector }:
         mkDerivation {
           pname = "vector-algorithms";
           version = "0.8.0.3";
           sha256 = "1ac41f014663fd318b34a76b80e6d8f32f1629ef4996ae7304f31597a0d07387";
           libraryHaskellDepends = [ base bytestring primitive vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erikd/vector-algorithms/";
           description = "Efficient algorithms for vector arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-binary-instances" = callPackage
        ({ mkDerivation, base, binary, stdenv, vector }:
         mkDerivation {
           pname = "vector-binary-instances";
           version = "0.2.5.1";
           sha256 = "3945b99f8efd319c837700b7cef5163ee23e656e89227357e0b7a41d2a66c512";
           revision = "2";
           editedCabalFile = "0ia9i7q7jrk3ab3nq2368glr69vl6fwvh42zlwvdmxn4xd861qfx";
           libraryHaskellDepends = [ base binary vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/vector-binary-instances";
           description = "Instances of Data.Binary for vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-buffer" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, vector }:
         mkDerivation {
           pname = "vector-buffer";
           version = "0.4.1";
           sha256 = "9b5a9b57488267a765d9e7a8f2aa387ee0d3153989c169952da1e1229a60fd9b";
           libraryHaskellDepends = [ base deepseq vector ];
           doHaddock = false;
           doCheck = false;
           description = "A buffer compatible with Data.Vector.*";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-builder" = callPackage
        ({ mkDerivation, base, base-prelude, semigroups, stdenv, vector }:
         mkDerivation {
           pname = "vector-builder";
           version = "0.3.8";
           sha256 = "a39afd7ac50c42de77660d235017be38ef50f792b6a98212accf687445a18073";
           libraryHaskellDepends = [ base base-prelude semigroups vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/vector-builder";
           description = "Vector builder";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vector-bytes-instances" = callPackage
        ({ mkDerivation, base, bytes, stdenv, vector }:
         mkDerivation {
           pname = "vector-bytes-instances";
           version = "0.1.1";
           sha256 = "7666e6ff4553a97727625178a6902f8d23d8e94af5f4701b2d1a1394eaeb8c44";
           libraryHaskellDepends = [ base bytes vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/vector-bytes-instances";
           description = "Serial (from the bytes package) for Vector (from the vector package)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-instances" = callPackage
        ({ mkDerivation, base, comonad, hashable, keys, pointed
         , semigroupoids, semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "vector-instances";
           version = "3.4";
           sha256 = "1b0246ef0cf8372d61d5c7840d857f49299af2304b5107510377255ed4dd5381";
           libraryHaskellDepends = [
             base comonad hashable keys pointed semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/vector-instances";
           description = "Orphan Instances for 'Data.Vector'";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-mmap" = callPackage
        ({ mkDerivation, base, mmap, primitive, stdenv, vector }:
         mkDerivation {
           pname = "vector-mmap";
           version = "0.0.3";
           sha256 = "e539ddb02190ab5d04ba2605ac24317360919f99c332af470aafd0b78d9a868a";
           libraryHaskellDepends = [ base mmap primitive vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pumpkin/vector-mmap";
           description = "Memory map immutable and mutable vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-sized" = callPackage
        ({ mkDerivation, adjunctions, base, comonad, deepseq, distributive
         , finite-typelits, hashable, indexed-list-literals, primitive
         , stdenv, vector
         }:
         mkDerivation {
           pname = "vector-sized";
           version = "1.2.0.1";
           sha256 = "f28e3071b0808856ead9b130f4e47cd5c1b3625f9bbbc3ae3803f6afbe4dedd0";
           libraryHaskellDepends = [
             adjunctions base comonad deepseq distributive finite-typelits
             hashable indexed-list-literals primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/expipiplus1/vector-sized#readme";
           description = "Size tagged vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-space" = callPackage
        ({ mkDerivation, base, Boolean, MemoTrie, NumInstances, stdenv }:
         mkDerivation {
           pname = "vector-space";
           version = "0.16";
           sha256 = "0c0b2f1209f95045865b968c7aa0a25e155410b3e08cf98a6c8544e48436c79c";
           libraryHaskellDepends = [ base Boolean MemoTrie NumInstances ];
           doHaddock = false;
           doCheck = false;
           description = "Vector & affine spaces, linear maps, and derivatives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-split" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "vector-split";
           version = "1.0.0.2";
           sha256 = "b4aeeea50fec52e594b2d3c05aca3a112b2095d1e5238ced065cecf2d89bbd16";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fhaust/vector-split";
           description = "Combinator library for splitting vectors";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vector-th-unbox" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, vector }:
         mkDerivation {
           pname = "vector-th-unbox";
           version = "0.2.1.7";
           sha256 = "d125830ff3287c2d7e24989a3887987107b9140912c326e5894fb0b097c50d61";
           revision = "1";
           editedCabalFile = "11qhhir9cdy3x7pd0z0xk8vi4nzr9fn9q3ggwbhhc43jglngw1x7";
           libraryHaskellDepends = [ base template-haskell vector ];
           doHaddock = false;
           doCheck = false;
           description = "Deriver for Data.Vector.Unboxed using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "verbosity" = callPackage
        ({ mkDerivation, base, binary, data-default-class, deepseq, dhall
         , generic-lens, serialise, stdenv
         }:
         mkDerivation {
           pname = "verbosity";
           version = "0.3.0.0";
           sha256 = "4ae2606d1d50729468a27142a03b42b640ef32e41059d1ea6cbf7bd3de9ff073";
           revision = "1";
           editedCabalFile = "11nw7xwvfc4aqnl9wibgfx0adzpnfbz58cjhcanf04j8pjk609lf";
           libraryHaskellDepends = [
             base binary data-default-class deepseq dhall generic-lens serialise
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/trskop/verbosity";
           description = "Simple enum that encodes application verbosity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "versions" = callPackage
        ({ mkDerivation, base, deepseq, hashable, megaparsec, stdenv, text
         }:
         mkDerivation {
           pname = "versions";
           version = "3.5.3";
           sha256 = "c7820cd7f65b9cc8fec00a14f303c13745bec6f225f41dacd4438548c01e0845";
           libraryHaskellDepends = [ base deepseq hashable megaparsec text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/fosskers/versions";
           description = "Types and parsers for software version numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "viewprof" = callPackage
        ({ mkDerivation, base, brick, containers, directory, ghc-prof, lens
         , scientific, stdenv, text, vector, vector-algorithms, vty
         }:
         mkDerivation {
           pname = "viewprof";
           version = "0.0.0.32";
           sha256 = "4b3c7679c07d37dfc7e4c85ef1782b4258d1b2decad407e05ee649c7340b324e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base brick containers directory ghc-prof lens scientific text
             vector vector-algorithms vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/viewprof";
           description = "Text-based interactive GHC .prof viewer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vinyl" = callPackage
        ({ mkDerivation, array, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "vinyl";
           version = "0.11.0";
           sha256 = "08e46ff8240c189a1ff94a3c0bb3d9bb40fddeba09db4c476fd03cce50270a6b";
           revision = "1";
           editedCabalFile = "05i1sjkgn9vf488sa063fnp0p56ic39a5vyni9b2llm4vbpl4kwz";
           libraryHaskellDepends = [ array base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible Records";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vivid" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , filepath, hashable, MonadRandom, mtl, network, process, random
         , random-shuffle, split, stdenv, stm, time, transformers
         , utf8-string, vivid-osc, vivid-supercollider
         }:
         mkDerivation {
           pname = "vivid";
           version = "0.4.2.3";
           sha256 = "11c0ae576e0cd38894c5ad052c90b7bce33e81abdc6a691c0e1dbb272d4b952b";
           libraryHaskellDepends = [
             base binary bytestring containers directory filepath hashable
             MonadRandom mtl network process random random-shuffle split stm
             time transformers utf8-string vivid-osc vivid-supercollider
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sound synthesis with SuperCollider";
           license = "GPL";
         }) {};
      "vivid-osc" = callPackage
        ({ mkDerivation, base, bytestring, cereal, stdenv, time }:
         mkDerivation {
           pname = "vivid-osc";
           version = "0.5.0.0";
           sha256 = "46fb67915fdfa37db0ff620b1529caf77a19d41a71007aae2b834facc2243510";
           libraryHaskellDepends = [ base bytestring cereal time ];
           doHaddock = false;
           doCheck = false;
           description = "Open Sound Control encode/decode";
           license = "GPL";
         }) {};
      "vivid-supercollider" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, split, stdenv
         , utf8-string, vivid-osc
         }:
         mkDerivation {
           pname = "vivid-supercollider";
           version = "0.4.1.2";
           sha256 = "d2a40e8f4fff13200e6ead4d6397fe31095d990f75616bf7f89dbf3fa81821cb";
           libraryHaskellDepends = [
             base binary bytestring cereal split utf8-string vivid-osc
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of SuperCollider server specifications";
           license = "GPL";
         }) {};
      "void" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "void";
           version = "0.7.3";
           sha256 = "53af758ddc37dc63981671e503438d02c6f64a2d8744e9bec557a894431f7317";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/void";
           description = "A Haskell 98 logically uninhabited data type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vty" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , deepseq, directory, filepath, hashable, microlens, microlens-mtl
         , microlens-th, mtl, parallel, parsec, stdenv, stm, terminfo, text
         , transformers, unix, utf8-string, vector
         }:
         mkDerivation {
           pname = "vty";
           version = "5.25.1";
           sha256 = "3cab792e32c59647c2bdb2785c9c9a94bdb84fc85499bb1ab488999e1c9525f4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring containers deepseq directory filepath
             hashable microlens microlens-mtl microlens-th mtl parallel parsec
             stm terminfo text transformers unix utf8-string vector
           ];
           executableHaskellDepends = [
             base containers microlens microlens-mtl mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/vty";
           description = "A simple terminal UI library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai" = callPackage
        ({ mkDerivation, base, bytestring, http-types, network, stdenv
         , text, transformers, vault
         }:
         mkDerivation {
           pname = "wai";
           version = "3.2.2.1";
           sha256 = "fef72486e3a9e01f564abfb680f6eac9b553f8195cae8ed903d960da55380815";
           libraryHaskellDepends = [
             base bytestring http-types network text transformers vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Web Application Interface";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-app-static" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
         , containers, cryptonite, directory, file-embed, filepath
         , http-date, http-types, memory, mime-types, old-locale
         , optparse-applicative, stdenv, template-haskell, text, time
         , transformers, unix-compat, unordered-containers, wai, wai-extra
         , warp, zlib
         }:
         mkDerivation {
           pname = "wai-app-static";
           version = "3.1.7.1";
           sha256 = "681317b26490ad3da511c1a6beb0e08e83f7902090dbfb9ac9095d50c8926682";
           revision = "1";
           editedCabalFile = "0bkmml30rzifvb7nxddj3pxczk0kniahra19mjn0qrkzy1n5752p";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html blaze-markup bytestring containers cryptonite
             directory file-embed filepath http-date http-types memory
             mime-types old-locale optparse-applicative template-haskell text
             time transformers unix-compat unordered-containers wai wai-extra
             warp zlib
           ];
           executableHaskellDepends = [
             base bytestring containers directory mime-types text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/web-application-interface";
           description = "WAI application for static serving";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-cli" = callPackage
        ({ mkDerivation, ansi-terminal, base, http-types, iproute
         , monads-tf, network, options, socket-activation, stdenv, stm
         , streaming-commons, unix, wai, wai-extra, warp, warp-tls
         }:
         mkDerivation {
           pname = "wai-cli";
           version = "0.2.1";
           sha256 = "2ef5c1b41788b1ba8426476f36920c72a8a4517dd4aa09fcb11f97f5e5ea94e4";
           revision = "1";
           editedCabalFile = "1h0ip8r0zdm0xzaprfiyfdm40286apyvn6psqnx7pif8acfhpq8m";
           libraryHaskellDepends = [
             ansi-terminal base http-types iproute monads-tf network options
             socket-activation stm streaming-commons unix wai wai-extra warp
             warp-tls
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/wai-cli";
           description = "Command line runner for Wai apps (using Warp) with TLS, CGI, socket activation & graceful shutdown";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "wai-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, http-types, stdenv
         , transformers, wai
         }:
         mkDerivation {
           pname = "wai-conduit";
           version = "3.0.0.4";
           sha256 = "2790093bd52892b8087c295044573c720773144f4061ccc72d6d6a617320d61f";
           libraryHaskellDepends = [
             base bytestring conduit http-types transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "conduit wrappers for WAI";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-cors" = callPackage
        ({ mkDerivation, attoparsec, base, base-unicode-symbols, bytestring
         , case-insensitive, http-types, mtl, stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "wai-cors";
           version = "0.2.7";
           sha256 = "2597beb56ebd7148f9755ae2661c065a6c532e0a286717061861b149a51cfb81";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base base-unicode-symbols bytestring case-insensitive
             http-types mtl transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/larskuhtz/wai-cors";
           description = "CORS for WAI";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-enforce-https" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, http-types
         , network, stdenv, text, wai, warp, warp-tls
         }:
         mkDerivation {
           pname = "wai-enforce-https";
           version = "0.0.1";
           sha256 = "bb726b6dc1e3947b6b6c070d40ac2e670d24543456c321e3e56ad5a54eb1a43e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring case-insensitive http-types network text wai
           ];
           executableHaskellDepends = [ base http-types wai warp warp-tls ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/turboMaCk/wai-enforce-https";
           description = "Enforce HTTPS in Wai server app safely";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-eventsource" = callPackage
        ({ mkDerivation, stdenv, wai }:
         mkDerivation {
           pname = "wai-eventsource";
           version = "3.0.0";
           sha256 = "785005f23bf9bf4e1dfaae0705472c0e3ea4c3843ff6a8625db8d1e327a6bfc0";
           libraryHaskellDepends = [ wai ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/web-application-interface";
           description = "WAI support for server-sent events (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-extra" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, base64-bytestring
         , bytestring, case-insensitive, containers, cookie
         , data-default-class, deepseq, directory, fast-logger, http-types
         , http2, iproute, network, old-locale, resourcet, stdenv
         , streaming-commons, text, time, transformers, unix, unix-compat
         , vault, void, wai, wai-logger, word8, zlib
         }:
         mkDerivation {
           pname = "wai-extra";
           version = "3.0.29";
           sha256 = "2ee8658211a22e61a3c2f2b0552919ff63921248977ad7c2d9e2802bfe7f16dc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base base64-bytestring bytestring
             case-insensitive containers cookie data-default-class deepseq
             directory fast-logger http-types http2 iproute network old-locale
             resourcet streaming-commons text time transformers unix unix-compat
             vault void wai wai-logger word8 zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "Provides some basic WAI handlers and middleware";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-handler-launch" = callPackage
        ({ mkDerivation, async, base, bytestring, http-types, process
         , stdenv, streaming-commons, transformers, wai, warp
         }:
         mkDerivation {
           pname = "wai-handler-launch";
           version = "3.0.3.1";
           sha256 = "55009b08ad5620decad37e7f8ee2a64457bf0f8e8116f8ac2a2f3216987fd8c5";
           libraryHaskellDepends = [
             async base bytestring http-types process streaming-commons
             transformers wai warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Launch a web app in the default browser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-logger" = callPackage
        ({ mkDerivation, base, byteorder, bytestring, Cabal, cabal-doctest
         , fast-logger, http-types, network, stdenv, wai
         }:
         mkDerivation {
           pname = "wai-logger";
           version = "2.3.5";
           sha256 = "b5b285321967c12b60afc2ab6470853de2fff6c67c306d7d8ee218c0fd8deb15";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base byteorder bytestring fast-logger http-types network wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "A logging system for WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-auth" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, binary
         , blaze-builder, blaze-html, bytestring, case-insensitive, cereal
         , clientsession, cookie, exceptions, hoauth2, http-client
         , http-client-tls, http-conduit, http-reverse-proxy, http-types
         , optparse-simple, regex-posix, safe-exceptions, shakespeare
         , stdenv, text, unix-compat, unordered-containers, uri-bytestring
         , vault, wai, wai-app-static, wai-extra, warp, yaml
         }:
         mkDerivation {
           pname = "wai-middleware-auth";
           version = "0.1.2.1";
           sha256 = "4199220758290dd22136fd9f53a8e0a856c217c0b8b26eb6dbf41d2ad81e7d74";
           revision = "1";
           editedCabalFile = "06pd7qk160m17nn3v61hmcnkfwm5qy6bjr1yhx4s2vsqyqvxgbaw";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring binary blaze-builder blaze-html
             bytestring case-insensitive cereal clientsession cookie exceptions
             hoauth2 http-client http-client-tls http-conduit http-reverse-proxy
             http-types regex-posix safe-exceptions shakespeare text unix-compat
             unordered-containers uri-bytestring vault wai wai-app-static
             wai-extra yaml
           ];
           executableHaskellDepends = [
             base bytestring cereal clientsession optparse-simple warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Authentication middleware that secures WAI application";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-middleware-caching" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types
         , stdenv, wai
         }:
         mkDerivation {
           pname = "wai-middleware-caching";
           version = "0.1.0.2";
           sha256 = "15b5fb9c92599d5ecb6a70ba40bad024488f9eca7139abe23b961ba21602d78d";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
           description = "WAI Middleware to cache things";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-crowd" = callPackage
        ({ mkDerivation, authenticate, base, base64-bytestring, binary
         , blaze-builder, bytestring, case-insensitive, clientsession
         , containers, cookie, gitrev, http-client, http-client-tls
         , http-reverse-proxy, http-types, optparse-applicative, resourcet
         , stdenv, template-haskell, text, time, transformers, unix-compat
         , vault, wai, wai-app-static, wai-extra, warp
         }:
         mkDerivation {
           pname = "wai-middleware-crowd";
           version = "0.1.4.2";
           sha256 = "1136b61a6ce7729093664b63a4ab70de73e356d34b0c7a8114b639b18626b058";
           revision = "1";
           editedCabalFile = "0qvh92p9s80kmzg5w7rga54kfqbwcrkkv5p03pd92px04j2h5lbm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             authenticate base base64-bytestring binary blaze-builder bytestring
             case-insensitive clientsession containers cookie http-client
             http-client-tls http-types resourcet text time unix-compat vault
             wai
           ];
           executableHaskellDepends = [
             base bytestring clientsession gitrev http-client http-client-tls
             http-reverse-proxy http-types optparse-applicative template-haskell
             text transformers wai wai-app-static wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Middleware and utilities for using Atlassian Crowd authentication";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-middleware-static" = callPackage
        ({ mkDerivation, base, bytestring, containers, cryptonite
         , directory, expiring-cache-map, filepath, http-types, memory
         , mime-types, mtl, old-locale, semigroups, stdenv, text, time, wai
         }:
         mkDerivation {
           pname = "wai-middleware-static";
           version = "0.8.2";
           sha256 = "0be4e9fd5252d526334e4e5885a2a75269aaaad560282b5c383c49e4d855befc";
           revision = "2";
           editedCabalFile = "17vq38dh7x1kqzfwla1s0rldd5hzm5mcrx49sjlzy8b66gd2n3ac";
           libraryHaskellDepends = [
             base bytestring containers cryptonite directory expiring-cache-map
             filepath http-types memory mime-types mtl old-locale semigroups
             text time wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scotty-web/wai-middleware-static";
           description = "WAI middleware that serves requests to static files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-throttle" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-builder, cache, clock
         , containers, hashable, http-types, mtl, network, safe-exceptions
         , stdenv, stm, text, token-bucket, transformers, wai
         }:
         mkDerivation {
           pname = "wai-middleware-throttle";
           version = "0.3.0.1";
           sha256 = "580a83d01a135df8855552dca493bfa01ae31c61640fc5ff4c488569ca3afc56";
           libraryHaskellDepends = [
             base bytestring bytestring-builder cache clock containers hashable
             http-types mtl network safe-exceptions stm text token-bucket
             transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "WAI Middleware for Request Throttling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-travisci" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , cryptonite, http-types, stdenv, text, transformers, vault, wai
         }:
         mkDerivation {
           pname = "wai-middleware-travisci";
           version = "0.1.0";
           sha256 = "bbc9f2fea4c0ee3d9a73fd13dd1a2a7ef85fc294bd311ed519c1e41a1fada828";
           revision = "2";
           editedCabalFile = "0j1k2y75gwbny72zf5nrwzanh7sn2plscnrjd4hw5npccxi4dchx";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring cryptonite http-types text
             transformers vault wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/wai-middleware-travisci";
           description = "WAI middleware for authenticating webhook payloads from Travis CI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-predicates" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, case-insensitive, cookie, http-types
         , singletons, stdenv, text, transformers, vault, vector, wai
         }:
         mkDerivation {
           pname = "wai-predicates";
           version = "0.10.0";
           sha256 = "b7b3f6d147bbbf7a959c84235d0533763eda8fc4973b42f131fd47fe8ffbd7c2";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion case-insensitive
             cookie http-types singletons text transformers vault vector wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/wai-predicates/";
           description = "WAI request predicates";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "wai-session" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring
         , bytestring-builder, containers, cookie, entropy, http-types
         , StateVar, stdenv, time, transformers, vault, wai
         }:
         mkDerivation {
           pname = "wai-session";
           version = "0.3.3";
           sha256 = "d2392702446b9af8d45b83b2ce1bbb9937024c2d65fcf943ab51a7d52c7e0053";
           libraryHaskellDepends = [
             base blaze-builder bytestring bytestring-builder containers cookie
             entropy http-types StateVar time transformers vault wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/wai-session";
           description = "Flexible session middleware for WAI";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "wai-session-postgresql" = callPackage
        ({ mkDerivation, base, bytestring, cereal, cookie, data-default
         , entropy, postgresql-simple, resource-pool, stdenv, text, time
         , transformers, wai, wai-session
         }:
         mkDerivation {
           pname = "wai-session-postgresql";
           version = "0.2.1.2";
           sha256 = "39d570dd99b4dc38e7803b60b4da4bc804244ed83b3fb250a6e2191a1419ac83";
           libraryHaskellDepends = [
             base bytestring cereal cookie data-default entropy
             postgresql-simple resource-pool text time transformers wai
             wai-session
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hce/postgresql-session#readme";
           description = "PostgreSQL backed Wai session store";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-slack-middleware" = callPackage
        ({ mkDerivation, aeson, base, http-client, http-types, stdenv, wai
         }:
         mkDerivation {
           pname = "wai-slack-middleware";
           version = "0.2.0";
           sha256 = "d14482f43147e16f05c7282f5b478e76a803dc7398d73dbf6cd2d9be83695750";
           libraryHaskellDepends = [ aeson base http-client http-types wai ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/wai-slack-middleware#readme";
           description = "A Slack middleware for WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-transformers" = callPackage
        ({ mkDerivation, base, exceptions, extractable-singleton
         , monad-control-aligned, stdenv, transformers, wai, wai-websockets
         , websockets
         }:
         mkDerivation {
           pname = "wai-transformers";
           version = "0.1.0";
           sha256 = "17a330c80bad8a95add5d6efb0a12c774c197a2d19f83e6b9dc08ab73d8c8592";
           libraryHaskellDepends = [
             base exceptions extractable-singleton monad-control-aligned
             transformers wai wai-websockets websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/wai-transformers#readme";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-websockets" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, file-embed
         , http-types, network, stdenv, text, transformers, wai
         , wai-app-static, warp, websockets
         }:
         mkDerivation {
           pname = "wai-websockets";
           version = "3.0.1.2";
           sha256 = "917cceb08f296d7dc6b6cafb66133ae53888b2c98b8fb2a2d7fa629d75ab5d2c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring case-insensitive http-types network transformers
             wai websockets
           ];
           executableHaskellDepends = [
             base bytestring case-insensitive file-embed http-types network text
             transformers wai wai-app-static warp websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "Provide a bridge between WAI and the websockets package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "warp" = callPackage
        ({ mkDerivation, array, async, auto-update, base, bsb-http-chunked
         , bytestring, case-insensitive, containers, ghc-prim, hashable
         , http-date, http-types, http2, iproute, network, simple-sendfile
         , stdenv, stm, streaming-commons, text, time-manager, unix
         , unix-compat, vault, wai, word8
         }:
         mkDerivation {
           pname = "warp";
           version = "3.3.5";
           sha256 = "c504a74bc6ccd5b3f7667f6badfd7774b101b26cd1f8d3ad1c91f71ecc456d26";
           libraryHaskellDepends = [
             array async auto-update base bsb-http-chunked bytestring
             case-insensitive containers ghc-prim hashable http-date http-types
             http2 iproute network simple-sendfile stm streaming-commons text
             time-manager unix unix-compat vault wai word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "A fast, light-weight web server for WAI applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "warp-tls" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, data-default-class
         , network, stdenv, streaming-commons, tls, tls-session-manager, wai
         , warp
         }:
         mkDerivation {
           pname = "warp-tls";
           version = "3.2.9";
           sha256 = "41c3df29a9436820171c142140520178875ebb5c81e4e3ceff9ab90ba2338daf";
           revision = "1";
           editedCabalFile = "1db5j744h2g1sqz4rbjjzipqjrab0r9mywrcxymz73nvfc8zwhb9";
           libraryHaskellDepends = [
             base bytestring cryptonite data-default-class network
             streaming-commons tls tls-session-manager wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "HTTP over TLS support for Warp via the TLS package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "warp-tls-uid" = callPackage
        ({ mkDerivation, base, bytestring, data-default, network, stdenv
         , streaming-commons, tls, unix, wai, warp, warp-tls, x509
         }:
         mkDerivation {
           pname = "warp-tls-uid";
           version = "0.2.0.6";
           sha256 = "9c78b530e5ac00984233913696351132eb48e9ea2da1d1cdadde306bd6e6bb27";
           libraryHaskellDepends = [
             base bytestring data-default network streaming-commons tls unix wai
             warp warp-tls x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoshikuniJujo/warp-tls-uid#readme";
           description = "set group and user id before running server";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wave" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "wave";
           version = "0.2.0";
           sha256 = "71a6224835cfa372b9dbf60d27f6e5402663a4090bcfdbdf611d0ffc2c7f3391";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal containers transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/wave";
           description = "Work with WAVE and RF64 files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wcwidth" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "wcwidth";
           version = "0.0.2";
           sha256 = "ffc68736a3bbde3e8157710f29f4a99c0ca593c41194579c54a92c62f6c12ed8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solidsnack/wcwidth/";
           description = "Native wcwidth";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, exceptions
         , ghc-prim, http-types, mtl, parsec, split, stdenv, text
         , utf8-string
         }:
         mkDerivation {
           pname = "web-routes";
           version = "0.27.14.3";
           sha256 = "a46f7a0454a05214324f4925de39eb188d9f07a46acbc7f9720ad3188ca8c6a8";
           libraryHaskellDepends = [
             base blaze-builder bytestring exceptions ghc-prim http-types mtl
             parsec split text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
           description = "portable, type-safe URL routing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-hsp" = callPackage
        ({ mkDerivation, base, hsp, stdenv, text, web-routes }:
         mkDerivation {
           pname = "web-routes-hsp";
           version = "0.24.6.1";
           sha256 = "ca7cf5bf026c52fee5b6af3ca173c7341cd991dcd38508d07589cc7ea8102cab";
           libraryHaskellDepends = [ base hsp text web-routes ];
           doHaddock = false;
           doCheck = false;
           description = "Adds XMLGenerator instance for RouteT monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-wai" = callPackage
        ({ mkDerivation, base, bytestring, http-types, stdenv, text, wai
         , web-routes
         }:
         mkDerivation {
           pname = "web-routes-wai";
           version = "0.24.3.1";
           sha256 = "8e1fd187686452af39929bc6b6a31319001859930744e22e2eee1fa9ad103049";
           libraryHaskellDepends = [
             base bytestring http-types text wai web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Library for maintaining correctness of URLs within an application";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web3" = callPackage
        ({ mkDerivation, aeson, async, base, basement, bytestring, cereal
         , cryptonite, data-default, exceptions, generics-sop, http-client
         , http-client-tls, machines, memory, microlens, microlens-aeson
         , microlens-mtl, microlens-th, mtl, OneTuple, parsec, relapse
         , stdenv, tagged, template-haskell, text, transformers, uuid-types
         , vinyl
         }:
         mkDerivation {
           pname = "web3";
           version = "0.8.3.2";
           sha256 = "a70f9b8cfc88e7a713d92a974f6780006962cb25b37b1435ba7bab75432662fa";
           libraryHaskellDepends = [
             aeson async base basement bytestring cereal cryptonite data-default
             exceptions generics-sop http-client http-client-tls machines memory
             microlens microlens-aeson microlens-mtl microlens-th mtl OneTuple
             parsec relapse tagged template-haskell text transformers uuid-types
             vinyl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/airalab/hs-web3#readme";
           description = "Ethereum API for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "webdriver" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bytestring, call-stack, data-default-class, directory
         , directory-tree, exceptions, filepath, http-client, http-types
         , lifted-base, monad-control, network, network-uri, scientific
         , stdenv, temporary, text, time, transformers, transformers-base
         , unordered-containers, vector, zip-archive
         }:
         mkDerivation {
           pname = "webdriver";
           version = "0.9.0.1";
           sha256 = "135950889784b9d323c70ebf7ecd75b8df194489a303d85995b1fccc7549dff0";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bytestring call-stack
             data-default-class directory directory-tree exceptions filepath
             http-client http-types lifted-base monad-control network
             network-uri scientific temporary text time transformers
             transformers-base unordered-containers vector zip-archive
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kallisti-dev/hs-webdriver";
           description = "a Haskell client for the Selenium WebDriver protocol";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "webex-teams-api" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bitset-word8, bytestring
         , conduit, data-default, http-conduit, network-uri
         , optparse-applicative, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "webex-teams-api";
           version = "0.2.0.0";
           sha256 = "7756e38bd54d4dae1f70e7343259438f98bf58ff484ebc1c798166904178a40b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bitset-word8 bytestring conduit data-default
             http-conduit network-uri text
           ];
           executableHaskellDepends = [
             aeson base bytestring data-default http-conduit
             optparse-applicative text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/webex-teams-api#readme";
           description = "A Haskell bindings for Webex Teams API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "webex-teams-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, data-default
         , http-client, optparse-applicative, stdenv, text, utf8-string
         , webex-teams-api
         }:
         mkDerivation {
           pname = "webex-teams-conduit";
           version = "0.2.0.0";
           sha256 = "0d7c7db689092656653d687adadeb92669b647b1d7adc2493d8ca08a87742e5d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base conduit webex-teams-api ];
           executableHaskellDepends = [
             base bytestring conduit data-default http-client
             optparse-applicative text utf8-string webex-teams-api
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/webex-teams-api#readme";
           description = "Conduit wrapper of Webex Teams List API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "webex-teams-pipes" = callPackage
        ({ mkDerivation, base, bytestring, data-default, http-client
         , optparse-applicative, pipes, stdenv, text, utf8-string
         , webex-teams-api
         }:
         mkDerivation {
           pname = "webex-teams-pipes";
           version = "0.2.0.0";
           sha256 = "77fad574346613e4989997852ca5972185a6321290caa718ce081be985a33100";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base pipes webex-teams-api ];
           executableHaskellDepends = [
             base bytestring data-default http-client optparse-applicative pipes
             text utf8-string webex-teams-api
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/webex-teams-api#readme";
           description = "Pipes wrapper of Webex Teams List API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "webrtc-vad" = callPackage
        ({ mkDerivation, base, primitive, stdenv, vector }:
         mkDerivation {
           pname = "webrtc-vad";
           version = "0.1.0.3";
           sha256 = "89cc6691d314c8c2ae7801bf56e1cca0252617536af4ac94acb92ad6d560d453";
           libraryHaskellDepends = [ base primitive vector ];
           doHaddock = false;
           doCheck = false;
           description = "Easy voice activity detection";
           license = stdenv.lib.licenses.mit;
         }) {};
      "websockets" = callPackage
        ({ mkDerivation, async, attoparsec, base, base64-bytestring, binary
         , bytestring, bytestring-builder, case-insensitive, clock
         , containers, entropy, network, random, SHA, stdenv
         , streaming-commons, text
         }:
         mkDerivation {
           pname = "websockets";
           version = "0.12.7.0";
           sha256 = "5f11184c6f97de4ae32e00d309a0a9bcbd829c7f099dbf5b2284ae074f035f86";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async attoparsec base base64-bytestring binary bytestring
             bytestring-builder case-insensitive clock containers entropy
             network random SHA streaming-commons text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/websockets";
           description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "websockets-snap" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-builder, io-streams
         , mtl, snap-core, snap-server, stdenv, websockets
         }:
         mkDerivation {
           pname = "websockets-snap";
           version = "0.10.3.1";
           sha256 = "13afb464748b796fdb9222c07e3009d1ebeeda34e599d6b77b0bf66016fefac2";
           libraryHaskellDepends = [
             base bytestring bytestring-builder io-streams mtl snap-core
             snap-server websockets
           ];
           doHaddock = false;
           doCheck = false;
           description = "Snap integration for the websockets library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "weeder" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cmdargs, deepseq
         , directory, extra, filepath, foundation, hashable, process, stdenv
         , text, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "weeder";
           version = "1.0.8";
           sha256 = "26204eeabb0cdce707548b3be451b1947567b0a13bcfe28bbdd7f48340c09cfa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring cmdargs deepseq directory extra filepath
             foundation hashable process text unordered-containers vector yaml
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/weeder#readme";
           description = "Detect dead code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "weigh" = callPackage
        ({ mkDerivation, base, deepseq, ghc, mtl, process, split, stdenv
         , temporary
         }:
         mkDerivation {
           pname = "weigh";
           version = "0.0.16";
           sha256 = "a92a19209b6e8999be21fed8c6ddad8cddf5b98352341b58d2c3e3ef4e96eb8e";
           libraryHaskellDepends = [
             base deepseq ghc mtl process split temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/weigh#readme";
           description = "Measure allocations of a Haskell functions/values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wide-word" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv }:
         mkDerivation {
           pname = "wide-word";
           version = "0.1.1.0";
           sha256 = "3c2a758048b0a29ead8170cde034bc4538e6e7e26d27f98911e9eb3773142a80";
           libraryHaskellDepends = [ base deepseq primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erikd/wide-word";
           description = "Data types for large but fixed width signed and unsigned integers";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "wikicfp-scraper" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, scalpel-core, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "wikicfp-scraper";
           version = "0.1.0.11";
           sha256 = "2ba40e64e5a77534dd747a75f6db2ac3c4db55a5a62d2880be2eb408e5cbdfb8";
           libraryHaskellDepends = [
             attoparsec base bytestring scalpel-core text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/wikicfp-scraper";
           description = "Scrape WikiCFP web site";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wild-bind" = callPackage
        ({ mkDerivation, base, containers, semigroups, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "wild-bind";
           version = "0.1.2.5";
           sha256 = "095b93a0cd740052c8afee2b14cea2be7e3994693a1090016c73cb4e67f16192";
           libraryHaskellDepends = [
             base containers semigroups text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/wild-bind";
           description = "Dynamic key binding framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wild-bind-x11" = callPackage
        ({ mkDerivation, base, containers, fold-debounce, mtl, semigroups
         , stdenv, stm, text, transformers, wild-bind, X11
         }:
         mkDerivation {
           pname = "wild-bind-x11";
           version = "0.2.0.9";
           sha256 = "1f0c7e8d63b4d9662ef535f8665fd18e888106d73d1d61de32b1fb5b95c578f4";
           libraryHaskellDepends = [
             base containers fold-debounce mtl semigroups stm text transformers
             wild-bind X11
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/wild-bind";
           description = "X11-specific implementation for WildBind";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "windns" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, dnsapi, stdenv }:
         mkDerivation {
           pname = "windns";
           version = "0.1.0.1";
           sha256 = "087fa65c99021f4233102430d554aebe114af68f6b1647ff821bcb501c0bcd04";
           revision = "1";
           editedCabalFile = "17d44pzi4q5yvrygimdrwdrabz62s1ylw918w28sxgcvj64ir22g";
           configureFlags = [ "-fallow-non-windows" ];
           libraryHaskellDepends = [ base bytestring deepseq ];
           librarySystemDepends = [ dnsapi ];
           doHaddock = false;
           doCheck = false;
           description = "Domain Name Service (DNS) lookup via the <windns.h>/dnsapi.dll standard library";
           license = stdenv.lib.licenses.gpl2;
         }) {inherit (pkgs) dnsapi;};
      "winery" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, cpu
         , fast-builder, hashable, HUnit, megaparsec, mtl, prettyprinter
         , prettyprinter-ansi-terminal, QuickCheck, scientific, semigroups
         , stdenv, text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "winery";
           version = "1.1.3";
           sha256 = "a98da9c313a2d9feb3315d1481e0708e5e021e1b90dc5742afcc3ece9d8902e2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers cpu fast-builder hashable HUnit
             megaparsec mtl prettyprinter prettyprinter-ansi-terminal QuickCheck
             scientific semigroups text time transformers unordered-containers
             vector
           ];
           executableHaskellDepends = [
             aeson base bytestring megaparsec prettyprinter
             prettyprinter-ansi-terminal text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/winery#readme";
           description = "A compact, well-typed seralisation format for Haskell values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wire-streams" = callPackage
        ({ mkDerivation, base, binary, binary-parsers, bytestring
         , io-streams, stdenv
         }:
         mkDerivation {
           pname = "wire-streams";
           version = "0.1.1.0";
           sha256 = "96dffb70c08c89589881c96f199d271b55e4a5b3cc5be0f3e24e101858e2fb27";
           revision = "1";
           editedCabalFile = "1j7gpk3k82h0kxnhpv40jmnqxpnr0v0m4lj6bhpga81vlmznr088";
           libraryHaskellDepends = [
             base binary binary-parsers bytestring io-streams
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/wire-streams";
           description = "Fast binary io-streams adapter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "with-location" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "with-location";
           version = "0.1.0";
           sha256 = "2c91d70cb28d39d6d5fbb37800c7d984aed4254cdcbf03ffa0787404bddefde7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/with-location#readme";
           description = "Use ImplicitParams-based source locations in a backward compatible way";
           license = stdenv.lib.licenses.mit;
         }) {};
      "witness" = callPackage
        ({ mkDerivation, base, constraints, semigroupoids, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "witness";
           version = "0.4";
           sha256 = "93c6c83681a3ab94f53e49c07d0d1474e21169f779c917a896c9d6ed1bf01ea0";
           libraryHaskellDepends = [
             base constraints semigroupoids transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AshleyYakeley/witness";
           description = "values that witness types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wizards" = callPackage
        ({ mkDerivation, base, containers, control-monad-free, haskeline
         , mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "wizards";
           version = "1.0.3";
           sha256 = "05650d7bf6dd0e6b87d0d7da6fb003601ce5d7b1f3d69571127ec3c9425b9bb2";
           revision = "1";
           editedCabalFile = "095qd17zrdhqmcvmslbyzfa5sh9glvvsnsvnlz31gzsmi8nnsgim";
           libraryHaskellDepends = [
             base containers control-monad-free haskeline mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "High level, generic library for interrogative user interfaces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-annotated" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv, text }:
         mkDerivation {
           pname = "wl-pprint-annotated";
           version = "0.1.0.1";
           sha256 = "6b662b244b2e318a2923dc7057d707369a29ea4a0e721b4710eac7239cc727af";
           libraryHaskellDepends = [ base containers deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/wl-pprint-annotated#readme";
           description = "Pretty printer with annotation support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-console" = callPackage
        ({ mkDerivation, base, bytestring, colorful-monoids, stdenv, text
         , wl-pprint-annotated
         }:
         mkDerivation {
           pname = "wl-pprint-console";
           version = "0.1.0.2";
           sha256 = "cb76b445aa338cae075d149e752e53cf30e2480827eff4c157957b013f48b815";
           libraryHaskellDepends = [
             base bytestring colorful-monoids text wl-pprint-annotated
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/wl-pprint-console#readme";
           description = "Wadler/Leijen pretty printer supporting colorful console output";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wl-pprint-text" = callPackage
        ({ mkDerivation, base, base-compat, stdenv, text }:
         mkDerivation {
           pname = "wl-pprint-text";
           version = "1.2.0.1";
           sha256 = "9e6efdba61da70caf85560570648ec097b88cc2b92bc1306135b93f0ff9b0c0c";
           libraryHaskellDepends = [ base base-compat text ];
           doHaddock = false;
           doCheck = false;
           description = "A Wadler/Leijen Pretty Printer for Text values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "word-trie" = callPackage
        ({ mkDerivation, base, binary, containers, stdenv }:
         mkDerivation {
           pname = "word-trie";
           version = "0.3.0";
           sha256 = "a3f3c2c088c64219ae35f7383a5dc1a368217183ba603e98785c110ac3f29282";
           revision = "1";
           editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
           libraryHaskellDepends = [ base binary containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/word-trie";
           description = "Implementation of a finite trie over words";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "word-wrap" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "word-wrap";
           version = "0.4.1";
           sha256 = "eb72f91947c0c62cb862feb33cad9efdc5e720f456fa9ca68ef8ac9d1ec42c97";
           revision = "1";
           editedCabalFile = "1k4w4g053vhmpp08542hrqaw81p3p35i567xgdarqmpghfrk68pp";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/word-wrap/";
           description = "A library for word-wrapping";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "word24" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "word24";
           version = "2.0.1";
           sha256 = "c34ba17cc88df314151ef27dea192102ed73d5f0678f1359a5fe59799dc3a086";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/word24";
           description = "24-bit word and int types for GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "word8" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "word8";
           version = "0.1.3";
           sha256 = "2630934c75728bfbf390c1f0206b225507b354f68d4047b06c018a36823b5d8a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Word8 library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wordpress-auth" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, cookie
         , cryptohash-md5, cryptohash-sha256, hs-php-session, http-types
         , mtl, stdenv, text, time, uri-encode
         }:
         mkDerivation {
           pname = "wordpress-auth";
           version = "1.0.0.0";
           sha256 = "ac784e5222e6aab6cfffd71685e69b2a1bf0a42283f183931bd2d04c51cc1994";
           libraryHaskellDepends = [
             base base16-bytestring bytestring cookie cryptohash-md5
             cryptohash-sha256 hs-php-session http-types mtl text time
             uri-encode
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prikhi/wordpress-auth#readme";
           description = "Validate Wordpress Cookies & Nonces; Build Wordpress Hashes & Salts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "world-peace" = callPackage
        ({ mkDerivation, aeson, base, deepseq, profunctors, stdenv, tagged
         }:
         mkDerivation {
           pname = "world-peace";
           version = "1.0.1.0";
           sha256 = "97ff3d50b9d6e2f00b29abd9bf6336009a6bb4e273dd1a6c2f4c7a1f60f2a7bb";
           libraryHaskellDepends = [ aeson base deepseq profunctors tagged ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/world-peace";
           description = "Open Union and Open Product Types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wrap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "wrap";
           version = "0.0.0";
           sha256 = "f8bbc4b417b2291532784d0c7940c0f1a24d054e6012963f7d727ad13977f50e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Wrap a function's return value with another function";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wreq" = callPackage
        ({ mkDerivation, aeson, attoparsec, authenticate-oauth, base
         , base16-bytestring, bytestring, Cabal, cabal-doctest
         , case-insensitive, containers, cryptonite, exceptions, ghc-prim
         , hashable, http-client, http-client-tls, http-types, lens
         , lens-aeson, memory, mime-types, psqueues, stdenv
         , template-haskell, text, time, time-locale-compat
         , unordered-containers
         }:
         mkDerivation {
           pname = "wreq";
           version = "0.5.3.2";
           sha256 = "66d8070e21c86a015cfc3df10c740d92c7f0b7a396c3ec02c3d2f8a5c2d1b49b";
           revision = "1";
           editedCabalFile = "0gz674sb266hv6si9l79c3bv7n2nbssl1262c24in79sk27887gb";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec authenticate-oauth base base16-bytestring
             bytestring case-insensitive containers cryptonite exceptions
             ghc-prim hashable http-client http-client-tls http-types lens
             lens-aeson memory mime-types psqueues template-haskell text time
             time-locale-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.serpentine.com/wreq";
           description = "An easy-to-use HTTP client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "writer-cps-exceptions" = callPackage
        ({ mkDerivation, base, exceptions, stdenv, transformers
         , writer-cps-transformers
         }:
         mkDerivation {
           pname = "writer-cps-exceptions";
           version = "0.1.0.1";
           sha256 = "9a1a5dc53a53e19f0d0dacdcb88bbfc3cde64379413982e8581043da6cc5ee43";
           libraryHaskellDepends = [
             base exceptions transformers writer-cps-transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/writer-cps-exceptions";
           description = "Control.Monad.Catch instances for the stricter CPS WriterT and RWST";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "writer-cps-mtl" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , writer-cps-transformers
         }:
         mkDerivation {
           pname = "writer-cps-mtl";
           version = "0.1.1.6";
           sha256 = "06f9fb60dc41ad26f3d18089a0b7ff1e1aeb15dc862508c59b6b577c0914dd36";
           libraryHaskellDepends = [
             base mtl transformers writer-cps-transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/writer-cps-mtl#readme";
           description = "MonadWriter orphan instances for writer-cps-transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "writer-cps-transformers" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "writer-cps-transformers";
           version = "0.5.6.1";
           sha256 = "76eacf1c3df8f86b6d11507219d7e840d7fb2898f53959aa3dad40791b8f321c";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/writer-cps-transformers#readme";
           description = "WriteT and RWST monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ws" = callPackage
        ({ mkDerivation, async, attoparsec, attoparsec-uri, base
         , bytestring, exceptions, haskeline, mtl, network
         , optparse-applicative, stdenv, strict, text, vector, websockets
         , wuss
         }:
         mkDerivation {
           pname = "ws";
           version = "0.0.5";
           sha256 = "a62b1f08248b401bc532fbbc6dca6e75b1605988c83bcc9e4488d6f305f644e2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async attoparsec-uri base bytestring exceptions haskeline mtl
             network text websockets wuss
           ];
           executableHaskellDepends = [
             async attoparsec attoparsec-uri base bytestring exceptions
             haskeline mtl network optparse-applicative strict text vector
             websockets wuss
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/ws#readme";
           description = "A simple CLI utility for interacting with a websocket";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wuss" = callPackage
        ({ mkDerivation, base, bytestring, connection, network, stdenv
         , websockets
         }:
         mkDerivation {
           pname = "wuss";
           version = "1.1.15";
           sha256 = "f80cc4ba0fb17d9df138a442c8f49883fff8bfc7410c5fa1ada4d1abaa4958c4";
           libraryHaskellDepends = [
             base bytestring connection network websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/wuss#readme";
           description = "Secure WebSocket (WSS) clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "x11-xim" = callPackage
        ({ mkDerivation, base, stdenv, utf8-string, X11 }:
         mkDerivation {
           pname = "x11-xim";
           version = "0.0.9.0";
           sha256 = "3ccb05847f7eacd607db095e4f655984607f46313d6b70130d09fd096442c76a";
           revision = "1";
           editedCabalFile = "1c561z9xvfcd7ddbiw3r0frhjvsrklachd38s66fzwjdgw1sl124";
           libraryHaskellDepends = [ base utf8-string X11 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoshikuniJujo/x11-xim_haskell/wiki/";
           description = "A binding to the xim of X11 graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
         , bytestring, containers, cryptonite, hourglass, memory, mtl, pem
         , stdenv
         }:
         mkDerivation {
           pname = "x509";
           version = "1.7.5";
           sha256 = "b1b0fcbb4aa0d749ed2b54710c2ebd6d900cb932108ad14f97640cf4ca60c7c8";
           revision = "1";
           editedCabalFile = "1z98llpggldy4yb7afcsn3r3q4vklvx2pqyrhy9fir5y2yd5l601";
           libraryHaskellDepends = [
             asn1-encoding asn1-parse asn1-types base bytestring containers
             cryptonite hourglass memory mtl pem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X509 reader and writer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-store" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , containers, cryptonite, directory, filepath, mtl, pem, stdenv
         , x509
         }:
         mkDerivation {
           pname = "x509-store";
           version = "1.6.7";
           sha256 = "9786356c8bfdf631ea018c3244d0854c6db2cb24e583891ea553961443f61ef9";
           revision = "1";
           editedCabalFile = "04h2h8kdzhd2fp3w4a834xc1n88b1jgrxlgcsynfn0iwpbsb41x7";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring containers cryptonite
             directory filepath mtl pem x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X.509 collection accessing and storing methods";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-system" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , mtl, pem, process, stdenv, x509, x509-store
         }:
         mkDerivation {
           pname = "x509-system";
           version = "1.6.6";
           sha256 = "40dcdaae3ec67f38c08d96d4365b901eb8ac0c590bd7972eb429d37d58aa4419";
           libraryHaskellDepends = [
             base bytestring containers directory filepath mtl pem process x509
             x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "Handle per-operating-system X.509 accessors and storage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-validation" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , containers, cryptonite, data-default-class, hourglass, memory
         , mtl, pem, stdenv, x509, x509-store
         }:
         mkDerivation {
           pname = "x509-validation";
           version = "1.6.11";
           sha256 = "f94321cbcc4a534adf5889ae6950f3673e38b62b89b6970b477f502ce987d19b";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring containers cryptonite
             data-default-class hourglass memory mtl pem x509 x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X.509 Certificate and CRL validation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xdg-basedir" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "xdg-basedir";
           version = "0.2.2";
           sha256 = "e461c3a5c6007c55ceaea03be3be0ef3a92aa0ea1aea936da0c43671bbfaf42b";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/xdg-basedir";
           description = "A basic implementation of the XDG Base Directory specification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xdg-userdirs" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, stdenv
         , xdg-basedir
         }:
         mkDerivation {
           pname = "xdg-userdirs";
           version = "0.1.0.2";
           sha256 = "88aabbcb80dee5b669ad533af20000d561e6fe59ab1014ccc2482055d0a8046e";
           libraryHaskellDepends = [
             base containers directory filepath xdg-basedir
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://redmine.iportnov.ru/projects/xdg-userdirs";
           description = "Basic implementation of XDG user directories specification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xeno" = callPackage
        ({ mkDerivation, array, base, bytestring, deepseq, mtl
         , mutable-containers, stdenv, vector
         }:
         mkDerivation {
           pname = "xeno";
           version = "0.3.5.2";
           sha256 = "14f15b8e751063b701d63b78176d18385193d042af7df6aba67978d04a6cd075";
           libraryHaskellDepends = [
             array base bytestring deepseq mtl mutable-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/xeno";
           description = "A fast event-based XML parser in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xenstore" = callPackage
        ({ mkDerivation, base, bytestring, cereal, mtl, network, stdenv }:
         mkDerivation {
           pname = "xenstore";
           version = "0.1.1";
           sha256 = "c2b538c9ce6716f4a1b4c0cb63ed5c6e5ee3e69e80dbb7826ee7f5392f45e874";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring cereal mtl network ];
           doHaddock = false;
           doCheck = false;
           description = "Xenstore client access";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xls" = callPackage
        ({ mkDerivation, base, conduit, filepath, getopt-generics
         , resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "xls";
           version = "0.1.2";
           sha256 = "d7f3d063d29d829f332164090a048741d03753f12d55ec064f0a9a374e62ee3e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base conduit filepath resourcet transformers
           ];
           executableHaskellDepends = [
             base conduit getopt-generics resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/harendra-kumar/xls";
           description = "Parse Microsoft Excel xls files (BIFF/Excel 97-2004)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xlsx" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, binary-search
         , bytestring, conduit, containers, data-default, deepseq, errors
         , extra, filepath, lens, mtl, network-uri, old-locale, safe, stdenv
         , text, time, transformers, vector, xeno, xml-conduit, zip-archive
         , zlib
         }:
         mkDerivation {
           pname = "xlsx";
           version = "0.7.2";
           sha256 = "b2560467ea5639d7bbd97ecf492f2e2cc9fa34e0b05fc5d55243304bbe7f1103";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring binary-search bytestring conduit
             containers data-default deepseq errors extra filepath lens mtl
             network-uri old-locale safe text time transformers vector xeno
             xml-conduit zip-archive zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qrilka/xlsx";
           description = "Simple and incomplete Excel file parser/writer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xlsx-tabular" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, data-default
         , lens, stdenv, text, xlsx
         }:
         mkDerivation {
           pname = "xlsx-tabular";
           version = "0.2.2.1";
           sha256 = "48dd897d41df81f9009e6c6c988021bc989286cee385bd2535d8e60b54d0fd2d";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default lens text xlsx
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kkazuo/xlsx-tabular";
           description = "Xlsx table cell value extraction utility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "xml";
           version = "1.3.14";
           sha256 = "32d1a1a9f21a59176d84697f96ae3a13a0198420e3e4f1c48abbab7d2425013d";
           revision = "1";
           editedCabalFile = "130xwqmgmg9vp988mppm5ivz1r5qbivb270fz2rwl4q0x04czdzd";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.galois.com";
           description = "A simple XML library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-basic" = callPackage
        ({ mkDerivation, base, containers, data-accessor
         , explicit-exception, semigroups, stdenv, utility-ht
         }:
         mkDerivation {
           pname = "xml-basic";
           version = "0.1.3.1";
           sha256 = "8d743ff8e489dc52fd256b18b75c21689945cfcb52481f5ca0aa6df50178a3e2";
           libraryHaskellDepends = [
             base containers data-accessor explicit-exception semigroups
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           description = "Basics for XML/HTML representation and processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-conduit" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
         , bytestring, conduit, conduit-extra, containers
         , data-default-class, deepseq, resourcet, stdenv, text
         , transformers, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit";
           version = "1.8.0.1";
           sha256 = "980b2f13ab8f54d8c2cbf92d186d5fac6c6ead42197c6687bd81e2fea2afef9c";
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup bytestring conduit
             conduit-extra containers data-default-class deepseq resourcet text
             transformers xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/xml";
           description = "Pure-Haskell utilities for dealing with XML with the conduit package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-conduit-parse" = callPackage
        ({ mkDerivation, base, conduit, conduit-parse, containers
         , exceptions, parsers, stdenv, text, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit-parse";
           version = "0.3.1.2";
           sha256 = "c1aae117720128195dbbf2ce196271e4ca2973163c6a03a1b0ead3b32f936308";
           revision = "1";
           editedCabalFile = "0jnnr4z3c6rq2dz0ldiic5zwkrp36igf6gip11qrm9ss2pk9khbl";
           libraryHaskellDepends = [
             base conduit conduit-parse containers exceptions parsers text
             xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/xml-conduit-parse";
           description = "Streaming XML parser based on conduits";
           license = "unknown";
           hydraPlatforms = stdenv.lib.platforms.none;
         }) {};
      "xml-conduit-writer" = callPackage
        ({ mkDerivation, base, containers, data-default, dlist, mtl, stdenv
         , text, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit-writer";
           version = "0.1.1.2";
           sha256 = "0891c05ad2a2de68183868de8f66230d02f209446ee91bca772cbf22b599ae58";
           libraryHaskellDepends = [
             base containers data-default dlist mtl text xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
           description = "Warm and fuzzy creation of XML documents";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-hamlet" = callPackage
        ({ mkDerivation, base, containers, parsec, shakespeare, stdenv
         , template-haskell, text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-hamlet";
           version = "0.5.0.1";
           sha256 = "920ed9736117c09bcec04133beaa14dc05d7c413ee14f49c6aa9707ebc64304b";
           libraryHaskellDepends = [
             base containers parsec shakespeare template-haskell text
             xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Hamlet-style quasiquoter for XML content";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-html-qq" = callPackage
        ({ mkDerivation, base, blaze-markup, conduit, data-default
         , from-sum, heterocephalus, html-conduit, resourcet, stdenv
         , template-haskell, text, th-lift, th-lift-instances, xml-conduit
         }:
         mkDerivation {
           pname = "xml-html-qq";
           version = "0.1.0.1";
           sha256 = "1a2ebb1f4ca58a4f442c470db6d3271e6b1069d41860f8683b5da9082329235a";
           libraryHaskellDepends = [
             base blaze-markup conduit data-default from-sum heterocephalus
             html-conduit resourcet template-haskell text th-lift
             th-lift-instances xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/xml-html-qq";
           description = "Quasi-quoters for XML and HTML Documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-indexed-cursor" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default, stdenv
         , text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-indexed-cursor";
           version = "0.1.1.0";
           sha256 = "46d622fc738e8cc1513f598207ee5e6cda790c79e0697fe02d2da6ad02a6da74";
           libraryHaskellDepends = [
             base bytestring containers data-default text xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/xml-indexed-cursor";
           description = "Indexed XML cursors similar to 'Text.XML.Cursor' from xml-conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-isogen" = callPackage
        ({ mkDerivation, base, deepseq, dom-parser, lens, mtl, QuickCheck
         , semigroups, stdenv, template-haskell, text, xml-conduit
         , xml-conduit-writer
         }:
         mkDerivation {
           pname = "xml-isogen";
           version = "0.3.0";
           sha256 = "9f812d7bb5dd280e62f5013fd77af27e3710fb1a76dcf7a12f0abbfae5400a17";
           libraryHaskellDepends = [
             base deepseq dom-parser lens mtl QuickCheck semigroups
             template-haskell text xml-conduit xml-conduit-writer
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeable/xml-isogen";
           description = "Generate XML-isomorphic types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-lens" = callPackage
        ({ mkDerivation, base, case-insensitive, containers, lens, stdenv
         , text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-lens";
           version = "0.1.6.3";
           sha256 = "4dd7f1a91fbb12ae52d5a14badd9f38c0f0d7556f08ee77d79a67cc546dcb1e8";
           revision = "2";
           editedCabalFile = "1phba1j6ggxfsq4ivhd5wibzw1b9hwppqmgichyj3xg9z3widmnl";
           libraryHaskellDepends = [
             base case-insensitive containers lens text xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/xml-lens";
           description = "Lenses, traversals, and prisms for xml-conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-picklers" = callPackage
        ({ mkDerivation, base, containers, stdenv, text, xml-types }:
         mkDerivation {
           pname = "xml-picklers";
           version = "0.3.6";
           sha256 = "d1b802cd9543a228c6699928e6695539c28f6cbd8e7859a65ca874543ef1d1a4";
           libraryHaskellDepends = [ base containers text xml-types ];
           doHaddock = false;
           doCheck = false;
           description = "XML picklers based on xml-types, ported from hexpat-pickle";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-to-json" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, curl
         , hashable, hxt, hxt-curl, hxt-expat, hxt-tagsoup, regex-posix
         , stdenv, tagsoup, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "xml-to-json";
           version = "2.0.1";
           sha256 = "ad1a2501828052a1798178c309638a9b8e4fe66ad24dae9c76de939c156d2e2f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers curl hashable hxt hxt-curl
             hxt-expat hxt-tagsoup regex-posix tagsoup text unordered-containers
             vector
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sinelaw/xml-to-json";
           description = "Library and command line tool for converting XML files to json";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-to-json-fast" = callPackage
        ({ mkDerivation, base, directory, process, stdenv, tagsoup, text }:
         mkDerivation {
           pname = "xml-to-json-fast";
           version = "2.0.0";
           sha256 = "dd852fe1aa54db3c6d87a2e74b5345b0f14effdd49bad5b73d79571e1b47563f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base tagsoup text ];
           executableHaskellDepends = [ base directory process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sinelaw/xml-to-json-fast";
           description = "Fast, light converter of xml to json capable of handling huge xml files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-types" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, text }:
         mkDerivation {
           pname = "xml-types";
           version = "0.3.6";
           sha256 = "9937d440072552c03c6d8ad79f61e61467dc28dcd5adeaad81038b9b94eef8c9";
           libraryHaskellDepends = [ base deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-xml/";
           description = "Basic types for representing XML";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xmlbf" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, selective
         , stdenv, text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "xmlbf";
           version = "0.6";
           sha256 = "3ee5af3d108e128c23c16e241d5ec251e1373f7d3008c322324551f96e958c0b";
           libraryHaskellDepends = [
             base bytestring containers deepseq selective text transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/k0001/xmlbf";
           description = "XML back and forth! Parser, renderer, ToXml, FromXml, fixpoints";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "xmlbf-xeno" = callPackage
        ({ mkDerivation, base, bytestring, html-entities, stdenv, text
         , unordered-containers, xeno, xmlbf
         }:
         mkDerivation {
           pname = "xmlbf-xeno";
           version = "0.2";
           sha256 = "2f9ef92e85f1aef21335adfddea472a5dec7ae77aa4b71d360b535390b4263f4";
           libraryHaskellDepends = [
             base bytestring html-entities text unordered-containers xeno xmlbf
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/k0001/xmlbf";
           description = "xeno backend support for the xmlbf library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "xmlgen" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers, mtl
         , stdenv, text
         }:
         mkDerivation {
           pname = "xmlgen";
           version = "0.6.2.2";
           sha256 = "926fa98c77525f5046274758fcebd190e86de3f53a4583179e8ce328f25a34d6";
           revision = "1";
           editedCabalFile = "0vwnqd0lsw81llsn0psga5r6pw7jh69vfbj3rnz7c2fpkc0gjh3j";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers mtl text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fast XML generation library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmonad" = callPackage
        ({ mkDerivation, base, containers, data-default, directory
         , extensible-exceptions, filepath, mtl, process, setlocale, stdenv
         , unix, utf8-string, X11
         }:
         mkDerivation {
           pname = "xmonad";
           version = "0.15";
           sha256 = "4a7948e6eee5e34a27d15444589ade3b3fa1adecadbf37b943cff8348380f928";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers data-default directory extensible-exceptions
             filepath mtl process setlocale unix utf8-string X11
           ];
           executableHaskellDepends = [ base mtl unix X11 ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             install -D man/xmonad.1 ''${!outputDoc}/share/man/man1/xmonad.1
             install -D man/xmonad.hs ''${!outputDoc}/share/doc/$name/sample-xmonad.hs
           '';
           homepage = "http://xmonad.org";
           description = "A tiling window manager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmonad-contrib" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , extensible-exceptions, filepath, mtl, old-locale, old-time
         , process, random, semigroups, stdenv, unix, utf8-string, X11
         , X11-xft, xmonad
         }:
         mkDerivation {
           pname = "xmonad-contrib";
           version = "0.15";
           sha256 = "ba7686007037fc081de09fc05914fbb84cad8123e1f4eedb8895c863fcfb3e65";
           revision = "1";
           editedCabalFile = "15r1mlqs1axh1dp4fqqb54xj3zns47nrvlf2xp5jg5jq51z03xpf";
           libraryHaskellDepends = [
             base bytestring containers directory extensible-exceptions filepath
             mtl old-locale old-time process random semigroups unix utf8-string
             X11 X11-xft xmonad
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://xmonad.org/";
           description = "Third party extensions for xmonad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmonad-extras" = callPackage
        ({ mkDerivation, alsa-mixer, base, bytestring, containers, hint
         , libmpd, mtl, network, regex-posix, stdenv, X11, xmonad
         , xmonad-contrib
         }:
         mkDerivation {
           pname = "xmonad-extras";
           version = "0.15.2";
           sha256 = "9a9ea86b49ce2fe9f4204d09bc5b32c323d42be8017429058b0568300bfb40dc";
           configureFlags = [
             "-f-with_hlist" "-fwith_parsec" "-fwith_split"
           ];
           libraryHaskellDepends = [
             alsa-mixer base bytestring containers hint libmpd mtl network
             regex-posix X11 xmonad xmonad-contrib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xmonad/xmonad-extras";
           description = "Third party extensions for xmonad with wacky dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xss-sanitize" = callPackage
        ({ mkDerivation, attoparsec, base, containers, css-text
         , network-uri, stdenv, tagsoup, text, utf8-string
         }:
         mkDerivation {
           pname = "xss-sanitize";
           version = "0.3.6";
           sha256 = "b385eea5652c798b701c627dce8b327c3d6cbfd8c92e1e18e7118862d4d0e2b4";
           libraryHaskellDepends = [
             attoparsec base containers css-text network-uri tagsoup text
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/haskell-xss-sanitize#readme";
           description = "sanitize untrusted HTML to prevent XSS attacks";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "xxhash-ffi" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "xxhash-ffi";
           version = "0.2.0.0";
           sha256 = "fc2e63ea54531e2888a9ddd6816cb113bd5fd0e01192156e9f1459d88af92e6b";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-haskey/xxhash-ffi#readme";
           description = "Bindings to the C implementation the xxHash algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yaml" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , containers, directory, filepath, libyaml, mtl, resourcet
         , scientific, stdenv, template-haskell, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "yaml";
           version = "0.11.2.0";
           sha256 = "d1f2d2b2cc8db857d39baf30fb3eded2e0f49a4c138358367c4379bb04c3ba0c";
           configureFlags = [ "-fsystem-libyaml" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit containers directory
             filepath libyaml mtl resourcet scientific template-haskell text
             transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/yaml#readme";
           description = "Support for parsing and rendering YAML documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yes-precure5-command" = callPackage
        ({ mkDerivation, base, Cabal, containers, mtl, parsec, random
         , stdenv
         }:
         mkDerivation {
           pname = "yes-precure5-command";
           version = "5.5.3";
           sha256 = "27f2f2dcd81923a18450cda21a31585d0d3887afde504190667cb7dbf0a0af7e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base Cabal containers mtl parsec random
           ];
           executableHaskellDepends = [
             base Cabal containers mtl parsec random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/igrep/yes-precure5-command/";
           description = "Extended yes command to reproduce phrases in Yes! Precure 5";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yeshql" = callPackage
        ({ mkDerivation, base, stdenv, yeshql-core, yeshql-hdbc }:
         mkDerivation {
           pname = "yeshql";
           version = "4.1.0.1";
           sha256 = "c4c590682d6581cf49893bdcd3c2d0e4046d81240a7f5abd7bcaa17037c29db6";
           libraryHaskellDepends = [ base yeshql-core yeshql-hdbc ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tdammers/yeshql";
           description = "YesQL-style SQL database abstraction (legacy compatibility wrapper)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yeshql-core" = callPackage
        ({ mkDerivation, base, containers, convertible, filepath, parsec
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "yeshql-core";
           version = "4.1.0.2";
           sha256 = "c0db2a2f415846236e9c38a652dc38e56f2a68baa72b61bdf5c5238f1b6317fe";
           libraryHaskellDepends = [
             base containers convertible filepath parsec template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tdammers/yeshql";
           description = "YesQL-style SQL database abstraction (core)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yeshql-hdbc" = callPackage
        ({ mkDerivation, base, containers, convertible, filepath, HDBC
         , parsec, stdenv, template-haskell, yeshql-core
         }:
         mkDerivation {
           pname = "yeshql-hdbc";
           version = "4.1.0.2";
           sha256 = "f4ac521c6970d9a06d321e9f2b1143e6901c9875314281505aafcda3bd0352dc";
           libraryHaskellDepends = [
             base containers convertible filepath HDBC parsec template-haskell
             yeshql-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tdammers/yeshql";
           description = "YesQL-style SQL database abstraction (HDBC backend)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit
         , data-default-class, directory, fast-logger, monad-logger
         , semigroups, shakespeare, stdenv, streaming-commons
         , template-haskell, text, unix, unordered-containers, wai
         , wai-extra, wai-logger, warp, yaml, yesod-core, yesod-form
         , yesod-persistent
         }:
         mkDerivation {
           pname = "yesod";
           version = "1.6.0.1";
           sha256 = "1077e39bf9eb99e12cbac913d96f728bb635989e410e410a45400b4cbaa97884";
           libraryHaskellDepends = [
             aeson base bytestring conduit data-default-class directory
             fast-logger monad-logger semigroups shakespeare streaming-commons
             template-haskell text unix unordered-containers wai wai-extra
             wai-logger warp yaml yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Creation of type-safe, RESTful web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-alerts" = callPackage
        ({ mkDerivation, alerts, base, blaze-html, blaze-markup, safe
         , stdenv, text, yesod-core
         }:
         mkDerivation {
           pname = "yesod-alerts";
           version = "0.1.3.0";
           sha256 = "fbef9f900b51574ba910039fb1bfcff166bb6ac316972ba5330fc7df090cf4f4";
           libraryHaskellDepends = [
             alerts base blaze-html blaze-markup safe text yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alx741/yesod-alerts#readme";
           description = "Alert messages for the Yesod framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-auth" = callPackage
        ({ mkDerivation, aeson, authenticate, base, base16-bytestring
         , base64-bytestring, binary, blaze-builder, blaze-html
         , blaze-markup, bytestring, conduit, conduit-extra, containers
         , cryptonite, data-default, email-validate, file-embed, http-client
         , http-client-tls, http-conduit, http-types, memory, network-uri
         , nonce, persistent, random, safe, shakespeare, stdenv
         , template-haskell, text, time, transformers, unliftio
         , unliftio-core, unordered-containers, wai, yesod-core, yesod-form
         , yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth";
           version = "1.6.8.1";
           sha256 = "1287281454963bf34e881fcab2ccd34572a4db7f1fe502fc487d62c4b867f5fe";
           libraryHaskellDepends = [
             aeson authenticate base base16-bytestring base64-bytestring binary
             blaze-builder blaze-html blaze-markup bytestring conduit
             conduit-extra containers cryptonite data-default email-validate
             file-embed http-client http-client-tls http-conduit http-types
             memory network-uri nonce persistent random safe shakespeare
             template-haskell text time transformers unliftio unliftio-core
             unordered-containers wai yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Authentication for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth-hashdb" = callPackage
        ({ mkDerivation, aeson, base, bytestring, persistent, stdenv, text
         , yesod-auth, yesod-core, yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth-hashdb";
           version = "1.7.1.2";
           sha256 = "1bd6f50e66c9c5f01d358b67cd1db324a796627db00f12f5068f7226e5a3c681";
           libraryHaskellDepends = [
             aeson base bytestring persistent text yesod-auth yesod-core
             yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
           description = "Authentication plugin for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth-oauth2" = callPackage
        ({ mkDerivation, aeson, base, bytestring, errors, hoauth2
         , http-client, http-conduit, http-types, microlens, random
         , safe-exceptions, stdenv, text, uri-bytestring, yesod-auth
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-auth-oauth2";
           version = "0.6.1.2";
           sha256 = "5cf8566916f62ad137c06a8a20d344e2d5a8294371e5c8ec28b32d173030551e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring errors hoauth2 http-client http-conduit
             http-types microlens random safe-exceptions text uri-bytestring
             yesod-auth yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/thoughtbot/yesod-auth-oauth2";
           description = "OAuth 2.0 authentication plugins";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-bin" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, conduit, conduit-extra
         , containers, data-default-class, directory, file-embed, filepath
         , fsnotify, http-client, http-client-tls, http-reverse-proxy
         , http-types, network, optparse-applicative, process
         , project-template, say, split, stdenv, stm, streaming-commons, tar
         , text, time, transformers, transformers-compat, unliftio
         , unordered-containers, wai, wai-extra, warp, warp-tls, yaml, zlib
         }:
         mkDerivation {
           pname = "yesod-bin";
           version = "1.6.0.4";
           sha256 = "2a640ae3e41c4f4fc4c0349327a4ef54cd3cedcc28a880b41ea118c40827e473";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring Cabal conduit conduit-extra containers
             data-default-class directory file-embed filepath fsnotify
             http-client http-client-tls http-reverse-proxy http-types network
             optparse-applicative process project-template say split stm
             streaming-commons tar text time transformers transformers-compat
             unliftio unordered-containers wai wai-extra warp warp-tls yaml zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "The yesod helper executable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-core" = callPackage
        ({ mkDerivation, aeson, auto-update, base, blaze-html, blaze-markup
         , bytestring, case-insensitive, cereal, clientsession, conduit
         , conduit-extra, containers, cookie, deepseq, fast-logger
         , http-types, memory, monad-logger, mtl, parsec, path-pieces
         , primitive, random, resourcet, shakespeare, stdenv
         , template-haskell, text, time, transformers, unix-compat, unliftio
         , unordered-containers, vector, wai, wai-extra, wai-logger, warp
         , word8
         }:
         mkDerivation {
           pname = "yesod-core";
           version = "1.6.17.2";
           sha256 = "8eb30f211241f1b542e9f1fd6e49af25e134766b53ee0471799771db979e8e65";
           libraryHaskellDepends = [
             aeson auto-update base blaze-html blaze-markup bytestring
             case-insensitive cereal clientsession conduit conduit-extra
             containers cookie deepseq fast-logger http-types memory
             monad-logger mtl parsec path-pieces primitive random resourcet
             shakespeare template-haskell text time transformers unix-compat
             unliftio unordered-containers vector wai wai-extra wai-logger warp
             word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Creation of type-safe, RESTful web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-csp" = callPackage
        ({ mkDerivation, attoparsec, base, case-insensitive
         , mono-traversable, network-uri, semigroups, stdenv, syb
         , template-haskell, text, wai, yesod, yesod-core
         }:
         mkDerivation {
           pname = "yesod-csp";
           version = "0.2.5.0";
           sha256 = "257401c4e5a12524e567c8c9727ab88cb2d6a81e74caea528df9f0ce65326599";
           libraryHaskellDepends = [
             attoparsec base case-insensitive mono-traversable network-uri
             semigroups syb template-haskell text wai yesod yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "Add CSP headers to Yesod apps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-eventsource" = callPackage
        ({ mkDerivation, base, blaze-builder, conduit, stdenv, transformers
         , wai, wai-eventsource, wai-extra, yesod-core
         }:
         mkDerivation {
           pname = "yesod-eventsource";
           version = "1.6.0";
           sha256 = "6fceeca34d5e80c8a0d65ab95fab3c53807d1f18eb506abdef67a8f70d0e418b";
           libraryHaskellDepends = [
             base blaze-builder conduit transformers wai wai-eventsource
             wai-extra yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Server-sent events support for Yesod apps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-fb" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, crypto-api, fb
         , http-client-tls, http-conduit, stdenv, text, wai, yesod-core
         }:
         mkDerivation {
           pname = "yesod-fb";
           version = "0.5.0";
           sha256 = "de375004c12e89eec47738d60465c7c63b5f0c7bfc3591c70a35522fdc0841db";
           libraryHaskellDepends = [
             aeson base bytestring conduit crypto-api fb http-client-tls
             http-conduit text wai yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/yesod-fb";
           description = "Useful glue functions between the fb library and Yesod";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-form" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
         , blaze-markup, byteable, bytestring, containers, data-default
         , email-validate, network-uri, persistent, resourcet, semigroups
         , shakespeare, stdenv, text, time, transformers, wai, xss-sanitize
         , yesod-core, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-form";
           version = "1.6.7";
           sha256 = "ad645460ea52d57d231db6ad88229eb9dc5861ae9b97eba72a9799eb5b38de56";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder blaze-html blaze-markup
             byteable bytestring containers data-default email-validate
             network-uri persistent resourcet semigroups shakespeare text time
             transformers wai xss-sanitize yesod-core yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Form handling support for Yesod Web Framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-form-bootstrap4" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, shakespeare
         , stdenv, text, yesod-core, yesod-form
         }:
         mkDerivation {
           pname = "yesod-form-bootstrap4";
           version = "2.1.2";
           sha256 = "9320fb390eb8b6c9c841d599945a8ac4db49d9bbaec99ade49a6148f6644a1e7";
           libraryHaskellDepends = [
             base blaze-html blaze-markup shakespeare text yesod-core yesod-form
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/yesod-form-bootstrap4#readme";
           description = "renderBootstrap4";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-gitrepo" = callPackage
        ({ mkDerivation, base, directory, http-types, process, stdenv
         , temporary, text, unliftio, wai, yesod-core
         }:
         mkDerivation {
           pname = "yesod-gitrepo";
           version = "0.3.0";
           sha256 = "b03c67c506bc3fc402cb41759d69f2c3159af47959cbd964cb6531996084981e";
           libraryHaskellDepends = [
             base directory http-types process temporary text unliftio wai
             yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/yesod-gitrepo#readme";
           description = "Host content provided by a Git repo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-gitrev" = callPackage
        ({ mkDerivation, aeson, base, githash, stdenv, template-haskell
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-gitrev";
           version = "0.2.1";
           sha256 = "fc34c48eee25a15a55a6052fc1d15bb63bbc63514059483cb2212895f0eea671";
           libraryHaskellDepends = [
             aeson base githash template-haskell yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/yesod-gitrev";
           description = "A subsite for displaying git information";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-newsfeed" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
         , containers, shakespeare, stdenv, text, time, xml-conduit
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-newsfeed";
           version = "1.6.1.0";
           sha256 = "6d0b97592d74ca45e204f1876fb113a4830c5f35612b876175169af3d2f79615";
           libraryHaskellDepends = [
             base blaze-html blaze-markup bytestring containers shakespeare text
             time xml-conduit yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Helper functions and data types for producing News feeds";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-paginator" = callPackage
        ({ mkDerivation, base, blaze-markup, path-pieces, persistent, safe
         , stdenv, text, transformers, uri-encode, yesod-core
         }:
         mkDerivation {
           pname = "yesod-paginator";
           version = "1.1.0.2";
           sha256 = "49a3d10b93a16576bf0ca2f47221e7e34231b4af3d764296f0705a9175be1864";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-markup path-pieces persistent safe text transformers
             uri-encode yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pbrisbin/yesod-paginator";
           description = "A pagination approach for yesod";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-persistent" = callPackage
        ({ mkDerivation, base, blaze-builder, conduit, persistent
         , persistent-template, resource-pool, resourcet, stdenv
         , transformers, yesod-core
         }:
         mkDerivation {
           pname = "yesod-persistent";
           version = "1.6.0.4";
           sha256 = "8085b7a4c827e364bf581e03ebccc72dcff75c77001213d451ff7cd3bfe051bf";
           libraryHaskellDepends = [
             base blaze-builder conduit persistent persistent-template
             resource-pool resourcet transformers yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Some helpers for using Persistent from Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-recaptcha2" = callPackage
        ({ mkDerivation, aeson, base, classy-prelude, http-conduit, stdenv
         , yesod-auth, yesod-core, yesod-form
         }:
         mkDerivation {
           pname = "yesod-recaptcha2";
           version = "0.3.0";
           sha256 = "0c42aad0943a1a1518d23632b243709542690921bdf25262367357b74d906f89";
           libraryHaskellDepends = [
             aeson base classy-prelude http-conduit yesod-auth yesod-core
             yesod-form
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/yesod-recaptcha2#readme";
           description = "yesod recaptcha2";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-sitemap" = callPackage
        ({ mkDerivation, base, conduit, containers, data-default, stdenv
         , text, time, xml-conduit, xml-types, yesod-core
         }:
         mkDerivation {
           pname = "yesod-sitemap";
           version = "1.6.0";
           sha256 = "e5fa06abdcd57772fc74707ae663c63b45b172bce48117b70a4a9af15131dbd6";
           libraryHaskellDepends = [
             base conduit containers data-default text time xml-conduit
             xml-types yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Generate XML sitemaps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-static" = callPackage
        ({ mkDerivation, async, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, conduit, containers, cryptonite
         , cryptonite-conduit, css-text, data-default, directory, file-embed
         , filepath, hashable, hjsmin, http-types, memory, mime-types
         , process, stdenv, template-haskell, text, transformers
         , unix-compat, unordered-containers, wai, wai-app-static
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-static";
           version = "1.6.0.1";
           sha256 = "abe7e802f5efd064823b827074fea3613f4ba46115afedb5e2d96f919dcfa0c9";
           libraryHaskellDepends = [
             async attoparsec base base64-bytestring blaze-builder bytestring
             conduit containers cryptonite cryptonite-conduit css-text
             data-default directory file-embed filepath hashable hjsmin
             http-types memory mime-types process template-haskell text
             transformers unix-compat unordered-containers wai wai-app-static
             yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Static file serving subsite for Yesod Web Framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-test" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
         , bytestring, case-insensitive, conduit, containers, cookie
         , hspec-core, html-conduit, http-types, HUnit, memory, network
         , pretty-show, semigroups, stdenv, text, time, transformers, wai
         , wai-extra, xml-conduit, xml-types, yesod-core
         }:
         mkDerivation {
           pname = "yesod-test";
           version = "1.6.9";
           sha256 = "5379e217b1a3081b466090eed3b21181b43fab9aa9396fdfa3a53d7830a6456c";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder blaze-html bytestring
             case-insensitive conduit containers cookie hspec-core html-conduit
             http-types HUnit memory network pretty-show semigroups text time
             transformers wai wai-extra xml-conduit xml-types yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com";
           description = "integration testing for WAI/Yesod Applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-text-markdown" = callPackage
        ({ mkDerivation, aeson, base, markdown, persistent, shakespeare
         , stdenv, text, yesod-core, yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-text-markdown";
           version = "0.1.10";
           sha256 = "3cee8b3d8d84f30e8b825076d650afb05e79ebd22f34a21fc7ad7f45e1637ddc";
           libraryHaskellDepends = [
             aeson base markdown persistent shakespeare text yesod-core
             yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           description = "Yesod support for Text.Markdown.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-websockets" = callPackage
        ({ mkDerivation, base, conduit, mtl, stdenv, transformers, unliftio
         , wai-websockets, websockets, yesod-core
         }:
         mkDerivation {
           pname = "yesod-websockets";
           version = "0.3.0.2";
           sha256 = "01c69701ddb499c198984e440b05eecdabd285890793e711adbd8847103540cc";
           libraryHaskellDepends = [
             base conduit mtl transformers unliftio wai-websockets websockets
             yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/yesod";
           description = "WebSockets support for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yi-language" = callPackage
        ({ mkDerivation, alex, array, base, binary, containers
         , data-default, hashable, microlens-platform, oo-prototypes
         , pointedlist, regex-base, regex-tdfa, stdenv, template-haskell
         , transformers-base, unordered-containers
         }:
         mkDerivation {
           pname = "yi-language";
           version = "0.18.0";
           sha256 = "e86eaae8c0c21834d14dd9aaec50730df92c08e4ffa8846dc750d6b0033cc470";
           libraryHaskellDepends = [
             array base binary containers data-default hashable
             microlens-platform oo-prototypes pointedlist regex-base regex-tdfa
             template-haskell transformers-base unordered-containers
           ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Collection of language-related Yi libraries";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-rope" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, fingertree
         , stdenv, text
         }:
         mkDerivation {
           pname = "yi-rope";
           version = "0.11";
           sha256 = "9a9318693501bdbb3e8f3c19b0acd6c3cbd607a6e9d966201b613c41a1b71008";
           libraryHaskellDepends = [
             base binary bytestring deepseq fingertree text
           ];
           doHaddock = false;
           doCheck = false;
           description = "A rope data structure used by Yi";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yjtools" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "yjtools";
           version = "0.9.18";
           sha256 = "9b121c6fcece8241d87aec737458d49c0b76313e9e5e1e70f72b5f71cfc0eb8f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
           description = "some tools for Monad, List, Tuple and so on";
           license = "LGPL";
         }) {};
      "yoga" = callPackage
        ({ mkDerivation, base, bindings-DSL, ieee754, stdenv }:
         mkDerivation {
           pname = "yoga";
           version = "0.0.0.5";
           sha256 = "30020283ef7b241787bae810b1f563bd2c7a6ada69a582b8d7cc020365015f91";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bindings-DSL ieee754 ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to Facebook's Yoga layout library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "youtube" = callPackage
        ({ mkDerivation, base, bytestring, process, stdenv, utility-ht }:
         mkDerivation {
           pname = "youtube";
           version = "0.2.1.1";
           sha256 = "2e396a785f3d8f504f0e39ed8c87d0a748111ed40b26b950595d83c3fd840e25";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [ base bytestring process utility-ht ];
           doHaddock = false;
           doCheck = false;
           description = "Upload video to YouTube via YouTube API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zero" = callPackage
        ({ mkDerivation, base, semigroups, stdenv }:
         mkDerivation {
           pname = "zero";
           version = "0.1.5";
           sha256 = "9c52083fc246299bf63df0363e950e19a88c6f6fbab7891cfd9379f6180760f9";
           libraryHaskellDepends = [ base semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/zero";
           description = "Semigroups with absorption";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zeromq4-haskell" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, exceptions
         , monad-control, semigroups, stdenv, transformers
         , transformers-base, zeromq
         }:
         mkDerivation {
           pname = "zeromq4-haskell";
           version = "0.8.0";
           sha256 = "d3be996589e126e30cb000545c56907e44a2a1d10960e4c7698b7941d0dff66b";
           libraryHaskellDepends = [
             async base bytestring containers exceptions monad-control
             semigroups transformers transformers-base
           ];
           libraryPkgconfigDepends = [ zeromq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/zeromq-haskell/";
           description = "Bindings to ZeroMQ 4.x";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) zeromq;};
      "zeromq4-patterns" = callPackage
        ({ mkDerivation, async, base, binary, bytestring, exceptions
         , stdenv, stm, zeromq4-haskell
         }:
         mkDerivation {
           pname = "zeromq4-patterns";
           version = "0.3.1.0";
           sha256 = "74f3a82a72a22684449103c0786e290be2c14de9d48a3ea9d64a7cc063b33ed9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base binary bytestring exceptions stm zeromq4-haskell
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/zeromq4-patterns#readme";
           description = "Haskell implementation of several ZeroMQ patterns";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zim-parser" = callPackage
        ({ mkDerivation, array, base, base-compat, binary, binary-conduit
         , bytestring, conduit, conduit-extra, lzma, stdenv
         }:
         mkDerivation {
           pname = "zim-parser";
           version = "0.2.1.0";
           sha256 = "b27f6a395c54e0dac6926a5ea18b582aa21c5d91e31b53f8749f063947a15789";
           libraryHaskellDepends = [
             array base base-compat binary binary-conduit bytestring conduit
             conduit-extra lzma
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/robbinch/zim-parser#readme";
           description = "Read and parse ZIM files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "zip" = callPackage
        ({ mkDerivation, base, bytestring, bzlib-conduit, case-insensitive
         , cereal, conduit, conduit-extra, containers, digest, directory
         , dlist, exceptions, filepath, monad-control, mtl, resourcet
         , stdenv, text, time, transformers, transformers-base
         }:
         mkDerivation {
           pname = "zip";
           version = "1.2.0";
           sha256 = "b61de150884e376923e247f8f7386966d6d5d1804238c42fd874b61fe3b27dc9";
           revision = "2";
           editedCabalFile = "09ak8h11hm1jnpkvljradbj3a741s31k8cvyvwypr927khi5y9mp";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring bzlib-conduit case-insensitive cereal conduit
             conduit-extra containers digest directory dlist exceptions filepath
             monad-control mtl resourcet text time transformers
             transformers-base
           ];
           executableHaskellDepends = [ base filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/zip";
           description = "Operations on zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zip-archive" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , digest, directory, filepath, mtl, pretty, stdenv, text, time
         , unix, zlib
         }:
         mkDerivation {
           pname = "zip-archive";
           version = "0.4.1";
           sha256 = "c5d5c9976241dcc25b0d8753dc526bb1bfef60f30dee38c53a7ae56e6be9b1b1";
           revision = "1";
           editedCabalFile = "1mv6jns7zf0fi7lrhzk007g12v6x7yf5ycbj67rbh83xfkf4nxsi";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring containers digest directory filepath
             mtl pretty text time unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/zip-archive";
           description = "Library for creating and modifying zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zip-stream" = callPackage
        ({ mkDerivation, base, binary, binary-conduit, bytestring, conduit
         , conduit-extra, digest, directory, exceptions, filepath, mtl
         , primitive, resourcet, stdenv, text, time, transformers
         , transformers-base, zlib
         }:
         mkDerivation {
           pname = "zip-stream";
           version = "0.2.0.1";
           sha256 = "b7c45c612f1f53546923162d73c644b9704d5293b1e767108728d3c08b46a587";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary binary-conduit bytestring conduit conduit-extra digest
             exceptions mtl primitive resourcet text time transformers-base zlib
           ];
           executableHaskellDepends = [
             base bytestring conduit conduit-extra directory filepath resourcet
             text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "ZIP archive streaming using conduits";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zippers" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, fail, lens
         , profunctors, semigroupoids, semigroups, stdenv
         }:
         mkDerivation {
           pname = "zippers";
           version = "0.3";
           sha256 = "f5b6e0e73d151c3876f70428ff7684cdcb6d7418211d3ad120e325a8d17c3a43";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base fail lens profunctors semigroupoids semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/zippers/";
           description = "Traversal based zippers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zlib" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "zlib";
           version = "0.6.2.1";
           sha256 = "f0f810ff173560b60392db448455c0513b3239f48e43cb494b3733aa559621d0";
           revision = "1";
           editedCabalFile = "0i9g71jvdw22bi9bi8dm5khwzcsv6cv8yadmf7afklg4xigxykfk";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           description = "Compression and decompression in the gzip and zlib formats";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "zlib-bindings" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "zlib-bindings";
           version = "0.1.1.5";
           sha256 = "c83bb438f9b6c5fe860982731eb8ac7eff993e8b56cbc15ef5b471f229f79109";
           revision = "2";
           editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
           libraryHaskellDepends = [ base bytestring zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snapframework/zlib-bindings";
           description = "Low-level bindings to the zlib package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zlib-lens" = callPackage
        ({ mkDerivation, base, bytestring, profunctors, stdenv, zlib }:
         mkDerivation {
           pname = "zlib-lens";
           version = "0.1.2.1";
           sha256 = "e5a563453899e0896cfa3aed22a2fbfc67012990ace6d14631f31b704ff766eb";
           libraryHaskellDepends = [ base bytestring profunctors zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lens.github.io/";
           description = "Lenses for zlib";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zot" = callPackage
        ({ mkDerivation, base, monads-tf, stdenv }:
         mkDerivation {
           pname = "zot";
           version = "0.0.3";
           sha256 = "c8a9091b939e3f74aca6be3007a0066c8a1de69da4b62e22891bed543f8a2b32";
           revision = "1";
           editedCabalFile = "04gsbs6fvwpjjg1f6g1j17dxlfzsci9vmirk7mwqwmm9ha0a4hxm";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [ base monads-tf ];
           doHaddock = false;
           doCheck = false;
           description = "Zot language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zstd" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, ghc-prim, stdenv }:
         mkDerivation {
           pname = "zstd";
           version = "0.1.1.2";
           sha256 = "e24b5259793d5f838e45ee751a59867b8db9ddabc5bc8ffb5423f0fd4d22fa90";
           libraryHaskellDepends = [ base bytestring deepseq ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/luispedro/hs-zstd";
           description = "Haskell bindings to the Zstandard compression algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ztail" = callPackage
        ({ mkDerivation, array, base, bytestring, filepath, hinotify
         , process, regex-posix, stdenv, time, unix, unordered-containers
         }:
         mkDerivation {
           pname = "ztail";
           version = "1.2.0.2";
           sha256 = "a14341d51da6dbef9f0edcdefe185dbd7726880ec4e230855fb9871de7c07717";
           revision = "1";
           editedCabalFile = "0d0cpgb0v849zxl12c2gkm3x4nmyfycka1pcfix43lawx62rky8s";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base bytestring filepath hinotify process regex-posix time
             unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Multi-file, colored, filtered log tailer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stack2nix" = callPackage
        ({ mkDerivation, async, base, bytestring, Cabal, cabal2nix
         , containers, directory, distribution-nixpkgs, filepath, hackage-db
         , language-nix, lens, optparse-applicative, path, pretty, process
         , regex-pcre, SafeSemaphore, stack, stdenv, temporary, text, time
         }:
         mkDerivation {
           pname = "stack2nix";
           version = "0.2.3";
           src = ./.;
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring Cabal cabal2nix containers directory
             distribution-nixpkgs filepath hackage-db language-nix lens
             optparse-applicative path pretty process regex-pcre SafeSemaphore
             stack temporary text time
           ];
           executableHaskellDepends = [
             base Cabal optparse-applicative time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Convert stack.yaml files into Nix build instructions.";
           license = stdenv.lib.licenses.mit;
         }) {};
    };
in compiler.override {
  initialPackages = stackPackages;
  configurationCommon = { ... }: self: super: {};
  compilerConfig = self: super: {};
}

